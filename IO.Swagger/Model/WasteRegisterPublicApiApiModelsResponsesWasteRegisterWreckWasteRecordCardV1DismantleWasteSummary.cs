/* 
 * v1 Waste Register public Api
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// WasteRegisterPublicApiApiModelsResponsesWasteRegisterWreckWasteRecordCardV1DismantleWasteSummary
    /// </summary>
    [DataContract]
    public partial class WasteRegisterPublicApiApiModelsResponsesWasteRegisterWreckWasteRecordCardV1DismantleWasteSummary :  IEquatable<WasteRegisterPublicApiApiModelsResponsesWasteRegisterWreckWasteRecordCardV1DismantleWasteSummary>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="WasteRegisterPublicApiApiModelsResponsesWasteRegisterWreckWasteRecordCardV1DismantleWasteSummary" /> class.
        /// </summary>
        /// <param name="dismantleProcessedWasteSummary">Zestawienie danych - Przetwarzane odpady.</param>
        /// <param name="dismantleProducedWasteSummary">Zestawienie danych - Wytwarzane odpady.</param>
        /// <param name="dismantleTransferredWasteSummary">Zestawienie danych - Przekazane odpady.</param>
        public WasteRegisterPublicApiApiModelsResponsesWasteRegisterWreckWasteRecordCardV1DismantleWasteSummary(Dictionary<string, double?> dismantleProcessedWasteSummary = default(Dictionary<string, double?>), Dictionary<string, double?> dismantleProducedWasteSummary = default(Dictionary<string, double?>), Dictionary<string, double?> dismantleTransferredWasteSummary = default(Dictionary<string, double?>))
        {
            this.DismantleProcessedWasteSummary = dismantleProcessedWasteSummary;
            this.DismantleProducedWasteSummary = dismantleProducedWasteSummary;
            this.DismantleTransferredWasteSummary = dismantleTransferredWasteSummary;
        }
        
        /// <summary>
        /// Zestawienie danych - Przetwarzane odpady
        /// </summary>
        /// <value>Zestawienie danych - Przetwarzane odpady</value>
        [DataMember(Name="dismantleProcessedWasteSummary", EmitDefaultValue=false)]
        public Dictionary<string, double?> DismantleProcessedWasteSummary { get; set; }

        /// <summary>
        /// Zestawienie danych - Wytwarzane odpady
        /// </summary>
        /// <value>Zestawienie danych - Wytwarzane odpady</value>
        [DataMember(Name="dismantleProducedWasteSummary", EmitDefaultValue=false)]
        public Dictionary<string, double?> DismantleProducedWasteSummary { get; set; }

        /// <summary>
        /// Zestawienie danych - Przekazane odpady
        /// </summary>
        /// <value>Zestawienie danych - Przekazane odpady</value>
        [DataMember(Name="dismantleTransferredWasteSummary", EmitDefaultValue=false)]
        public Dictionary<string, double?> DismantleTransferredWasteSummary { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class WasteRegisterPublicApiApiModelsResponsesWasteRegisterWreckWasteRecordCardV1DismantleWasteSummary {\n");
            sb.Append("  DismantleProcessedWasteSummary: ").Append(DismantleProcessedWasteSummary).Append("\n");
            sb.Append("  DismantleProducedWasteSummary: ").Append(DismantleProducedWasteSummary).Append("\n");
            sb.Append("  DismantleTransferredWasteSummary: ").Append(DismantleTransferredWasteSummary).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as WasteRegisterPublicApiApiModelsResponsesWasteRegisterWreckWasteRecordCardV1DismantleWasteSummary);
        }

        /// <summary>
        /// Returns true if WasteRegisterPublicApiApiModelsResponsesWasteRegisterWreckWasteRecordCardV1DismantleWasteSummary instances are equal
        /// </summary>
        /// <param name="input">Instance of WasteRegisterPublicApiApiModelsResponsesWasteRegisterWreckWasteRecordCardV1DismantleWasteSummary to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(WasteRegisterPublicApiApiModelsResponsesWasteRegisterWreckWasteRecordCardV1DismantleWasteSummary input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.DismantleProcessedWasteSummary == input.DismantleProcessedWasteSummary ||
                    this.DismantleProcessedWasteSummary != null &&
                    this.DismantleProcessedWasteSummary.SequenceEqual(input.DismantleProcessedWasteSummary)
                ) && 
                (
                    this.DismantleProducedWasteSummary == input.DismantleProducedWasteSummary ||
                    this.DismantleProducedWasteSummary != null &&
                    this.DismantleProducedWasteSummary.SequenceEqual(input.DismantleProducedWasteSummary)
                ) && 
                (
                    this.DismantleTransferredWasteSummary == input.DismantleTransferredWasteSummary ||
                    this.DismantleTransferredWasteSummary != null &&
                    this.DismantleTransferredWasteSummary.SequenceEqual(input.DismantleTransferredWasteSummary)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.DismantleProcessedWasteSummary != null)
                    hashCode = hashCode * 59 + this.DismantleProcessedWasteSummary.GetHashCode();
                if (this.DismantleProducedWasteSummary != null)
                    hashCode = hashCode * 59 + this.DismantleProducedWasteSummary.GetHashCode();
                if (this.DismantleTransferredWasteSummary != null)
                    hashCode = hashCode * 59 + this.DismantleTransferredWasteSummary.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
