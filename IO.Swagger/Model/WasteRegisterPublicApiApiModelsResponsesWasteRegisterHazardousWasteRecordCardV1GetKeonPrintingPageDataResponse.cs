/* 
 * v1 Waste Register public Api
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// WasteRegisterPublicApiApiModelsResponsesWasteRegisterHazardousWasteRecordCardV1GetKeonPrintingPageDataResponse
    /// </summary>
    [DataContract]
    public partial class WasteRegisterPublicApiApiModelsResponsesWasteRegisterHazardousWasteRecordCardV1GetKeonPrintingPageDataResponse :  IEquatable<WasteRegisterPublicApiApiModelsResponsesWasteRegisterHazardousWasteRecordCardV1GetKeonPrintingPageDataResponse>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="WasteRegisterPublicApiApiModelsResponsesWasteRegisterHazardousWasteRecordCardV1GetKeonPrintingPageDataResponse" /> class.
        /// </summary>
        /// <param name="cardNumber">Numer karty.</param>
        /// <param name="calendarYear">Rok kalendarzowy.</param>
        /// <param name="wasteCodeAndDescription">Kod i opis odpadu.</param>
        /// <param name="wasteCodeExtended">Kod ex.</param>
        /// <param name="wasteCodeExtendedDescription">Rodzaj odpadu ex.</param>
        /// <param name="hazardousWasteReclassification">Zmiana statusu odpadów niebezpiecznych na odpady inne niż niebezpieczne.</param>
        /// <param name="hazardousWasteReclassificationDescription">Rodzaj odpadu.</param>
        /// <param name="companyName">Nazwa lub imię i nazwisko.</param>
        /// <param name="identificationNumber">Numer rejestrowy.</param>
        /// <param name="nip">NIP.</param>
        /// <param name="nipEu">nipEu.</param>
        /// <param name="address">address.</param>
        /// <param name="totalDealerWasteMass">totalDealerWasteMass.</param>
        /// <param name="totalBrokerWasteMass">totalBrokerWasteMass.</param>
        /// <param name="keonPrintingPageDealerItems">keonPrintingPageDealerItems.</param>
        /// <param name="keonPrintingPageBrokerItems">keonPrintingPageBrokerItems.</param>
        public WasteRegisterPublicApiApiModelsResponsesWasteRegisterHazardousWasteRecordCardV1GetKeonPrintingPageDataResponse(string cardNumber = default(string), string calendarYear = default(string), string wasteCodeAndDescription = default(string), bool? wasteCodeExtended = default(bool?), string wasteCodeExtendedDescription = default(string), bool? hazardousWasteReclassification = default(bool?), string hazardousWasteReclassificationDescription = default(string), string companyName = default(string), string identificationNumber = default(string), string nip = default(string), string nipEu = default(string), string address = default(string), string totalDealerWasteMass = default(string), string totalBrokerWasteMass = default(string), List<WasteRegisterPublicApiApiModelsResponsesWasteRegisterHazardousWasteRecordCardV1KeonPrintingPageRowDto> keonPrintingPageDealerItems = default(List<WasteRegisterPublicApiApiModelsResponsesWasteRegisterHazardousWasteRecordCardV1KeonPrintingPageRowDto>), List<WasteRegisterPublicApiApiModelsResponsesWasteRegisterHazardousWasteRecordCardV1KeonPrintingPageRowDto> keonPrintingPageBrokerItems = default(List<WasteRegisterPublicApiApiModelsResponsesWasteRegisterHazardousWasteRecordCardV1KeonPrintingPageRowDto>))
        {
            this.CardNumber = cardNumber;
            this.CalendarYear = calendarYear;
            this.WasteCodeAndDescription = wasteCodeAndDescription;
            this.WasteCodeExtended = wasteCodeExtended;
            this.WasteCodeExtendedDescription = wasteCodeExtendedDescription;
            this.HazardousWasteReclassification = hazardousWasteReclassification;
            this.HazardousWasteReclassificationDescription = hazardousWasteReclassificationDescription;
            this.CompanyName = companyName;
            this.IdentificationNumber = identificationNumber;
            this.Nip = nip;
            this.NipEu = nipEu;
            this.Address = address;
            this.TotalDealerWasteMass = totalDealerWasteMass;
            this.TotalBrokerWasteMass = totalBrokerWasteMass;
            this.KeonPrintingPageDealerItems = keonPrintingPageDealerItems;
            this.KeonPrintingPageBrokerItems = keonPrintingPageBrokerItems;
        }
        
        /// <summary>
        /// Numer karty
        /// </summary>
        /// <value>Numer karty</value>
        [DataMember(Name="cardNumber", EmitDefaultValue=false)]
        public string CardNumber { get; set; }

        /// <summary>
        /// Rok kalendarzowy
        /// </summary>
        /// <value>Rok kalendarzowy</value>
        [DataMember(Name="calendarYear", EmitDefaultValue=false)]
        public string CalendarYear { get; set; }

        /// <summary>
        /// Kod i opis odpadu
        /// </summary>
        /// <value>Kod i opis odpadu</value>
        [DataMember(Name="wasteCodeAndDescription", EmitDefaultValue=false)]
        public string WasteCodeAndDescription { get; set; }

        /// <summary>
        /// Kod ex
        /// </summary>
        /// <value>Kod ex</value>
        [DataMember(Name="wasteCodeExtended", EmitDefaultValue=false)]
        public bool? WasteCodeExtended { get; set; }

        /// <summary>
        /// Rodzaj odpadu ex
        /// </summary>
        /// <value>Rodzaj odpadu ex</value>
        [DataMember(Name="wasteCodeExtendedDescription", EmitDefaultValue=false)]
        public string WasteCodeExtendedDescription { get; set; }

        /// <summary>
        /// Zmiana statusu odpadów niebezpiecznych na odpady inne niż niebezpieczne
        /// </summary>
        /// <value>Zmiana statusu odpadów niebezpiecznych na odpady inne niż niebezpieczne</value>
        [DataMember(Name="hazardousWasteReclassification", EmitDefaultValue=false)]
        public bool? HazardousWasteReclassification { get; set; }

        /// <summary>
        /// Rodzaj odpadu
        /// </summary>
        /// <value>Rodzaj odpadu</value>
        [DataMember(Name="hazardousWasteReclassificationDescription", EmitDefaultValue=false)]
        public string HazardousWasteReclassificationDescription { get; set; }

        /// <summary>
        /// Nazwa lub imię i nazwisko
        /// </summary>
        /// <value>Nazwa lub imię i nazwisko</value>
        [DataMember(Name="companyName", EmitDefaultValue=false)]
        public string CompanyName { get; set; }

        /// <summary>
        /// Numer rejestrowy
        /// </summary>
        /// <value>Numer rejestrowy</value>
        [DataMember(Name="identificationNumber", EmitDefaultValue=false)]
        public string IdentificationNumber { get; set; }

        /// <summary>
        /// NIP
        /// </summary>
        /// <value>NIP</value>
        [DataMember(Name="nip", EmitDefaultValue=false)]
        public string Nip { get; set; }

        /// <summary>
        /// Gets or Sets NipEu
        /// </summary>
        [DataMember(Name="nipEu", EmitDefaultValue=false)]
        public string NipEu { get; set; }

        /// <summary>
        /// Gets or Sets Address
        /// </summary>
        [DataMember(Name="address", EmitDefaultValue=false)]
        public string Address { get; set; }

        /// <summary>
        /// Gets or Sets TotalDealerWasteMass
        /// </summary>
        [DataMember(Name="totalDealerWasteMass", EmitDefaultValue=false)]
        public string TotalDealerWasteMass { get; set; }

        /// <summary>
        /// Gets or Sets TotalBrokerWasteMass
        /// </summary>
        [DataMember(Name="totalBrokerWasteMass", EmitDefaultValue=false)]
        public string TotalBrokerWasteMass { get; set; }

        /// <summary>
        /// Gets or Sets KeonPrintingPageDealerItems
        /// </summary>
        [DataMember(Name="keonPrintingPageDealerItems", EmitDefaultValue=false)]
        public List<WasteRegisterPublicApiApiModelsResponsesWasteRegisterHazardousWasteRecordCardV1KeonPrintingPageRowDto> KeonPrintingPageDealerItems { get; set; }

        /// <summary>
        /// Gets or Sets KeonPrintingPageBrokerItems
        /// </summary>
        [DataMember(Name="keonPrintingPageBrokerItems", EmitDefaultValue=false)]
        public List<WasteRegisterPublicApiApiModelsResponsesWasteRegisterHazardousWasteRecordCardV1KeonPrintingPageRowDto> KeonPrintingPageBrokerItems { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class WasteRegisterPublicApiApiModelsResponsesWasteRegisterHazardousWasteRecordCardV1GetKeonPrintingPageDataResponse {\n");
            sb.Append("  CardNumber: ").Append(CardNumber).Append("\n");
            sb.Append("  CalendarYear: ").Append(CalendarYear).Append("\n");
            sb.Append("  WasteCodeAndDescription: ").Append(WasteCodeAndDescription).Append("\n");
            sb.Append("  WasteCodeExtended: ").Append(WasteCodeExtended).Append("\n");
            sb.Append("  WasteCodeExtendedDescription: ").Append(WasteCodeExtendedDescription).Append("\n");
            sb.Append("  HazardousWasteReclassification: ").Append(HazardousWasteReclassification).Append("\n");
            sb.Append("  HazardousWasteReclassificationDescription: ").Append(HazardousWasteReclassificationDescription).Append("\n");
            sb.Append("  CompanyName: ").Append(CompanyName).Append("\n");
            sb.Append("  IdentificationNumber: ").Append(IdentificationNumber).Append("\n");
            sb.Append("  Nip: ").Append(Nip).Append("\n");
            sb.Append("  NipEu: ").Append(NipEu).Append("\n");
            sb.Append("  Address: ").Append(Address).Append("\n");
            sb.Append("  TotalDealerWasteMass: ").Append(TotalDealerWasteMass).Append("\n");
            sb.Append("  TotalBrokerWasteMass: ").Append(TotalBrokerWasteMass).Append("\n");
            sb.Append("  KeonPrintingPageDealerItems: ").Append(KeonPrintingPageDealerItems).Append("\n");
            sb.Append("  KeonPrintingPageBrokerItems: ").Append(KeonPrintingPageBrokerItems).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as WasteRegisterPublicApiApiModelsResponsesWasteRegisterHazardousWasteRecordCardV1GetKeonPrintingPageDataResponse);
        }

        /// <summary>
        /// Returns true if WasteRegisterPublicApiApiModelsResponsesWasteRegisterHazardousWasteRecordCardV1GetKeonPrintingPageDataResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of WasteRegisterPublicApiApiModelsResponsesWasteRegisterHazardousWasteRecordCardV1GetKeonPrintingPageDataResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(WasteRegisterPublicApiApiModelsResponsesWasteRegisterHazardousWasteRecordCardV1GetKeonPrintingPageDataResponse input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.CardNumber == input.CardNumber ||
                    (this.CardNumber != null &&
                    this.CardNumber.Equals(input.CardNumber))
                ) && 
                (
                    this.CalendarYear == input.CalendarYear ||
                    (this.CalendarYear != null &&
                    this.CalendarYear.Equals(input.CalendarYear))
                ) && 
                (
                    this.WasteCodeAndDescription == input.WasteCodeAndDescription ||
                    (this.WasteCodeAndDescription != null &&
                    this.WasteCodeAndDescription.Equals(input.WasteCodeAndDescription))
                ) && 
                (
                    this.WasteCodeExtended == input.WasteCodeExtended ||
                    (this.WasteCodeExtended != null &&
                    this.WasteCodeExtended.Equals(input.WasteCodeExtended))
                ) && 
                (
                    this.WasteCodeExtendedDescription == input.WasteCodeExtendedDescription ||
                    (this.WasteCodeExtendedDescription != null &&
                    this.WasteCodeExtendedDescription.Equals(input.WasteCodeExtendedDescription))
                ) && 
                (
                    this.HazardousWasteReclassification == input.HazardousWasteReclassification ||
                    (this.HazardousWasteReclassification != null &&
                    this.HazardousWasteReclassification.Equals(input.HazardousWasteReclassification))
                ) && 
                (
                    this.HazardousWasteReclassificationDescription == input.HazardousWasteReclassificationDescription ||
                    (this.HazardousWasteReclassificationDescription != null &&
                    this.HazardousWasteReclassificationDescription.Equals(input.HazardousWasteReclassificationDescription))
                ) && 
                (
                    this.CompanyName == input.CompanyName ||
                    (this.CompanyName != null &&
                    this.CompanyName.Equals(input.CompanyName))
                ) && 
                (
                    this.IdentificationNumber == input.IdentificationNumber ||
                    (this.IdentificationNumber != null &&
                    this.IdentificationNumber.Equals(input.IdentificationNumber))
                ) && 
                (
                    this.Nip == input.Nip ||
                    (this.Nip != null &&
                    this.Nip.Equals(input.Nip))
                ) && 
                (
                    this.NipEu == input.NipEu ||
                    (this.NipEu != null &&
                    this.NipEu.Equals(input.NipEu))
                ) && 
                (
                    this.Address == input.Address ||
                    (this.Address != null &&
                    this.Address.Equals(input.Address))
                ) && 
                (
                    this.TotalDealerWasteMass == input.TotalDealerWasteMass ||
                    (this.TotalDealerWasteMass != null &&
                    this.TotalDealerWasteMass.Equals(input.TotalDealerWasteMass))
                ) && 
                (
                    this.TotalBrokerWasteMass == input.TotalBrokerWasteMass ||
                    (this.TotalBrokerWasteMass != null &&
                    this.TotalBrokerWasteMass.Equals(input.TotalBrokerWasteMass))
                ) && 
                (
                    this.KeonPrintingPageDealerItems == input.KeonPrintingPageDealerItems ||
                    this.KeonPrintingPageDealerItems != null &&
                    this.KeonPrintingPageDealerItems.SequenceEqual(input.KeonPrintingPageDealerItems)
                ) && 
                (
                    this.KeonPrintingPageBrokerItems == input.KeonPrintingPageBrokerItems ||
                    this.KeonPrintingPageBrokerItems != null &&
                    this.KeonPrintingPageBrokerItems.SequenceEqual(input.KeonPrintingPageBrokerItems)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.CardNumber != null)
                    hashCode = hashCode * 59 + this.CardNumber.GetHashCode();
                if (this.CalendarYear != null)
                    hashCode = hashCode * 59 + this.CalendarYear.GetHashCode();
                if (this.WasteCodeAndDescription != null)
                    hashCode = hashCode * 59 + this.WasteCodeAndDescription.GetHashCode();
                if (this.WasteCodeExtended != null)
                    hashCode = hashCode * 59 + this.WasteCodeExtended.GetHashCode();
                if (this.WasteCodeExtendedDescription != null)
                    hashCode = hashCode * 59 + this.WasteCodeExtendedDescription.GetHashCode();
                if (this.HazardousWasteReclassification != null)
                    hashCode = hashCode * 59 + this.HazardousWasteReclassification.GetHashCode();
                if (this.HazardousWasteReclassificationDescription != null)
                    hashCode = hashCode * 59 + this.HazardousWasteReclassificationDescription.GetHashCode();
                if (this.CompanyName != null)
                    hashCode = hashCode * 59 + this.CompanyName.GetHashCode();
                if (this.IdentificationNumber != null)
                    hashCode = hashCode * 59 + this.IdentificationNumber.GetHashCode();
                if (this.Nip != null)
                    hashCode = hashCode * 59 + this.Nip.GetHashCode();
                if (this.NipEu != null)
                    hashCode = hashCode * 59 + this.NipEu.GetHashCode();
                if (this.Address != null)
                    hashCode = hashCode * 59 + this.Address.GetHashCode();
                if (this.TotalDealerWasteMass != null)
                    hashCode = hashCode * 59 + this.TotalDealerWasteMass.GetHashCode();
                if (this.TotalBrokerWasteMass != null)
                    hashCode = hashCode * 59 + this.TotalBrokerWasteMass.GetHashCode();
                if (this.KeonPrintingPageDealerItems != null)
                    hashCode = hashCode * 59 + this.KeonPrintingPageDealerItems.GetHashCode();
                if (this.KeonPrintingPageBrokerItems != null)
                    hashCode = hashCode * 59 + this.KeonPrintingPageBrokerItems.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
