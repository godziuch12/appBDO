/* 
 * v1 Waste Register public Api
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// WasteRegisterPublicApiApiModelsResponsesWasteRegisterWasteTransferCardV1KpoAsSenderSearchResultDto
    /// </summary>
    [DataContract]
    public partial class WasteRegisterPublicApiApiModelsResponsesWasteRegisterWasteTransferCardV1KpoAsSenderSearchResultDto :  IEquatable<WasteRegisterPublicApiApiModelsResponsesWasteRegisterWasteTransferCardV1KpoAsSenderSearchResultDto>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="WasteRegisterPublicApiApiModelsResponsesWasteRegisterWasteTransferCardV1KpoAsSenderSearchResultDto" /> class.
        /// </summary>
        /// <param name="plannedTransportTime">Planowana data i godzina transportu.</param>
        /// <param name="realTransportTime">Rzeczywista data i godzina transportu.</param>
        /// <param name="wasteCode">Kod odpadu.</param>
        /// <param name="wasteCodeDescription">Opis kodu odpadu.</param>
        /// <param name="vehicleRegNumber">Numer rejestracyjny środka transportu.</param>
        /// <param name="cardStatus">Status Karty Przekazania Odpadów.</param>
        /// <param name="cardNumber">Numer Karty Przekazania Odpadów.</param>
        /// <param name="cardStatusCodeName">Oznaczenie kodowe statusu karty.</param>
        /// <param name="senderName">Nazwa przekazującego.</param>
        /// <param name="receiverName">Nazwa przejmującego.</param>
        /// <param name="kpoId">Id karty przekazania odpadów.</param>
        /// <param name="kpoLastModifiedAt">kpoLastModifiedAt.</param>
        /// <param name="senderFirstNameAndLastName">Imię i Nazwisko przekazującego.</param>
        /// <param name="receiverFirstAndLastName">Imię i Nazwisko przejmującego.</param>
        /// <param name="revisionNumber">Numer korekty.</param>
        /// <param name="cardRejectionTime">Data odrzucenia.</param>
        /// <param name="wasteCodeExtended">Kod ex.</param>
        /// <param name="wasteCodeExtendedDescription">Rodzaj odpadu ex.</param>
        /// <param name="hazardousWasteReclassification">Zmiana statusu odpadów niebezpiecznych na odpady inne niż niebezpieczne.</param>
        /// <param name="hazardousWasteReclassificationDescription">Rodzaj odpadu.</param>
        public WasteRegisterPublicApiApiModelsResponsesWasteRegisterWasteTransferCardV1KpoAsSenderSearchResultDto(DateTime? plannedTransportTime = default(DateTime?), DateTime? realTransportTime = default(DateTime?), string wasteCode = default(string), string wasteCodeDescription = default(string), string vehicleRegNumber = default(string), string cardStatus = default(string), string cardNumber = default(string), string cardStatusCodeName = default(string), string senderName = default(string), string receiverName = default(string), Guid? kpoId = default(Guid?), DateTime? kpoLastModifiedAt = default(DateTime?), string senderFirstNameAndLastName = default(string), string receiverFirstAndLastName = default(string), int? revisionNumber = default(int?), DateTime? cardRejectionTime = default(DateTime?), bool? wasteCodeExtended = default(bool?), string wasteCodeExtendedDescription = default(string), bool? hazardousWasteReclassification = default(bool?), string hazardousWasteReclassificationDescription = default(string))
        {
            this.PlannedTransportTime = plannedTransportTime;
            this.RealTransportTime = realTransportTime;
            this.WasteCode = wasteCode;
            this.WasteCodeDescription = wasteCodeDescription;
            this.VehicleRegNumber = vehicleRegNumber;
            this.CardStatus = cardStatus;
            this.CardNumber = cardNumber;
            this.CardStatusCodeName = cardStatusCodeName;
            this.SenderName = senderName;
            this.ReceiverName = receiverName;
            this.KpoId = kpoId;
            this.KpoLastModifiedAt = kpoLastModifiedAt;
            this.SenderFirstNameAndLastName = senderFirstNameAndLastName;
            this.ReceiverFirstAndLastName = receiverFirstAndLastName;
            this.RevisionNumber = revisionNumber;
            this.CardRejectionTime = cardRejectionTime;
            this.WasteCodeExtended = wasteCodeExtended;
            this.WasteCodeExtendedDescription = wasteCodeExtendedDescription;
            this.HazardousWasteReclassification = hazardousWasteReclassification;
            this.HazardousWasteReclassificationDescription = hazardousWasteReclassificationDescription;
        }
        
        /// <summary>
        /// Planowana data i godzina transportu
        /// </summary>
        /// <value>Planowana data i godzina transportu</value>
        [DataMember(Name="plannedTransportTime", EmitDefaultValue=false)]
        public DateTime? PlannedTransportTime { get; set; }

        /// <summary>
        /// Rzeczywista data i godzina transportu
        /// </summary>
        /// <value>Rzeczywista data i godzina transportu</value>
        [DataMember(Name="realTransportTime", EmitDefaultValue=false)]
        public DateTime? RealTransportTime { get; set; }

        /// <summary>
        /// Kod odpadu
        /// </summary>
        /// <value>Kod odpadu</value>
        [DataMember(Name="wasteCode", EmitDefaultValue=false)]
        public string WasteCode { get; set; }

        /// <summary>
        /// Opis kodu odpadu
        /// </summary>
        /// <value>Opis kodu odpadu</value>
        [DataMember(Name="wasteCodeDescription", EmitDefaultValue=false)]
        public string WasteCodeDescription { get; set; }

        /// <summary>
        /// Numer rejestracyjny środka transportu
        /// </summary>
        /// <value>Numer rejestracyjny środka transportu</value>
        [DataMember(Name="vehicleRegNumber", EmitDefaultValue=false)]
        public string VehicleRegNumber { get; set; }

        /// <summary>
        /// Status Karty Przekazania Odpadów
        /// </summary>
        /// <value>Status Karty Przekazania Odpadów</value>
        [DataMember(Name="cardStatus", EmitDefaultValue=false)]
        public string CardStatus { get; set; }

        /// <summary>
        /// Numer Karty Przekazania Odpadów
        /// </summary>
        /// <value>Numer Karty Przekazania Odpadów</value>
        [DataMember(Name="cardNumber", EmitDefaultValue=false)]
        public string CardNumber { get; set; }

        /// <summary>
        /// Oznaczenie kodowe statusu karty
        /// </summary>
        /// <value>Oznaczenie kodowe statusu karty</value>
        [DataMember(Name="cardStatusCodeName", EmitDefaultValue=false)]
        public string CardStatusCodeName { get; set; }

        /// <summary>
        /// Nazwa przekazującego
        /// </summary>
        /// <value>Nazwa przekazującego</value>
        [DataMember(Name="senderName", EmitDefaultValue=false)]
        public string SenderName { get; set; }

        /// <summary>
        /// Nazwa przejmującego
        /// </summary>
        /// <value>Nazwa przejmującego</value>
        [DataMember(Name="receiverName", EmitDefaultValue=false)]
        public string ReceiverName { get; set; }

        /// <summary>
        /// Id karty przekazania odpadów
        /// </summary>
        /// <value>Id karty przekazania odpadów</value>
        [DataMember(Name="kpoId", EmitDefaultValue=false)]
        public Guid? KpoId { get; set; }

        /// <summary>
        /// Gets or Sets KpoLastModifiedAt
        /// </summary>
        [DataMember(Name="kpoLastModifiedAt", EmitDefaultValue=false)]
        public DateTime? KpoLastModifiedAt { get; set; }

        /// <summary>
        /// Imię i Nazwisko przekazującego
        /// </summary>
        /// <value>Imię i Nazwisko przekazującego</value>
        [DataMember(Name="senderFirstNameAndLastName", EmitDefaultValue=false)]
        public string SenderFirstNameAndLastName { get; set; }

        /// <summary>
        /// Imię i Nazwisko przejmującego
        /// </summary>
        /// <value>Imię i Nazwisko przejmującego</value>
        [DataMember(Name="receiverFirstAndLastName", EmitDefaultValue=false)]
        public string ReceiverFirstAndLastName { get; set; }

        /// <summary>
        /// Numer korekty
        /// </summary>
        /// <value>Numer korekty</value>
        [DataMember(Name="revisionNumber", EmitDefaultValue=false)]
        public int? RevisionNumber { get; set; }

        /// <summary>
        /// Data odrzucenia
        /// </summary>
        /// <value>Data odrzucenia</value>
        [DataMember(Name="cardRejectionTime", EmitDefaultValue=false)]
        public DateTime? CardRejectionTime { get; set; }

        /// <summary>
        /// Kod ex
        /// </summary>
        /// <value>Kod ex</value>
        [DataMember(Name="wasteCodeExtended", EmitDefaultValue=false)]
        public bool? WasteCodeExtended { get; set; }

        /// <summary>
        /// Rodzaj odpadu ex
        /// </summary>
        /// <value>Rodzaj odpadu ex</value>
        [DataMember(Name="wasteCodeExtendedDescription", EmitDefaultValue=false)]
        public string WasteCodeExtendedDescription { get; set; }

        /// <summary>
        /// Zmiana statusu odpadów niebezpiecznych na odpady inne niż niebezpieczne
        /// </summary>
        /// <value>Zmiana statusu odpadów niebezpiecznych na odpady inne niż niebezpieczne</value>
        [DataMember(Name="hazardousWasteReclassification", EmitDefaultValue=false)]
        public bool? HazardousWasteReclassification { get; set; }

        /// <summary>
        /// Rodzaj odpadu
        /// </summary>
        /// <value>Rodzaj odpadu</value>
        [DataMember(Name="hazardousWasteReclassificationDescription", EmitDefaultValue=false)]
        public string HazardousWasteReclassificationDescription { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class WasteRegisterPublicApiApiModelsResponsesWasteRegisterWasteTransferCardV1KpoAsSenderSearchResultDto {\n");
            sb.Append("  PlannedTransportTime: ").Append(PlannedTransportTime).Append("\n");
            sb.Append("  RealTransportTime: ").Append(RealTransportTime).Append("\n");
            sb.Append("  WasteCode: ").Append(WasteCode).Append("\n");
            sb.Append("  WasteCodeDescription: ").Append(WasteCodeDescription).Append("\n");
            sb.Append("  VehicleRegNumber: ").Append(VehicleRegNumber).Append("\n");
            sb.Append("  CardStatus: ").Append(CardStatus).Append("\n");
            sb.Append("  CardNumber: ").Append(CardNumber).Append("\n");
            sb.Append("  CardStatusCodeName: ").Append(CardStatusCodeName).Append("\n");
            sb.Append("  SenderName: ").Append(SenderName).Append("\n");
            sb.Append("  ReceiverName: ").Append(ReceiverName).Append("\n");
            sb.Append("  KpoId: ").Append(KpoId).Append("\n");
            sb.Append("  KpoLastModifiedAt: ").Append(KpoLastModifiedAt).Append("\n");
            sb.Append("  SenderFirstNameAndLastName: ").Append(SenderFirstNameAndLastName).Append("\n");
            sb.Append("  ReceiverFirstAndLastName: ").Append(ReceiverFirstAndLastName).Append("\n");
            sb.Append("  RevisionNumber: ").Append(RevisionNumber).Append("\n");
            sb.Append("  CardRejectionTime: ").Append(CardRejectionTime).Append("\n");
            sb.Append("  WasteCodeExtended: ").Append(WasteCodeExtended).Append("\n");
            sb.Append("  WasteCodeExtendedDescription: ").Append(WasteCodeExtendedDescription).Append("\n");
            sb.Append("  HazardousWasteReclassification: ").Append(HazardousWasteReclassification).Append("\n");
            sb.Append("  HazardousWasteReclassificationDescription: ").Append(HazardousWasteReclassificationDescription).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as WasteRegisterPublicApiApiModelsResponsesWasteRegisterWasteTransferCardV1KpoAsSenderSearchResultDto);
        }

        /// <summary>
        /// Returns true if WasteRegisterPublicApiApiModelsResponsesWasteRegisterWasteTransferCardV1KpoAsSenderSearchResultDto instances are equal
        /// </summary>
        /// <param name="input">Instance of WasteRegisterPublicApiApiModelsResponsesWasteRegisterWasteTransferCardV1KpoAsSenderSearchResultDto to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(WasteRegisterPublicApiApiModelsResponsesWasteRegisterWasteTransferCardV1KpoAsSenderSearchResultDto input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.PlannedTransportTime == input.PlannedTransportTime ||
                    (this.PlannedTransportTime != null &&
                    this.PlannedTransportTime.Equals(input.PlannedTransportTime))
                ) && 
                (
                    this.RealTransportTime == input.RealTransportTime ||
                    (this.RealTransportTime != null &&
                    this.RealTransportTime.Equals(input.RealTransportTime))
                ) && 
                (
                    this.WasteCode == input.WasteCode ||
                    (this.WasteCode != null &&
                    this.WasteCode.Equals(input.WasteCode))
                ) && 
                (
                    this.WasteCodeDescription == input.WasteCodeDescription ||
                    (this.WasteCodeDescription != null &&
                    this.WasteCodeDescription.Equals(input.WasteCodeDescription))
                ) && 
                (
                    this.VehicleRegNumber == input.VehicleRegNumber ||
                    (this.VehicleRegNumber != null &&
                    this.VehicleRegNumber.Equals(input.VehicleRegNumber))
                ) && 
                (
                    this.CardStatus == input.CardStatus ||
                    (this.CardStatus != null &&
                    this.CardStatus.Equals(input.CardStatus))
                ) && 
                (
                    this.CardNumber == input.CardNumber ||
                    (this.CardNumber != null &&
                    this.CardNumber.Equals(input.CardNumber))
                ) && 
                (
                    this.CardStatusCodeName == input.CardStatusCodeName ||
                    (this.CardStatusCodeName != null &&
                    this.CardStatusCodeName.Equals(input.CardStatusCodeName))
                ) && 
                (
                    this.SenderName == input.SenderName ||
                    (this.SenderName != null &&
                    this.SenderName.Equals(input.SenderName))
                ) && 
                (
                    this.ReceiverName == input.ReceiverName ||
                    (this.ReceiverName != null &&
                    this.ReceiverName.Equals(input.ReceiverName))
                ) && 
                (
                    this.KpoId == input.KpoId ||
                    (this.KpoId != null &&
                    this.KpoId.Equals(input.KpoId))
                ) && 
                (
                    this.KpoLastModifiedAt == input.KpoLastModifiedAt ||
                    (this.KpoLastModifiedAt != null &&
                    this.KpoLastModifiedAt.Equals(input.KpoLastModifiedAt))
                ) && 
                (
                    this.SenderFirstNameAndLastName == input.SenderFirstNameAndLastName ||
                    (this.SenderFirstNameAndLastName != null &&
                    this.SenderFirstNameAndLastName.Equals(input.SenderFirstNameAndLastName))
                ) && 
                (
                    this.ReceiverFirstAndLastName == input.ReceiverFirstAndLastName ||
                    (this.ReceiverFirstAndLastName != null &&
                    this.ReceiverFirstAndLastName.Equals(input.ReceiverFirstAndLastName))
                ) && 
                (
                    this.RevisionNumber == input.RevisionNumber ||
                    (this.RevisionNumber != null &&
                    this.RevisionNumber.Equals(input.RevisionNumber))
                ) && 
                (
                    this.CardRejectionTime == input.CardRejectionTime ||
                    (this.CardRejectionTime != null &&
                    this.CardRejectionTime.Equals(input.CardRejectionTime))
                ) && 
                (
                    this.WasteCodeExtended == input.WasteCodeExtended ||
                    (this.WasteCodeExtended != null &&
                    this.WasteCodeExtended.Equals(input.WasteCodeExtended))
                ) && 
                (
                    this.WasteCodeExtendedDescription == input.WasteCodeExtendedDescription ||
                    (this.WasteCodeExtendedDescription != null &&
                    this.WasteCodeExtendedDescription.Equals(input.WasteCodeExtendedDescription))
                ) && 
                (
                    this.HazardousWasteReclassification == input.HazardousWasteReclassification ||
                    (this.HazardousWasteReclassification != null &&
                    this.HazardousWasteReclassification.Equals(input.HazardousWasteReclassification))
                ) && 
                (
                    this.HazardousWasteReclassificationDescription == input.HazardousWasteReclassificationDescription ||
                    (this.HazardousWasteReclassificationDescription != null &&
                    this.HazardousWasteReclassificationDescription.Equals(input.HazardousWasteReclassificationDescription))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.PlannedTransportTime != null)
                    hashCode = hashCode * 59 + this.PlannedTransportTime.GetHashCode();
                if (this.RealTransportTime != null)
                    hashCode = hashCode * 59 + this.RealTransportTime.GetHashCode();
                if (this.WasteCode != null)
                    hashCode = hashCode * 59 + this.WasteCode.GetHashCode();
                if (this.WasteCodeDescription != null)
                    hashCode = hashCode * 59 + this.WasteCodeDescription.GetHashCode();
                if (this.VehicleRegNumber != null)
                    hashCode = hashCode * 59 + this.VehicleRegNumber.GetHashCode();
                if (this.CardStatus != null)
                    hashCode = hashCode * 59 + this.CardStatus.GetHashCode();
                if (this.CardNumber != null)
                    hashCode = hashCode * 59 + this.CardNumber.GetHashCode();
                if (this.CardStatusCodeName != null)
                    hashCode = hashCode * 59 + this.CardStatusCodeName.GetHashCode();
                if (this.SenderName != null)
                    hashCode = hashCode * 59 + this.SenderName.GetHashCode();
                if (this.ReceiverName != null)
                    hashCode = hashCode * 59 + this.ReceiverName.GetHashCode();
                if (this.KpoId != null)
                    hashCode = hashCode * 59 + this.KpoId.GetHashCode();
                if (this.KpoLastModifiedAt != null)
                    hashCode = hashCode * 59 + this.KpoLastModifiedAt.GetHashCode();
                if (this.SenderFirstNameAndLastName != null)
                    hashCode = hashCode * 59 + this.SenderFirstNameAndLastName.GetHashCode();
                if (this.ReceiverFirstAndLastName != null)
                    hashCode = hashCode * 59 + this.ReceiverFirstAndLastName.GetHashCode();
                if (this.RevisionNumber != null)
                    hashCode = hashCode * 59 + this.RevisionNumber.GetHashCode();
                if (this.CardRejectionTime != null)
                    hashCode = hashCode * 59 + this.CardRejectionTime.GetHashCode();
                if (this.WasteCodeExtended != null)
                    hashCode = hashCode * 59 + this.WasteCodeExtended.GetHashCode();
                if (this.WasteCodeExtendedDescription != null)
                    hashCode = hashCode * 59 + this.WasteCodeExtendedDescription.GetHashCode();
                if (this.HazardousWasteReclassification != null)
                    hashCode = hashCode * 59 + this.HazardousWasteReclassification.GetHashCode();
                if (this.HazardousWasteReclassificationDescription != null)
                    hashCode = hashCode * 59 + this.HazardousWasteReclassificationDescription.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
