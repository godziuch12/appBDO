/* 
 * v1 Waste Register public Api
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// WasteRegisterPublicApiApiModelsRequestsWasteRegisterWreckWasteRecordCardCollectingReceivedVehicleV1UpdateCollectingReceivedVehicleRequest
    /// </summary>
    [DataContract]
    public partial class WasteRegisterPublicApiApiModelsRequestsWasteRegisterWreckWasteRecordCardCollectingReceivedVehicleV1UpdateCollectingReceivedVehicleRequest :  IEquatable<WasteRegisterPublicApiApiModelsRequestsWasteRegisterWreckWasteRecordCardCollectingReceivedVehicleV1UpdateCollectingReceivedVehicleRequest>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="WasteRegisterPublicApiApiModelsRequestsWasteRegisterWreckWasteRecordCardCollectingReceivedVehicleV1UpdateCollectingReceivedVehicleRequest" /> class.
        /// </summary>
        /// <param name="kepwCollectingReceivedVehicleId">Id wpisu Prowadzący stację demontażu - Przyjęte pojazdy.</param>
        /// <param name="receivedWithKpo">Na podstawie karty przekazania odpadów.</param>
        /// <param name="kpoId">Id karty przekazania odpadów.</param>
        /// <param name="receiveDate">Data przyjęcia.</param>
        /// <param name="vehiclesMass">Masa [Mg].</param>
        /// <param name="vehiclesCount">Liczba [szt.].</param>
        /// <param name="additionalInfo">Informacje dodatkowe.</param>
        public WasteRegisterPublicApiApiModelsRequestsWasteRegisterWreckWasteRecordCardCollectingReceivedVehicleV1UpdateCollectingReceivedVehicleRequest(Guid? kepwCollectingReceivedVehicleId = default(Guid?), bool? receivedWithKpo = default(bool?), Guid? kpoId = default(Guid?), DateTime? receiveDate = default(DateTime?), double? vehiclesMass = default(double?), int? vehiclesCount = default(int?), string additionalInfo = default(string))
        {
            this.KepwCollectingReceivedVehicleId = kepwCollectingReceivedVehicleId;
            this.ReceivedWithKpo = receivedWithKpo;
            this.KpoId = kpoId;
            this.ReceiveDate = receiveDate;
            this.VehiclesMass = vehiclesMass;
            this.VehiclesCount = vehiclesCount;
            this.AdditionalInfo = additionalInfo;
        }
        
        /// <summary>
        /// Id wpisu Prowadzący stację demontażu - Przyjęte pojazdy
        /// </summary>
        /// <value>Id wpisu Prowadzący stację demontażu - Przyjęte pojazdy</value>
        [DataMember(Name="kepwCollectingReceivedVehicleId", EmitDefaultValue=false)]
        public Guid? KepwCollectingReceivedVehicleId { get; set; }

        /// <summary>
        /// Na podstawie karty przekazania odpadów
        /// </summary>
        /// <value>Na podstawie karty przekazania odpadów</value>
        [DataMember(Name="receivedWithKpo", EmitDefaultValue=false)]
        public bool? ReceivedWithKpo { get; set; }

        /// <summary>
        /// Id karty przekazania odpadów
        /// </summary>
        /// <value>Id karty przekazania odpadów</value>
        [DataMember(Name="kpoId", EmitDefaultValue=false)]
        public Guid? KpoId { get; set; }

        /// <summary>
        /// Data przyjęcia
        /// </summary>
        /// <value>Data przyjęcia</value>
        [DataMember(Name="receiveDate", EmitDefaultValue=false)]
        public DateTime? ReceiveDate { get; set; }

        /// <summary>
        /// Masa [Mg]
        /// </summary>
        /// <value>Masa [Mg]</value>
        [DataMember(Name="vehiclesMass", EmitDefaultValue=false)]
        public double? VehiclesMass { get; set; }

        /// <summary>
        /// Liczba [szt.]
        /// </summary>
        /// <value>Liczba [szt.]</value>
        [DataMember(Name="vehiclesCount", EmitDefaultValue=false)]
        public int? VehiclesCount { get; set; }

        /// <summary>
        /// Informacje dodatkowe
        /// </summary>
        /// <value>Informacje dodatkowe</value>
        [DataMember(Name="additionalInfo", EmitDefaultValue=false)]
        public string AdditionalInfo { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class WasteRegisterPublicApiApiModelsRequestsWasteRegisterWreckWasteRecordCardCollectingReceivedVehicleV1UpdateCollectingReceivedVehicleRequest {\n");
            sb.Append("  KepwCollectingReceivedVehicleId: ").Append(KepwCollectingReceivedVehicleId).Append("\n");
            sb.Append("  ReceivedWithKpo: ").Append(ReceivedWithKpo).Append("\n");
            sb.Append("  KpoId: ").Append(KpoId).Append("\n");
            sb.Append("  ReceiveDate: ").Append(ReceiveDate).Append("\n");
            sb.Append("  VehiclesMass: ").Append(VehiclesMass).Append("\n");
            sb.Append("  VehiclesCount: ").Append(VehiclesCount).Append("\n");
            sb.Append("  AdditionalInfo: ").Append(AdditionalInfo).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as WasteRegisterPublicApiApiModelsRequestsWasteRegisterWreckWasteRecordCardCollectingReceivedVehicleV1UpdateCollectingReceivedVehicleRequest);
        }

        /// <summary>
        /// Returns true if WasteRegisterPublicApiApiModelsRequestsWasteRegisterWreckWasteRecordCardCollectingReceivedVehicleV1UpdateCollectingReceivedVehicleRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of WasteRegisterPublicApiApiModelsRequestsWasteRegisterWreckWasteRecordCardCollectingReceivedVehicleV1UpdateCollectingReceivedVehicleRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(WasteRegisterPublicApiApiModelsRequestsWasteRegisterWreckWasteRecordCardCollectingReceivedVehicleV1UpdateCollectingReceivedVehicleRequest input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.KepwCollectingReceivedVehicleId == input.KepwCollectingReceivedVehicleId ||
                    (this.KepwCollectingReceivedVehicleId != null &&
                    this.KepwCollectingReceivedVehicleId.Equals(input.KepwCollectingReceivedVehicleId))
                ) && 
                (
                    this.ReceivedWithKpo == input.ReceivedWithKpo ||
                    (this.ReceivedWithKpo != null &&
                    this.ReceivedWithKpo.Equals(input.ReceivedWithKpo))
                ) && 
                (
                    this.KpoId == input.KpoId ||
                    (this.KpoId != null &&
                    this.KpoId.Equals(input.KpoId))
                ) && 
                (
                    this.ReceiveDate == input.ReceiveDate ||
                    (this.ReceiveDate != null &&
                    this.ReceiveDate.Equals(input.ReceiveDate))
                ) && 
                (
                    this.VehiclesMass == input.VehiclesMass ||
                    (this.VehiclesMass != null &&
                    this.VehiclesMass.Equals(input.VehiclesMass))
                ) && 
                (
                    this.VehiclesCount == input.VehiclesCount ||
                    (this.VehiclesCount != null &&
                    this.VehiclesCount.Equals(input.VehiclesCount))
                ) && 
                (
                    this.AdditionalInfo == input.AdditionalInfo ||
                    (this.AdditionalInfo != null &&
                    this.AdditionalInfo.Equals(input.AdditionalInfo))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.KepwCollectingReceivedVehicleId != null)
                    hashCode = hashCode * 59 + this.KepwCollectingReceivedVehicleId.GetHashCode();
                if (this.ReceivedWithKpo != null)
                    hashCode = hashCode * 59 + this.ReceivedWithKpo.GetHashCode();
                if (this.KpoId != null)
                    hashCode = hashCode * 59 + this.KpoId.GetHashCode();
                if (this.ReceiveDate != null)
                    hashCode = hashCode * 59 + this.ReceiveDate.GetHashCode();
                if (this.VehiclesMass != null)
                    hashCode = hashCode * 59 + this.VehiclesMass.GetHashCode();
                if (this.VehiclesCount != null)
                    hashCode = hashCode * 59 + this.VehiclesCount.GetHashCode();
                if (this.AdditionalInfo != null)
                    hashCode = hashCode * 59 + this.AdditionalInfo.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
