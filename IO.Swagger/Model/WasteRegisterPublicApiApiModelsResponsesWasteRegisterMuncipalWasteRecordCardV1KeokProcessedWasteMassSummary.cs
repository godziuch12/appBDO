/* 
 * v1 Waste Register public Api
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// WasteRegisterPublicApiApiModelsResponsesWasteRegisterMuncipalWasteRecordCardV1KeokProcessedWasteMassSummary
    /// </summary>
    [DataContract]
    public partial class WasteRegisterPublicApiApiModelsResponsesWasteRegisterMuncipalWasteRecordCardV1KeokProcessedWasteMassSummary :  IEquatable<WasteRegisterPublicApiApiModelsResponsesWasteRegisterMuncipalWasteRecordCardV1KeokProcessedWasteMassSummary>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="WasteRegisterPublicApiApiModelsResponsesWasteRegisterMuncipalWasteRecordCardV1KeokProcessedWasteMassSummary" /> class.
        /// </summary>
        /// <param name="totalWasteMass">totalWasteMass.</param>
        /// <param name="recycleWasteMass">recycleWasteMass.</param>
        /// <param name="fillingUpDisadvantagedAreasWasteMass">fillingUpDisadvantagedAreasWasteMass.</param>
        /// <param name="preparationForReuseWasteMass">preparationForReuseWasteMass.</param>
        /// <param name="anotherRecoveryProcessWasteMass">anotherRecoveryProcessWasteMass.</param>
        /// <param name="neutralizationWasteMass">neutralizationWasteMass.</param>
        public WasteRegisterPublicApiApiModelsResponsesWasteRegisterMuncipalWasteRecordCardV1KeokProcessedWasteMassSummary(double? totalWasteMass = default(double?), double? recycleWasteMass = default(double?), double? fillingUpDisadvantagedAreasWasteMass = default(double?), double? preparationForReuseWasteMass = default(double?), double? anotherRecoveryProcessWasteMass = default(double?), double? neutralizationWasteMass = default(double?))
        {
            this.TotalWasteMass = totalWasteMass;
            this.RecycleWasteMass = recycleWasteMass;
            this.FillingUpDisadvantagedAreasWasteMass = fillingUpDisadvantagedAreasWasteMass;
            this.PreparationForReuseWasteMass = preparationForReuseWasteMass;
            this.AnotherRecoveryProcessWasteMass = anotherRecoveryProcessWasteMass;
            this.NeutralizationWasteMass = neutralizationWasteMass;
        }
        
        /// <summary>
        /// Gets or Sets TotalWasteMass
        /// </summary>
        [DataMember(Name="totalWasteMass", EmitDefaultValue=false)]
        public double? TotalWasteMass { get; set; }

        /// <summary>
        /// Gets or Sets RecycleWasteMass
        /// </summary>
        [DataMember(Name="recycleWasteMass", EmitDefaultValue=false)]
        public double? RecycleWasteMass { get; set; }

        /// <summary>
        /// Gets or Sets FillingUpDisadvantagedAreasWasteMass
        /// </summary>
        [DataMember(Name="fillingUpDisadvantagedAreasWasteMass", EmitDefaultValue=false)]
        public double? FillingUpDisadvantagedAreasWasteMass { get; set; }

        /// <summary>
        /// Gets or Sets PreparationForReuseWasteMass
        /// </summary>
        [DataMember(Name="preparationForReuseWasteMass", EmitDefaultValue=false)]
        public double? PreparationForReuseWasteMass { get; set; }

        /// <summary>
        /// Gets or Sets AnotherRecoveryProcessWasteMass
        /// </summary>
        [DataMember(Name="anotherRecoveryProcessWasteMass", EmitDefaultValue=false)]
        public double? AnotherRecoveryProcessWasteMass { get; set; }

        /// <summary>
        /// Gets or Sets NeutralizationWasteMass
        /// </summary>
        [DataMember(Name="neutralizationWasteMass", EmitDefaultValue=false)]
        public double? NeutralizationWasteMass { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class WasteRegisterPublicApiApiModelsResponsesWasteRegisterMuncipalWasteRecordCardV1KeokProcessedWasteMassSummary {\n");
            sb.Append("  TotalWasteMass: ").Append(TotalWasteMass).Append("\n");
            sb.Append("  RecycleWasteMass: ").Append(RecycleWasteMass).Append("\n");
            sb.Append("  FillingUpDisadvantagedAreasWasteMass: ").Append(FillingUpDisadvantagedAreasWasteMass).Append("\n");
            sb.Append("  PreparationForReuseWasteMass: ").Append(PreparationForReuseWasteMass).Append("\n");
            sb.Append("  AnotherRecoveryProcessWasteMass: ").Append(AnotherRecoveryProcessWasteMass).Append("\n");
            sb.Append("  NeutralizationWasteMass: ").Append(NeutralizationWasteMass).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as WasteRegisterPublicApiApiModelsResponsesWasteRegisterMuncipalWasteRecordCardV1KeokProcessedWasteMassSummary);
        }

        /// <summary>
        /// Returns true if WasteRegisterPublicApiApiModelsResponsesWasteRegisterMuncipalWasteRecordCardV1KeokProcessedWasteMassSummary instances are equal
        /// </summary>
        /// <param name="input">Instance of WasteRegisterPublicApiApiModelsResponsesWasteRegisterMuncipalWasteRecordCardV1KeokProcessedWasteMassSummary to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(WasteRegisterPublicApiApiModelsResponsesWasteRegisterMuncipalWasteRecordCardV1KeokProcessedWasteMassSummary input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.TotalWasteMass == input.TotalWasteMass ||
                    (this.TotalWasteMass != null &&
                    this.TotalWasteMass.Equals(input.TotalWasteMass))
                ) && 
                (
                    this.RecycleWasteMass == input.RecycleWasteMass ||
                    (this.RecycleWasteMass != null &&
                    this.RecycleWasteMass.Equals(input.RecycleWasteMass))
                ) && 
                (
                    this.FillingUpDisadvantagedAreasWasteMass == input.FillingUpDisadvantagedAreasWasteMass ||
                    (this.FillingUpDisadvantagedAreasWasteMass != null &&
                    this.FillingUpDisadvantagedAreasWasteMass.Equals(input.FillingUpDisadvantagedAreasWasteMass))
                ) && 
                (
                    this.PreparationForReuseWasteMass == input.PreparationForReuseWasteMass ||
                    (this.PreparationForReuseWasteMass != null &&
                    this.PreparationForReuseWasteMass.Equals(input.PreparationForReuseWasteMass))
                ) && 
                (
                    this.AnotherRecoveryProcessWasteMass == input.AnotherRecoveryProcessWasteMass ||
                    (this.AnotherRecoveryProcessWasteMass != null &&
                    this.AnotherRecoveryProcessWasteMass.Equals(input.AnotherRecoveryProcessWasteMass))
                ) && 
                (
                    this.NeutralizationWasteMass == input.NeutralizationWasteMass ||
                    (this.NeutralizationWasteMass != null &&
                    this.NeutralizationWasteMass.Equals(input.NeutralizationWasteMass))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.TotalWasteMass != null)
                    hashCode = hashCode * 59 + this.TotalWasteMass.GetHashCode();
                if (this.RecycleWasteMass != null)
                    hashCode = hashCode * 59 + this.RecycleWasteMass.GetHashCode();
                if (this.FillingUpDisadvantagedAreasWasteMass != null)
                    hashCode = hashCode * 59 + this.FillingUpDisadvantagedAreasWasteMass.GetHashCode();
                if (this.PreparationForReuseWasteMass != null)
                    hashCode = hashCode * 59 + this.PreparationForReuseWasteMass.GetHashCode();
                if (this.AnotherRecoveryProcessWasteMass != null)
                    hashCode = hashCode * 59 + this.AnotherRecoveryProcessWasteMass.GetHashCode();
                if (this.NeutralizationWasteMass != null)
                    hashCode = hashCode * 59 + this.NeutralizationWasteMass.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
