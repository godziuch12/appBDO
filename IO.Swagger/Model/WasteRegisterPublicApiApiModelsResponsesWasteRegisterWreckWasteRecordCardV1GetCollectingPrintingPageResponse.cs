/* 
 * v1 Waste Register public Api
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// WasteRegisterPublicApiApiModelsResponsesWasteRegisterWreckWasteRecordCardV1GetCollectingPrintingPageResponse
    /// </summary>
    [DataContract]
    public partial class WasteRegisterPublicApiApiModelsResponsesWasteRegisterWreckWasteRecordCardV1GetCollectingPrintingPageResponse :  IEquatable<WasteRegisterPublicApiApiModelsResponsesWasteRegisterWreckWasteRecordCardV1GetCollectingPrintingPageResponse>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="WasteRegisterPublicApiApiModelsResponsesWasteRegisterWreckWasteRecordCardV1GetCollectingPrintingPageResponse" /> class.
        /// </summary>
        /// <param name="cardNumber">Numer karty.</param>
        /// <param name="calendarYear">Rok kalendarzowy.</param>
        /// <param name="wasteCodeAndDescription">Kod i opis odpadu.</param>
        /// <param name="companyName">Nazwa lub imię i nazwisko.</param>
        /// <param name="companyAdress">Adres.</param>
        /// <param name="companyIdentificationNumber">Numer rejestrowy.</param>
        /// <param name="companyNip">NIP.</param>
        /// <param name="companyNipEu">NIP europejski.</param>
        /// <param name="eupName">Nazwa miejsca prowadzenia działalności.</param>
        /// <param name="eupIdentificationNumber">Numer miejsca prowadzenia działalności.</param>
        /// <param name="eupAdress">Adres miejsca prowadzenia działalności.</param>
        /// <param name="itemsList">Lista wpisów.</param>
        /// <param name="receivedVehicleMassSum">receivedVehicleMassSum.</param>
        /// <param name="receivedVehiclesCountSum">receivedVehiclesCountSum.</param>
        /// <param name="transferredVehicleMassSum">transferredVehicleMassSum.</param>
        /// <param name="transferredVehiclesCountSum">transferredVehiclesCountSum.</param>
        /// <param name="wasteCodeExtended">Kod ex.</param>
        /// <param name="wasteCodeExtendedDescription">Rodzaj odpadu ex.</param>
        /// <param name="hazardousWasteReclassification">Zmiana statusu odpadów niebezpiecznych na odpady inne niż niebezpieczne.</param>
        /// <param name="hazardousWasteReclassificationDescription">Rodzaj odpadu.</param>
        public WasteRegisterPublicApiApiModelsResponsesWasteRegisterWreckWasteRecordCardV1GetCollectingPrintingPageResponse(string cardNumber = default(string), string calendarYear = default(string), string wasteCodeAndDescription = default(string), string companyName = default(string), string companyAdress = default(string), string companyIdentificationNumber = default(string), string companyNip = default(string), string companyNipEu = default(string), string eupName = default(string), string eupIdentificationNumber = default(string), string eupAdress = default(string), List<WasteRegisterPublicApiApiModelsResponsesWasteRegisterWreckWasteRecordCardV1KepwCollectingPrintingPageList> itemsList = default(List<WasteRegisterPublicApiApiModelsResponsesWasteRegisterWreckWasteRecordCardV1KepwCollectingPrintingPageList>), double? receivedVehicleMassSum = default(double?), int? receivedVehiclesCountSum = default(int?), double? transferredVehicleMassSum = default(double?), int? transferredVehiclesCountSum = default(int?), bool? wasteCodeExtended = default(bool?), string wasteCodeExtendedDescription = default(string), bool? hazardousWasteReclassification = default(bool?), string hazardousWasteReclassificationDescription = default(string))
        {
            this.CardNumber = cardNumber;
            this.CalendarYear = calendarYear;
            this.WasteCodeAndDescription = wasteCodeAndDescription;
            this.CompanyName = companyName;
            this.CompanyAdress = companyAdress;
            this.CompanyIdentificationNumber = companyIdentificationNumber;
            this.CompanyNip = companyNip;
            this.CompanyNipEu = companyNipEu;
            this.EupName = eupName;
            this.EupIdentificationNumber = eupIdentificationNumber;
            this.EupAdress = eupAdress;
            this.ItemsList = itemsList;
            this.ReceivedVehicleMassSum = receivedVehicleMassSum;
            this.ReceivedVehiclesCountSum = receivedVehiclesCountSum;
            this.TransferredVehicleMassSum = transferredVehicleMassSum;
            this.TransferredVehiclesCountSum = transferredVehiclesCountSum;
            this.WasteCodeExtended = wasteCodeExtended;
            this.WasteCodeExtendedDescription = wasteCodeExtendedDescription;
            this.HazardousWasteReclassification = hazardousWasteReclassification;
            this.HazardousWasteReclassificationDescription = hazardousWasteReclassificationDescription;
        }
        
        /// <summary>
        /// Numer karty
        /// </summary>
        /// <value>Numer karty</value>
        [DataMember(Name="cardNumber", EmitDefaultValue=false)]
        public string CardNumber { get; set; }

        /// <summary>
        /// Rok kalendarzowy
        /// </summary>
        /// <value>Rok kalendarzowy</value>
        [DataMember(Name="calendarYear", EmitDefaultValue=false)]
        public string CalendarYear { get; set; }

        /// <summary>
        /// Kod i opis odpadu
        /// </summary>
        /// <value>Kod i opis odpadu</value>
        [DataMember(Name="wasteCodeAndDescription", EmitDefaultValue=false)]
        public string WasteCodeAndDescription { get; set; }

        /// <summary>
        /// Nazwa lub imię i nazwisko
        /// </summary>
        /// <value>Nazwa lub imię i nazwisko</value>
        [DataMember(Name="companyName", EmitDefaultValue=false)]
        public string CompanyName { get; set; }

        /// <summary>
        /// Adres
        /// </summary>
        /// <value>Adres</value>
        [DataMember(Name="companyAdress", EmitDefaultValue=false)]
        public string CompanyAdress { get; set; }

        /// <summary>
        /// Numer rejestrowy
        /// </summary>
        /// <value>Numer rejestrowy</value>
        [DataMember(Name="companyIdentificationNumber", EmitDefaultValue=false)]
        public string CompanyIdentificationNumber { get; set; }

        /// <summary>
        /// NIP
        /// </summary>
        /// <value>NIP</value>
        [DataMember(Name="companyNip", EmitDefaultValue=false)]
        public string CompanyNip { get; set; }

        /// <summary>
        /// NIP europejski
        /// </summary>
        /// <value>NIP europejski</value>
        [DataMember(Name="companyNipEu", EmitDefaultValue=false)]
        public string CompanyNipEu { get; set; }

        /// <summary>
        /// Nazwa miejsca prowadzenia działalności
        /// </summary>
        /// <value>Nazwa miejsca prowadzenia działalności</value>
        [DataMember(Name="eupName", EmitDefaultValue=false)]
        public string EupName { get; set; }

        /// <summary>
        /// Numer miejsca prowadzenia działalności
        /// </summary>
        /// <value>Numer miejsca prowadzenia działalności</value>
        [DataMember(Name="eupIdentificationNumber", EmitDefaultValue=false)]
        public string EupIdentificationNumber { get; set; }

        /// <summary>
        /// Adres miejsca prowadzenia działalności
        /// </summary>
        /// <value>Adres miejsca prowadzenia działalności</value>
        [DataMember(Name="eupAdress", EmitDefaultValue=false)]
        public string EupAdress { get; set; }

        /// <summary>
        /// Lista wpisów
        /// </summary>
        /// <value>Lista wpisów</value>
        [DataMember(Name="itemsList", EmitDefaultValue=false)]
        public List<WasteRegisterPublicApiApiModelsResponsesWasteRegisterWreckWasteRecordCardV1KepwCollectingPrintingPageList> ItemsList { get; set; }

        /// <summary>
        /// Gets or Sets ReceivedVehicleMassSum
        /// </summary>
        [DataMember(Name="receivedVehicleMassSum", EmitDefaultValue=false)]
        public double? ReceivedVehicleMassSum { get; set; }

        /// <summary>
        /// Gets or Sets ReceivedVehiclesCountSum
        /// </summary>
        [DataMember(Name="receivedVehiclesCountSum", EmitDefaultValue=false)]
        public int? ReceivedVehiclesCountSum { get; set; }

        /// <summary>
        /// Gets or Sets TransferredVehicleMassSum
        /// </summary>
        [DataMember(Name="transferredVehicleMassSum", EmitDefaultValue=false)]
        public double? TransferredVehicleMassSum { get; set; }

        /// <summary>
        /// Gets or Sets TransferredVehiclesCountSum
        /// </summary>
        [DataMember(Name="transferredVehiclesCountSum", EmitDefaultValue=false)]
        public int? TransferredVehiclesCountSum { get; set; }

        /// <summary>
        /// Kod ex
        /// </summary>
        /// <value>Kod ex</value>
        [DataMember(Name="wasteCodeExtended", EmitDefaultValue=false)]
        public bool? WasteCodeExtended { get; set; }

        /// <summary>
        /// Rodzaj odpadu ex
        /// </summary>
        /// <value>Rodzaj odpadu ex</value>
        [DataMember(Name="wasteCodeExtendedDescription", EmitDefaultValue=false)]
        public string WasteCodeExtendedDescription { get; set; }

        /// <summary>
        /// Zmiana statusu odpadów niebezpiecznych na odpady inne niż niebezpieczne
        /// </summary>
        /// <value>Zmiana statusu odpadów niebezpiecznych na odpady inne niż niebezpieczne</value>
        [DataMember(Name="hazardousWasteReclassification", EmitDefaultValue=false)]
        public bool? HazardousWasteReclassification { get; set; }

        /// <summary>
        /// Rodzaj odpadu
        /// </summary>
        /// <value>Rodzaj odpadu</value>
        [DataMember(Name="hazardousWasteReclassificationDescription", EmitDefaultValue=false)]
        public string HazardousWasteReclassificationDescription { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class WasteRegisterPublicApiApiModelsResponsesWasteRegisterWreckWasteRecordCardV1GetCollectingPrintingPageResponse {\n");
            sb.Append("  CardNumber: ").Append(CardNumber).Append("\n");
            sb.Append("  CalendarYear: ").Append(CalendarYear).Append("\n");
            sb.Append("  WasteCodeAndDescription: ").Append(WasteCodeAndDescription).Append("\n");
            sb.Append("  CompanyName: ").Append(CompanyName).Append("\n");
            sb.Append("  CompanyAdress: ").Append(CompanyAdress).Append("\n");
            sb.Append("  CompanyIdentificationNumber: ").Append(CompanyIdentificationNumber).Append("\n");
            sb.Append("  CompanyNip: ").Append(CompanyNip).Append("\n");
            sb.Append("  CompanyNipEu: ").Append(CompanyNipEu).Append("\n");
            sb.Append("  EupName: ").Append(EupName).Append("\n");
            sb.Append("  EupIdentificationNumber: ").Append(EupIdentificationNumber).Append("\n");
            sb.Append("  EupAdress: ").Append(EupAdress).Append("\n");
            sb.Append("  ItemsList: ").Append(ItemsList).Append("\n");
            sb.Append("  ReceivedVehicleMassSum: ").Append(ReceivedVehicleMassSum).Append("\n");
            sb.Append("  ReceivedVehiclesCountSum: ").Append(ReceivedVehiclesCountSum).Append("\n");
            sb.Append("  TransferredVehicleMassSum: ").Append(TransferredVehicleMassSum).Append("\n");
            sb.Append("  TransferredVehiclesCountSum: ").Append(TransferredVehiclesCountSum).Append("\n");
            sb.Append("  WasteCodeExtended: ").Append(WasteCodeExtended).Append("\n");
            sb.Append("  WasteCodeExtendedDescription: ").Append(WasteCodeExtendedDescription).Append("\n");
            sb.Append("  HazardousWasteReclassification: ").Append(HazardousWasteReclassification).Append("\n");
            sb.Append("  HazardousWasteReclassificationDescription: ").Append(HazardousWasteReclassificationDescription).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as WasteRegisterPublicApiApiModelsResponsesWasteRegisterWreckWasteRecordCardV1GetCollectingPrintingPageResponse);
        }

        /// <summary>
        /// Returns true if WasteRegisterPublicApiApiModelsResponsesWasteRegisterWreckWasteRecordCardV1GetCollectingPrintingPageResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of WasteRegisterPublicApiApiModelsResponsesWasteRegisterWreckWasteRecordCardV1GetCollectingPrintingPageResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(WasteRegisterPublicApiApiModelsResponsesWasteRegisterWreckWasteRecordCardV1GetCollectingPrintingPageResponse input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.CardNumber == input.CardNumber ||
                    (this.CardNumber != null &&
                    this.CardNumber.Equals(input.CardNumber))
                ) && 
                (
                    this.CalendarYear == input.CalendarYear ||
                    (this.CalendarYear != null &&
                    this.CalendarYear.Equals(input.CalendarYear))
                ) && 
                (
                    this.WasteCodeAndDescription == input.WasteCodeAndDescription ||
                    (this.WasteCodeAndDescription != null &&
                    this.WasteCodeAndDescription.Equals(input.WasteCodeAndDescription))
                ) && 
                (
                    this.CompanyName == input.CompanyName ||
                    (this.CompanyName != null &&
                    this.CompanyName.Equals(input.CompanyName))
                ) && 
                (
                    this.CompanyAdress == input.CompanyAdress ||
                    (this.CompanyAdress != null &&
                    this.CompanyAdress.Equals(input.CompanyAdress))
                ) && 
                (
                    this.CompanyIdentificationNumber == input.CompanyIdentificationNumber ||
                    (this.CompanyIdentificationNumber != null &&
                    this.CompanyIdentificationNumber.Equals(input.CompanyIdentificationNumber))
                ) && 
                (
                    this.CompanyNip == input.CompanyNip ||
                    (this.CompanyNip != null &&
                    this.CompanyNip.Equals(input.CompanyNip))
                ) && 
                (
                    this.CompanyNipEu == input.CompanyNipEu ||
                    (this.CompanyNipEu != null &&
                    this.CompanyNipEu.Equals(input.CompanyNipEu))
                ) && 
                (
                    this.EupName == input.EupName ||
                    (this.EupName != null &&
                    this.EupName.Equals(input.EupName))
                ) && 
                (
                    this.EupIdentificationNumber == input.EupIdentificationNumber ||
                    (this.EupIdentificationNumber != null &&
                    this.EupIdentificationNumber.Equals(input.EupIdentificationNumber))
                ) && 
                (
                    this.EupAdress == input.EupAdress ||
                    (this.EupAdress != null &&
                    this.EupAdress.Equals(input.EupAdress))
                ) && 
                (
                    this.ItemsList == input.ItemsList ||
                    this.ItemsList != null &&
                    this.ItemsList.SequenceEqual(input.ItemsList)
                ) && 
                (
                    this.ReceivedVehicleMassSum == input.ReceivedVehicleMassSum ||
                    (this.ReceivedVehicleMassSum != null &&
                    this.ReceivedVehicleMassSum.Equals(input.ReceivedVehicleMassSum))
                ) && 
                (
                    this.ReceivedVehiclesCountSum == input.ReceivedVehiclesCountSum ||
                    (this.ReceivedVehiclesCountSum != null &&
                    this.ReceivedVehiclesCountSum.Equals(input.ReceivedVehiclesCountSum))
                ) && 
                (
                    this.TransferredVehicleMassSum == input.TransferredVehicleMassSum ||
                    (this.TransferredVehicleMassSum != null &&
                    this.TransferredVehicleMassSum.Equals(input.TransferredVehicleMassSum))
                ) && 
                (
                    this.TransferredVehiclesCountSum == input.TransferredVehiclesCountSum ||
                    (this.TransferredVehiclesCountSum != null &&
                    this.TransferredVehiclesCountSum.Equals(input.TransferredVehiclesCountSum))
                ) && 
                (
                    this.WasteCodeExtended == input.WasteCodeExtended ||
                    (this.WasteCodeExtended != null &&
                    this.WasteCodeExtended.Equals(input.WasteCodeExtended))
                ) && 
                (
                    this.WasteCodeExtendedDescription == input.WasteCodeExtendedDescription ||
                    (this.WasteCodeExtendedDescription != null &&
                    this.WasteCodeExtendedDescription.Equals(input.WasteCodeExtendedDescription))
                ) && 
                (
                    this.HazardousWasteReclassification == input.HazardousWasteReclassification ||
                    (this.HazardousWasteReclassification != null &&
                    this.HazardousWasteReclassification.Equals(input.HazardousWasteReclassification))
                ) && 
                (
                    this.HazardousWasteReclassificationDescription == input.HazardousWasteReclassificationDescription ||
                    (this.HazardousWasteReclassificationDescription != null &&
                    this.HazardousWasteReclassificationDescription.Equals(input.HazardousWasteReclassificationDescription))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.CardNumber != null)
                    hashCode = hashCode * 59 + this.CardNumber.GetHashCode();
                if (this.CalendarYear != null)
                    hashCode = hashCode * 59 + this.CalendarYear.GetHashCode();
                if (this.WasteCodeAndDescription != null)
                    hashCode = hashCode * 59 + this.WasteCodeAndDescription.GetHashCode();
                if (this.CompanyName != null)
                    hashCode = hashCode * 59 + this.CompanyName.GetHashCode();
                if (this.CompanyAdress != null)
                    hashCode = hashCode * 59 + this.CompanyAdress.GetHashCode();
                if (this.CompanyIdentificationNumber != null)
                    hashCode = hashCode * 59 + this.CompanyIdentificationNumber.GetHashCode();
                if (this.CompanyNip != null)
                    hashCode = hashCode * 59 + this.CompanyNip.GetHashCode();
                if (this.CompanyNipEu != null)
                    hashCode = hashCode * 59 + this.CompanyNipEu.GetHashCode();
                if (this.EupName != null)
                    hashCode = hashCode * 59 + this.EupName.GetHashCode();
                if (this.EupIdentificationNumber != null)
                    hashCode = hashCode * 59 + this.EupIdentificationNumber.GetHashCode();
                if (this.EupAdress != null)
                    hashCode = hashCode * 59 + this.EupAdress.GetHashCode();
                if (this.ItemsList != null)
                    hashCode = hashCode * 59 + this.ItemsList.GetHashCode();
                if (this.ReceivedVehicleMassSum != null)
                    hashCode = hashCode * 59 + this.ReceivedVehicleMassSum.GetHashCode();
                if (this.ReceivedVehiclesCountSum != null)
                    hashCode = hashCode * 59 + this.ReceivedVehiclesCountSum.GetHashCode();
                if (this.TransferredVehicleMassSum != null)
                    hashCode = hashCode * 59 + this.TransferredVehicleMassSum.GetHashCode();
                if (this.TransferredVehiclesCountSum != null)
                    hashCode = hashCode * 59 + this.TransferredVehiclesCountSum.GetHashCode();
                if (this.WasteCodeExtended != null)
                    hashCode = hashCode * 59 + this.WasteCodeExtended.GetHashCode();
                if (this.WasteCodeExtendedDescription != null)
                    hashCode = hashCode * 59 + this.WasteCodeExtendedDescription.GetHashCode();
                if (this.HazardousWasteReclassification != null)
                    hashCode = hashCode * 59 + this.HazardousWasteReclassification.GetHashCode();
                if (this.HazardousWasteReclassificationDescription != null)
                    hashCode = hashCode * 59 + this.HazardousWasteReclassificationDescription.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
