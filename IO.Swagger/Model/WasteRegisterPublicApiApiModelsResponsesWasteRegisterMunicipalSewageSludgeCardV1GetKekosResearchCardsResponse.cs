/* 
 * v1 Waste Register public Api
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// WasteRegisterPublicApiApiModelsResponsesWasteRegisterMunicipalSewageSludgeCardV1GetKekosResearchCardsResponse
    /// </summary>
    [DataContract]
    public partial class WasteRegisterPublicApiApiModelsResponsesWasteRegisterMunicipalSewageSludgeCardV1GetKekosResearchCardsResponse :  IEquatable<WasteRegisterPublicApiApiModelsResponsesWasteRegisterMunicipalSewageSludgeCardV1GetKekosResearchCardsResponse>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="WasteRegisterPublicApiApiModelsResponsesWasteRegisterMunicipalSewageSludgeCardV1GetKekosResearchCardsResponse" /> class.
        /// </summary>
        /// <param name="kekosId">Id karty ewidencji komunalnych osadów ściekowych.</param>
        /// <param name="kekosBatchOfGeneratedSedimentId">Id wpisu Wytworzone osady.</param>
        /// <param name="kekosBatchNumber">kekosBatchNumber.</param>
        /// <param name="kekosResearchCards">kekosResearchCards.</param>
        public WasteRegisterPublicApiApiModelsResponsesWasteRegisterMunicipalSewageSludgeCardV1GetKekosResearchCardsResponse(Guid? kekosId = default(Guid?), Guid? kekosBatchOfGeneratedSedimentId = default(Guid?), string kekosBatchNumber = default(string), List<WasteRegisterPublicApiApiModelsResponsesWasteRegisterMunicipalSewageSludgeCardV1KekosResearchCardListItemDto> kekosResearchCards = default(List<WasteRegisterPublicApiApiModelsResponsesWasteRegisterMunicipalSewageSludgeCardV1KekosResearchCardListItemDto>))
        {
            this.KekosId = kekosId;
            this.KekosBatchOfGeneratedSedimentId = kekosBatchOfGeneratedSedimentId;
            this.KekosBatchNumber = kekosBatchNumber;
            this.KekosResearchCards = kekosResearchCards;
        }
        
        /// <summary>
        /// Id karty ewidencji komunalnych osadów ściekowych
        /// </summary>
        /// <value>Id karty ewidencji komunalnych osadów ściekowych</value>
        [DataMember(Name="kekosId", EmitDefaultValue=false)]
        public Guid? KekosId { get; set; }

        /// <summary>
        /// Id wpisu Wytworzone osady
        /// </summary>
        /// <value>Id wpisu Wytworzone osady</value>
        [DataMember(Name="kekosBatchOfGeneratedSedimentId", EmitDefaultValue=false)]
        public Guid? KekosBatchOfGeneratedSedimentId { get; set; }

        /// <summary>
        /// Gets or Sets KekosBatchNumber
        /// </summary>
        [DataMember(Name="kekosBatchNumber", EmitDefaultValue=false)]
        public string KekosBatchNumber { get; set; }

        /// <summary>
        /// Gets or Sets KekosResearchCards
        /// </summary>
        [DataMember(Name="kekosResearchCards", EmitDefaultValue=false)]
        public List<WasteRegisterPublicApiApiModelsResponsesWasteRegisterMunicipalSewageSludgeCardV1KekosResearchCardListItemDto> KekosResearchCards { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class WasteRegisterPublicApiApiModelsResponsesWasteRegisterMunicipalSewageSludgeCardV1GetKekosResearchCardsResponse {\n");
            sb.Append("  KekosId: ").Append(KekosId).Append("\n");
            sb.Append("  KekosBatchOfGeneratedSedimentId: ").Append(KekosBatchOfGeneratedSedimentId).Append("\n");
            sb.Append("  KekosBatchNumber: ").Append(KekosBatchNumber).Append("\n");
            sb.Append("  KekosResearchCards: ").Append(KekosResearchCards).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as WasteRegisterPublicApiApiModelsResponsesWasteRegisterMunicipalSewageSludgeCardV1GetKekosResearchCardsResponse);
        }

        /// <summary>
        /// Returns true if WasteRegisterPublicApiApiModelsResponsesWasteRegisterMunicipalSewageSludgeCardV1GetKekosResearchCardsResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of WasteRegisterPublicApiApiModelsResponsesWasteRegisterMunicipalSewageSludgeCardV1GetKekosResearchCardsResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(WasteRegisterPublicApiApiModelsResponsesWasteRegisterMunicipalSewageSludgeCardV1GetKekosResearchCardsResponse input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.KekosId == input.KekosId ||
                    (this.KekosId != null &&
                    this.KekosId.Equals(input.KekosId))
                ) && 
                (
                    this.KekosBatchOfGeneratedSedimentId == input.KekosBatchOfGeneratedSedimentId ||
                    (this.KekosBatchOfGeneratedSedimentId != null &&
                    this.KekosBatchOfGeneratedSedimentId.Equals(input.KekosBatchOfGeneratedSedimentId))
                ) && 
                (
                    this.KekosBatchNumber == input.KekosBatchNumber ||
                    (this.KekosBatchNumber != null &&
                    this.KekosBatchNumber.Equals(input.KekosBatchNumber))
                ) && 
                (
                    this.KekosResearchCards == input.KekosResearchCards ||
                    this.KekosResearchCards != null &&
                    this.KekosResearchCards.SequenceEqual(input.KekosResearchCards)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.KekosId != null)
                    hashCode = hashCode * 59 + this.KekosId.GetHashCode();
                if (this.KekosBatchOfGeneratedSedimentId != null)
                    hashCode = hashCode * 59 + this.KekosBatchOfGeneratedSedimentId.GetHashCode();
                if (this.KekosBatchNumber != null)
                    hashCode = hashCode * 59 + this.KekosBatchNumber.GetHashCode();
                if (this.KekosResearchCards != null)
                    hashCode = hashCode * 59 + this.KekosResearchCards.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
