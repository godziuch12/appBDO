/* 
 * v1 Waste Register public Api
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// WasteRegisterPublicApiApiModelsResponsesWasteRegisterMuncipalWasteTransferCardV1KpokTransferPrintingPage
    /// </summary>
    [DataContract]
    public partial class WasteRegisterPublicApiApiModelsResponsesWasteRegisterMuncipalWasteTransferCardV1KpokTransferPrintingPage :  IEquatable<WasteRegisterPublicApiApiModelsResponsesWasteRegisterMuncipalWasteTransferCardV1KpokTransferPrintingPage>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="WasteRegisterPublicApiApiModelsResponsesWasteRegisterMuncipalWasteTransferCardV1KpokTransferPrintingPage" /> class.
        /// </summary>
        /// <param name="cardNumber">Numer karty.</param>
        /// <param name="cardStatus">Status karty.</param>
        /// <param name="calendarYear">Rok kalendarzowy.</param>
        /// <param name="senderNameOrFirstNameAndLastName">Nazwa lub Imię i Nazwisko przekazującego.</param>
        /// <param name="senderAddress">Adres przekazującego.</param>
        /// <param name="senderEupNumber">Numer miejsca prowadzenia działalności.</param>
        /// <param name="senderEupName">Nazwa miejsca prowadzenia działalności.</param>
        /// <param name="senderEupAddress">Adres miejsca prowadzenia działalności.</param>
        /// <param name="senderIdentificationNumber">Numer rejestrowy przekazującego.</param>
        /// <param name="senderNip">NIP przekazującego.</param>
        /// <param name="senderNipEu">NIP europejski przekazującego.</param>
        /// <param name="carrierNameOrFirstNameAndLastName">Nazwa lub Imię i Nazwisko transportującego.</param>
        /// <param name="carrierAddress">Adres transportującego.</param>
        /// <param name="carrierIdentificationNumber">Numer rejestrowy transportującego.</param>
        /// <param name="carrierNip">NIP transportującego.</param>
        /// <param name="carrierNipEu">NIP europejski transportującego.</param>
        /// <param name="receiverNameOrFirstNameAndLastName">Nazwa lub Imię i Nazwisko przejmującego.</param>
        /// <param name="receiverAddress">Adres przejmującego.</param>
        /// <param name="receiverEupNumber">Numer miejsca prowadzenia działalności.</param>
        /// <param name="receiverEupName">Nazwa miejsca prowadzenia działalności przejmującego.</param>
        /// <param name="receiverEupAddress">Adres miejsca prowadzenia działalności przejmującego.</param>
        /// <param name="receiverIdentificationNumber">Numer rejestrowy przejmującego.</param>
        /// <param name="receiverNip">NIP przejmującego.</param>
        /// <param name="receiverNipEu">NIP europejski przejmującego.</param>
        /// <param name="communeName">Nazwa gminy.</param>
        /// <param name="communeArea">Obszar gminy.</param>
        /// <param name="wasteCodeAndDescription">Kod i opis odpadu.</param>
        /// <param name="wasteMass">Masa odpadów.</param>
        /// <param name="remarks">Uwagi.</param>
        /// <param name="vehicleRegNumber">Numer rejestracyjny środka transportu.</param>
        /// <param name="realTransportDate">Rzeczywista data rozpoczęcia transportu.</param>
        /// <param name="realTransportTime">Rzeczywista godzina rozpoczęcia transportu.</param>
        /// <param name="receiveConfirmationDate">Data otrzymania potwierdzenia.</param>
        /// <param name="receiveConfirmationTime">Data otrzymania potwierdzenia.</param>
        /// <param name="approvalDate">Data zatwierdzenia karty.</param>
        /// <param name="approvalTime">Godzina zatwierdzenia kart.</param>
        /// <param name="approvedByUser">Imię i Nazwisko użytkownika zatwierdzającego kartę.</param>
        /// <param name="transportConfirmationDate">Data potwierdzenia transportu.</param>
        /// <param name="transportConfirmationTime">Godzina potwierdzenia transportu.</param>
        /// <param name="transportConfirmedByUser">Użytkownik potwierdzający transport.</param>
        /// <param name="receiveConfirmedByUser">Użytkownik potwierdzający przejęcie.</param>
        /// <param name="wasteCodeExtended">Kod ex.</param>
        /// <param name="wasteCodeExtendedDescription">Rodzaj odpadu ex.</param>
        /// <param name="hazardousWasteReclassification">Zmiana statusu odpadów niebezpiecznych na odpady inne niż niebezpieczne.</param>
        /// <param name="hazardousWasteReclassificationDescription">Rodzaj odpadu.</param>
        public WasteRegisterPublicApiApiModelsResponsesWasteRegisterMuncipalWasteTransferCardV1KpokTransferPrintingPage(string cardNumber = default(string), string cardStatus = default(string), string calendarYear = default(string), string senderNameOrFirstNameAndLastName = default(string), string senderAddress = default(string), string senderEupNumber = default(string), string senderEupName = default(string), string senderEupAddress = default(string), string senderIdentificationNumber = default(string), string senderNip = default(string), string senderNipEu = default(string), string carrierNameOrFirstNameAndLastName = default(string), string carrierAddress = default(string), string carrierIdentificationNumber = default(string), string carrierNip = default(string), string carrierNipEu = default(string), string receiverNameOrFirstNameAndLastName = default(string), string receiverAddress = default(string), string receiverEupNumber = default(string), string receiverEupName = default(string), string receiverEupAddress = default(string), string receiverIdentificationNumber = default(string), string receiverNip = default(string), string receiverNipEu = default(string), string communeName = default(string), string communeArea = default(string), string wasteCodeAndDescription = default(string), string wasteMass = default(string), string remarks = default(string), string vehicleRegNumber = default(string), string realTransportDate = default(string), string realTransportTime = default(string), string receiveConfirmationDate = default(string), string receiveConfirmationTime = default(string), string approvalDate = default(string), string approvalTime = default(string), string approvedByUser = default(string), string transportConfirmationDate = default(string), string transportConfirmationTime = default(string), string transportConfirmedByUser = default(string), string receiveConfirmedByUser = default(string), bool? wasteCodeExtended = default(bool?), string wasteCodeExtendedDescription = default(string), bool? hazardousWasteReclassification = default(bool?), string hazardousWasteReclassificationDescription = default(string))
        {
            this.CardNumber = cardNumber;
            this.CardStatus = cardStatus;
            this.CalendarYear = calendarYear;
            this.SenderNameOrFirstNameAndLastName = senderNameOrFirstNameAndLastName;
            this.SenderAddress = senderAddress;
            this.SenderEupNumber = senderEupNumber;
            this.SenderEupName = senderEupName;
            this.SenderEupAddress = senderEupAddress;
            this.SenderIdentificationNumber = senderIdentificationNumber;
            this.SenderNip = senderNip;
            this.SenderNipEu = senderNipEu;
            this.CarrierNameOrFirstNameAndLastName = carrierNameOrFirstNameAndLastName;
            this.CarrierAddress = carrierAddress;
            this.CarrierIdentificationNumber = carrierIdentificationNumber;
            this.CarrierNip = carrierNip;
            this.CarrierNipEu = carrierNipEu;
            this.ReceiverNameOrFirstNameAndLastName = receiverNameOrFirstNameAndLastName;
            this.ReceiverAddress = receiverAddress;
            this.ReceiverEupNumber = receiverEupNumber;
            this.ReceiverEupName = receiverEupName;
            this.ReceiverEupAddress = receiverEupAddress;
            this.ReceiverIdentificationNumber = receiverIdentificationNumber;
            this.ReceiverNip = receiverNip;
            this.ReceiverNipEu = receiverNipEu;
            this.CommuneName = communeName;
            this.CommuneArea = communeArea;
            this.WasteCodeAndDescription = wasteCodeAndDescription;
            this.WasteMass = wasteMass;
            this.Remarks = remarks;
            this.VehicleRegNumber = vehicleRegNumber;
            this.RealTransportDate = realTransportDate;
            this.RealTransportTime = realTransportTime;
            this.ReceiveConfirmationDate = receiveConfirmationDate;
            this.ReceiveConfirmationTime = receiveConfirmationTime;
            this.ApprovalDate = approvalDate;
            this.ApprovalTime = approvalTime;
            this.ApprovedByUser = approvedByUser;
            this.TransportConfirmationDate = transportConfirmationDate;
            this.TransportConfirmationTime = transportConfirmationTime;
            this.TransportConfirmedByUser = transportConfirmedByUser;
            this.ReceiveConfirmedByUser = receiveConfirmedByUser;
            this.WasteCodeExtended = wasteCodeExtended;
            this.WasteCodeExtendedDescription = wasteCodeExtendedDescription;
            this.HazardousWasteReclassification = hazardousWasteReclassification;
            this.HazardousWasteReclassificationDescription = hazardousWasteReclassificationDescription;
        }
        
        /// <summary>
        /// Numer karty
        /// </summary>
        /// <value>Numer karty</value>
        [DataMember(Name="cardNumber", EmitDefaultValue=false)]
        public string CardNumber { get; set; }

        /// <summary>
        /// Status karty
        /// </summary>
        /// <value>Status karty</value>
        [DataMember(Name="cardStatus", EmitDefaultValue=false)]
        public string CardStatus { get; set; }

        /// <summary>
        /// Rok kalendarzowy
        /// </summary>
        /// <value>Rok kalendarzowy</value>
        [DataMember(Name="calendarYear", EmitDefaultValue=false)]
        public string CalendarYear { get; set; }

        /// <summary>
        /// Nazwa lub Imię i Nazwisko przekazującego
        /// </summary>
        /// <value>Nazwa lub Imię i Nazwisko przekazującego</value>
        [DataMember(Name="senderNameOrFirstNameAndLastName", EmitDefaultValue=false)]
        public string SenderNameOrFirstNameAndLastName { get; set; }

        /// <summary>
        /// Adres przekazującego
        /// </summary>
        /// <value>Adres przekazującego</value>
        [DataMember(Name="senderAddress", EmitDefaultValue=false)]
        public string SenderAddress { get; set; }

        /// <summary>
        /// Numer miejsca prowadzenia działalności
        /// </summary>
        /// <value>Numer miejsca prowadzenia działalności</value>
        [DataMember(Name="senderEupNumber", EmitDefaultValue=false)]
        public string SenderEupNumber { get; set; }

        /// <summary>
        /// Nazwa miejsca prowadzenia działalności
        /// </summary>
        /// <value>Nazwa miejsca prowadzenia działalności</value>
        [DataMember(Name="senderEupName", EmitDefaultValue=false)]
        public string SenderEupName { get; set; }

        /// <summary>
        /// Adres miejsca prowadzenia działalności
        /// </summary>
        /// <value>Adres miejsca prowadzenia działalności</value>
        [DataMember(Name="senderEupAddress", EmitDefaultValue=false)]
        public string SenderEupAddress { get; set; }

        /// <summary>
        /// Numer rejestrowy przekazującego
        /// </summary>
        /// <value>Numer rejestrowy przekazującego</value>
        [DataMember(Name="senderIdentificationNumber", EmitDefaultValue=false)]
        public string SenderIdentificationNumber { get; set; }

        /// <summary>
        /// NIP przekazującego
        /// </summary>
        /// <value>NIP przekazującego</value>
        [DataMember(Name="senderNip", EmitDefaultValue=false)]
        public string SenderNip { get; set; }

        /// <summary>
        /// NIP europejski przekazującego
        /// </summary>
        /// <value>NIP europejski przekazującego</value>
        [DataMember(Name="senderNipEu", EmitDefaultValue=false)]
        public string SenderNipEu { get; set; }

        /// <summary>
        /// Nazwa lub Imię i Nazwisko transportującego
        /// </summary>
        /// <value>Nazwa lub Imię i Nazwisko transportującego</value>
        [DataMember(Name="carrierNameOrFirstNameAndLastName", EmitDefaultValue=false)]
        public string CarrierNameOrFirstNameAndLastName { get; set; }

        /// <summary>
        /// Adres transportującego
        /// </summary>
        /// <value>Adres transportującego</value>
        [DataMember(Name="carrierAddress", EmitDefaultValue=false)]
        public string CarrierAddress { get; set; }

        /// <summary>
        /// Numer rejestrowy transportującego
        /// </summary>
        /// <value>Numer rejestrowy transportującego</value>
        [DataMember(Name="carrierIdentificationNumber", EmitDefaultValue=false)]
        public string CarrierIdentificationNumber { get; set; }

        /// <summary>
        /// NIP transportującego
        /// </summary>
        /// <value>NIP transportującego</value>
        [DataMember(Name="carrierNip", EmitDefaultValue=false)]
        public string CarrierNip { get; set; }

        /// <summary>
        /// NIP europejski transportującego
        /// </summary>
        /// <value>NIP europejski transportującego</value>
        [DataMember(Name="carrierNipEu", EmitDefaultValue=false)]
        public string CarrierNipEu { get; set; }

        /// <summary>
        /// Nazwa lub Imię i Nazwisko przejmującego
        /// </summary>
        /// <value>Nazwa lub Imię i Nazwisko przejmującego</value>
        [DataMember(Name="receiverNameOrFirstNameAndLastName", EmitDefaultValue=false)]
        public string ReceiverNameOrFirstNameAndLastName { get; set; }

        /// <summary>
        /// Adres przejmującego
        /// </summary>
        /// <value>Adres przejmującego</value>
        [DataMember(Name="receiverAddress", EmitDefaultValue=false)]
        public string ReceiverAddress { get; set; }

        /// <summary>
        /// Numer miejsca prowadzenia działalności
        /// </summary>
        /// <value>Numer miejsca prowadzenia działalności</value>
        [DataMember(Name="receiverEupNumber", EmitDefaultValue=false)]
        public string ReceiverEupNumber { get; set; }

        /// <summary>
        /// Nazwa miejsca prowadzenia działalności przejmującego
        /// </summary>
        /// <value>Nazwa miejsca prowadzenia działalności przejmującego</value>
        [DataMember(Name="receiverEupName", EmitDefaultValue=false)]
        public string ReceiverEupName { get; set; }

        /// <summary>
        /// Adres miejsca prowadzenia działalności przejmującego
        /// </summary>
        /// <value>Adres miejsca prowadzenia działalności przejmującego</value>
        [DataMember(Name="receiverEupAddress", EmitDefaultValue=false)]
        public string ReceiverEupAddress { get; set; }

        /// <summary>
        /// Numer rejestrowy przejmującego
        /// </summary>
        /// <value>Numer rejestrowy przejmującego</value>
        [DataMember(Name="receiverIdentificationNumber", EmitDefaultValue=false)]
        public string ReceiverIdentificationNumber { get; set; }

        /// <summary>
        /// NIP przejmującego
        /// </summary>
        /// <value>NIP przejmującego</value>
        [DataMember(Name="receiverNip", EmitDefaultValue=false)]
        public string ReceiverNip { get; set; }

        /// <summary>
        /// NIP europejski przejmującego
        /// </summary>
        /// <value>NIP europejski przejmującego</value>
        [DataMember(Name="receiverNipEu", EmitDefaultValue=false)]
        public string ReceiverNipEu { get; set; }

        /// <summary>
        /// Nazwa gminy
        /// </summary>
        /// <value>Nazwa gminy</value>
        [DataMember(Name="communeName", EmitDefaultValue=false)]
        public string CommuneName { get; set; }

        /// <summary>
        /// Obszar gminy
        /// </summary>
        /// <value>Obszar gminy</value>
        [DataMember(Name="communeArea", EmitDefaultValue=false)]
        public string CommuneArea { get; set; }

        /// <summary>
        /// Kod i opis odpadu
        /// </summary>
        /// <value>Kod i opis odpadu</value>
        [DataMember(Name="wasteCodeAndDescription", EmitDefaultValue=false)]
        public string WasteCodeAndDescription { get; set; }

        /// <summary>
        /// Masa odpadów
        /// </summary>
        /// <value>Masa odpadów</value>
        [DataMember(Name="wasteMass", EmitDefaultValue=false)]
        public string WasteMass { get; set; }

        /// <summary>
        /// Uwagi
        /// </summary>
        /// <value>Uwagi</value>
        [DataMember(Name="remarks", EmitDefaultValue=false)]
        public string Remarks { get; set; }

        /// <summary>
        /// Numer rejestracyjny środka transportu
        /// </summary>
        /// <value>Numer rejestracyjny środka transportu</value>
        [DataMember(Name="vehicleRegNumber", EmitDefaultValue=false)]
        public string VehicleRegNumber { get; set; }

        /// <summary>
        /// Rzeczywista data rozpoczęcia transportu
        /// </summary>
        /// <value>Rzeczywista data rozpoczęcia transportu</value>
        [DataMember(Name="realTransportDate", EmitDefaultValue=false)]
        public string RealTransportDate { get; set; }

        /// <summary>
        /// Rzeczywista godzina rozpoczęcia transportu
        /// </summary>
        /// <value>Rzeczywista godzina rozpoczęcia transportu</value>
        [DataMember(Name="realTransportTime", EmitDefaultValue=false)]
        public string RealTransportTime { get; set; }

        /// <summary>
        /// Data otrzymania potwierdzenia
        /// </summary>
        /// <value>Data otrzymania potwierdzenia</value>
        [DataMember(Name="receiveConfirmationDate", EmitDefaultValue=false)]
        public string ReceiveConfirmationDate { get; set; }

        /// <summary>
        /// Data otrzymania potwierdzenia
        /// </summary>
        /// <value>Data otrzymania potwierdzenia</value>
        [DataMember(Name="receiveConfirmationTime", EmitDefaultValue=false)]
        public string ReceiveConfirmationTime { get; set; }

        /// <summary>
        /// Data zatwierdzenia karty
        /// </summary>
        /// <value>Data zatwierdzenia karty</value>
        [DataMember(Name="approvalDate", EmitDefaultValue=false)]
        public string ApprovalDate { get; set; }

        /// <summary>
        /// Godzina zatwierdzenia kart
        /// </summary>
        /// <value>Godzina zatwierdzenia kart</value>
        [DataMember(Name="approvalTime", EmitDefaultValue=false)]
        public string ApprovalTime { get; set; }

        /// <summary>
        /// Imię i Nazwisko użytkownika zatwierdzającego kartę
        /// </summary>
        /// <value>Imię i Nazwisko użytkownika zatwierdzającego kartę</value>
        [DataMember(Name="approvedByUser", EmitDefaultValue=false)]
        public string ApprovedByUser { get; set; }

        /// <summary>
        /// Data potwierdzenia transportu
        /// </summary>
        /// <value>Data potwierdzenia transportu</value>
        [DataMember(Name="transportConfirmationDate", EmitDefaultValue=false)]
        public string TransportConfirmationDate { get; set; }

        /// <summary>
        /// Godzina potwierdzenia transportu
        /// </summary>
        /// <value>Godzina potwierdzenia transportu</value>
        [DataMember(Name="transportConfirmationTime", EmitDefaultValue=false)]
        public string TransportConfirmationTime { get; set; }

        /// <summary>
        /// Użytkownik potwierdzający transport
        /// </summary>
        /// <value>Użytkownik potwierdzający transport</value>
        [DataMember(Name="transportConfirmedByUser", EmitDefaultValue=false)]
        public string TransportConfirmedByUser { get; set; }

        /// <summary>
        /// Użytkownik potwierdzający przejęcie
        /// </summary>
        /// <value>Użytkownik potwierdzający przejęcie</value>
        [DataMember(Name="receiveConfirmedByUser", EmitDefaultValue=false)]
        public string ReceiveConfirmedByUser { get; set; }

        /// <summary>
        /// Kod ex
        /// </summary>
        /// <value>Kod ex</value>
        [DataMember(Name="wasteCodeExtended", EmitDefaultValue=false)]
        public bool? WasteCodeExtended { get; set; }

        /// <summary>
        /// Rodzaj odpadu ex
        /// </summary>
        /// <value>Rodzaj odpadu ex</value>
        [DataMember(Name="wasteCodeExtendedDescription", EmitDefaultValue=false)]
        public string WasteCodeExtendedDescription { get; set; }

        /// <summary>
        /// Zmiana statusu odpadów niebezpiecznych na odpady inne niż niebezpieczne
        /// </summary>
        /// <value>Zmiana statusu odpadów niebezpiecznych na odpady inne niż niebezpieczne</value>
        [DataMember(Name="hazardousWasteReclassification", EmitDefaultValue=false)]
        public bool? HazardousWasteReclassification { get; set; }

        /// <summary>
        /// Rodzaj odpadu
        /// </summary>
        /// <value>Rodzaj odpadu</value>
        [DataMember(Name="hazardousWasteReclassificationDescription", EmitDefaultValue=false)]
        public string HazardousWasteReclassificationDescription { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class WasteRegisterPublicApiApiModelsResponsesWasteRegisterMuncipalWasteTransferCardV1KpokTransferPrintingPage {\n");
            sb.Append("  CardNumber: ").Append(CardNumber).Append("\n");
            sb.Append("  CardStatus: ").Append(CardStatus).Append("\n");
            sb.Append("  CalendarYear: ").Append(CalendarYear).Append("\n");
            sb.Append("  SenderNameOrFirstNameAndLastName: ").Append(SenderNameOrFirstNameAndLastName).Append("\n");
            sb.Append("  SenderAddress: ").Append(SenderAddress).Append("\n");
            sb.Append("  SenderEupNumber: ").Append(SenderEupNumber).Append("\n");
            sb.Append("  SenderEupName: ").Append(SenderEupName).Append("\n");
            sb.Append("  SenderEupAddress: ").Append(SenderEupAddress).Append("\n");
            sb.Append("  SenderIdentificationNumber: ").Append(SenderIdentificationNumber).Append("\n");
            sb.Append("  SenderNip: ").Append(SenderNip).Append("\n");
            sb.Append("  SenderNipEu: ").Append(SenderNipEu).Append("\n");
            sb.Append("  CarrierNameOrFirstNameAndLastName: ").Append(CarrierNameOrFirstNameAndLastName).Append("\n");
            sb.Append("  CarrierAddress: ").Append(CarrierAddress).Append("\n");
            sb.Append("  CarrierIdentificationNumber: ").Append(CarrierIdentificationNumber).Append("\n");
            sb.Append("  CarrierNip: ").Append(CarrierNip).Append("\n");
            sb.Append("  CarrierNipEu: ").Append(CarrierNipEu).Append("\n");
            sb.Append("  ReceiverNameOrFirstNameAndLastName: ").Append(ReceiverNameOrFirstNameAndLastName).Append("\n");
            sb.Append("  ReceiverAddress: ").Append(ReceiverAddress).Append("\n");
            sb.Append("  ReceiverEupNumber: ").Append(ReceiverEupNumber).Append("\n");
            sb.Append("  ReceiverEupName: ").Append(ReceiverEupName).Append("\n");
            sb.Append("  ReceiverEupAddress: ").Append(ReceiverEupAddress).Append("\n");
            sb.Append("  ReceiverIdentificationNumber: ").Append(ReceiverIdentificationNumber).Append("\n");
            sb.Append("  ReceiverNip: ").Append(ReceiverNip).Append("\n");
            sb.Append("  ReceiverNipEu: ").Append(ReceiverNipEu).Append("\n");
            sb.Append("  CommuneName: ").Append(CommuneName).Append("\n");
            sb.Append("  CommuneArea: ").Append(CommuneArea).Append("\n");
            sb.Append("  WasteCodeAndDescription: ").Append(WasteCodeAndDescription).Append("\n");
            sb.Append("  WasteMass: ").Append(WasteMass).Append("\n");
            sb.Append("  Remarks: ").Append(Remarks).Append("\n");
            sb.Append("  VehicleRegNumber: ").Append(VehicleRegNumber).Append("\n");
            sb.Append("  RealTransportDate: ").Append(RealTransportDate).Append("\n");
            sb.Append("  RealTransportTime: ").Append(RealTransportTime).Append("\n");
            sb.Append("  ReceiveConfirmationDate: ").Append(ReceiveConfirmationDate).Append("\n");
            sb.Append("  ReceiveConfirmationTime: ").Append(ReceiveConfirmationTime).Append("\n");
            sb.Append("  ApprovalDate: ").Append(ApprovalDate).Append("\n");
            sb.Append("  ApprovalTime: ").Append(ApprovalTime).Append("\n");
            sb.Append("  ApprovedByUser: ").Append(ApprovedByUser).Append("\n");
            sb.Append("  TransportConfirmationDate: ").Append(TransportConfirmationDate).Append("\n");
            sb.Append("  TransportConfirmationTime: ").Append(TransportConfirmationTime).Append("\n");
            sb.Append("  TransportConfirmedByUser: ").Append(TransportConfirmedByUser).Append("\n");
            sb.Append("  ReceiveConfirmedByUser: ").Append(ReceiveConfirmedByUser).Append("\n");
            sb.Append("  WasteCodeExtended: ").Append(WasteCodeExtended).Append("\n");
            sb.Append("  WasteCodeExtendedDescription: ").Append(WasteCodeExtendedDescription).Append("\n");
            sb.Append("  HazardousWasteReclassification: ").Append(HazardousWasteReclassification).Append("\n");
            sb.Append("  HazardousWasteReclassificationDescription: ").Append(HazardousWasteReclassificationDescription).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as WasteRegisterPublicApiApiModelsResponsesWasteRegisterMuncipalWasteTransferCardV1KpokTransferPrintingPage);
        }

        /// <summary>
        /// Returns true if WasteRegisterPublicApiApiModelsResponsesWasteRegisterMuncipalWasteTransferCardV1KpokTransferPrintingPage instances are equal
        /// </summary>
        /// <param name="input">Instance of WasteRegisterPublicApiApiModelsResponsesWasteRegisterMuncipalWasteTransferCardV1KpokTransferPrintingPage to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(WasteRegisterPublicApiApiModelsResponsesWasteRegisterMuncipalWasteTransferCardV1KpokTransferPrintingPage input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.CardNumber == input.CardNumber ||
                    (this.CardNumber != null &&
                    this.CardNumber.Equals(input.CardNumber))
                ) && 
                (
                    this.CardStatus == input.CardStatus ||
                    (this.CardStatus != null &&
                    this.CardStatus.Equals(input.CardStatus))
                ) && 
                (
                    this.CalendarYear == input.CalendarYear ||
                    (this.CalendarYear != null &&
                    this.CalendarYear.Equals(input.CalendarYear))
                ) && 
                (
                    this.SenderNameOrFirstNameAndLastName == input.SenderNameOrFirstNameAndLastName ||
                    (this.SenderNameOrFirstNameAndLastName != null &&
                    this.SenderNameOrFirstNameAndLastName.Equals(input.SenderNameOrFirstNameAndLastName))
                ) && 
                (
                    this.SenderAddress == input.SenderAddress ||
                    (this.SenderAddress != null &&
                    this.SenderAddress.Equals(input.SenderAddress))
                ) && 
                (
                    this.SenderEupNumber == input.SenderEupNumber ||
                    (this.SenderEupNumber != null &&
                    this.SenderEupNumber.Equals(input.SenderEupNumber))
                ) && 
                (
                    this.SenderEupName == input.SenderEupName ||
                    (this.SenderEupName != null &&
                    this.SenderEupName.Equals(input.SenderEupName))
                ) && 
                (
                    this.SenderEupAddress == input.SenderEupAddress ||
                    (this.SenderEupAddress != null &&
                    this.SenderEupAddress.Equals(input.SenderEupAddress))
                ) && 
                (
                    this.SenderIdentificationNumber == input.SenderIdentificationNumber ||
                    (this.SenderIdentificationNumber != null &&
                    this.SenderIdentificationNumber.Equals(input.SenderIdentificationNumber))
                ) && 
                (
                    this.SenderNip == input.SenderNip ||
                    (this.SenderNip != null &&
                    this.SenderNip.Equals(input.SenderNip))
                ) && 
                (
                    this.SenderNipEu == input.SenderNipEu ||
                    (this.SenderNipEu != null &&
                    this.SenderNipEu.Equals(input.SenderNipEu))
                ) && 
                (
                    this.CarrierNameOrFirstNameAndLastName == input.CarrierNameOrFirstNameAndLastName ||
                    (this.CarrierNameOrFirstNameAndLastName != null &&
                    this.CarrierNameOrFirstNameAndLastName.Equals(input.CarrierNameOrFirstNameAndLastName))
                ) && 
                (
                    this.CarrierAddress == input.CarrierAddress ||
                    (this.CarrierAddress != null &&
                    this.CarrierAddress.Equals(input.CarrierAddress))
                ) && 
                (
                    this.CarrierIdentificationNumber == input.CarrierIdentificationNumber ||
                    (this.CarrierIdentificationNumber != null &&
                    this.CarrierIdentificationNumber.Equals(input.CarrierIdentificationNumber))
                ) && 
                (
                    this.CarrierNip == input.CarrierNip ||
                    (this.CarrierNip != null &&
                    this.CarrierNip.Equals(input.CarrierNip))
                ) && 
                (
                    this.CarrierNipEu == input.CarrierNipEu ||
                    (this.CarrierNipEu != null &&
                    this.CarrierNipEu.Equals(input.CarrierNipEu))
                ) && 
                (
                    this.ReceiverNameOrFirstNameAndLastName == input.ReceiverNameOrFirstNameAndLastName ||
                    (this.ReceiverNameOrFirstNameAndLastName != null &&
                    this.ReceiverNameOrFirstNameAndLastName.Equals(input.ReceiverNameOrFirstNameAndLastName))
                ) && 
                (
                    this.ReceiverAddress == input.ReceiverAddress ||
                    (this.ReceiverAddress != null &&
                    this.ReceiverAddress.Equals(input.ReceiverAddress))
                ) && 
                (
                    this.ReceiverEupNumber == input.ReceiverEupNumber ||
                    (this.ReceiverEupNumber != null &&
                    this.ReceiverEupNumber.Equals(input.ReceiverEupNumber))
                ) && 
                (
                    this.ReceiverEupName == input.ReceiverEupName ||
                    (this.ReceiverEupName != null &&
                    this.ReceiverEupName.Equals(input.ReceiverEupName))
                ) && 
                (
                    this.ReceiverEupAddress == input.ReceiverEupAddress ||
                    (this.ReceiverEupAddress != null &&
                    this.ReceiverEupAddress.Equals(input.ReceiverEupAddress))
                ) && 
                (
                    this.ReceiverIdentificationNumber == input.ReceiverIdentificationNumber ||
                    (this.ReceiverIdentificationNumber != null &&
                    this.ReceiverIdentificationNumber.Equals(input.ReceiverIdentificationNumber))
                ) && 
                (
                    this.ReceiverNip == input.ReceiverNip ||
                    (this.ReceiverNip != null &&
                    this.ReceiverNip.Equals(input.ReceiverNip))
                ) && 
                (
                    this.ReceiverNipEu == input.ReceiverNipEu ||
                    (this.ReceiverNipEu != null &&
                    this.ReceiverNipEu.Equals(input.ReceiverNipEu))
                ) && 
                (
                    this.CommuneName == input.CommuneName ||
                    (this.CommuneName != null &&
                    this.CommuneName.Equals(input.CommuneName))
                ) && 
                (
                    this.CommuneArea == input.CommuneArea ||
                    (this.CommuneArea != null &&
                    this.CommuneArea.Equals(input.CommuneArea))
                ) && 
                (
                    this.WasteCodeAndDescription == input.WasteCodeAndDescription ||
                    (this.WasteCodeAndDescription != null &&
                    this.WasteCodeAndDescription.Equals(input.WasteCodeAndDescription))
                ) && 
                (
                    this.WasteMass == input.WasteMass ||
                    (this.WasteMass != null &&
                    this.WasteMass.Equals(input.WasteMass))
                ) && 
                (
                    this.Remarks == input.Remarks ||
                    (this.Remarks != null &&
                    this.Remarks.Equals(input.Remarks))
                ) && 
                (
                    this.VehicleRegNumber == input.VehicleRegNumber ||
                    (this.VehicleRegNumber != null &&
                    this.VehicleRegNumber.Equals(input.VehicleRegNumber))
                ) && 
                (
                    this.RealTransportDate == input.RealTransportDate ||
                    (this.RealTransportDate != null &&
                    this.RealTransportDate.Equals(input.RealTransportDate))
                ) && 
                (
                    this.RealTransportTime == input.RealTransportTime ||
                    (this.RealTransportTime != null &&
                    this.RealTransportTime.Equals(input.RealTransportTime))
                ) && 
                (
                    this.ReceiveConfirmationDate == input.ReceiveConfirmationDate ||
                    (this.ReceiveConfirmationDate != null &&
                    this.ReceiveConfirmationDate.Equals(input.ReceiveConfirmationDate))
                ) && 
                (
                    this.ReceiveConfirmationTime == input.ReceiveConfirmationTime ||
                    (this.ReceiveConfirmationTime != null &&
                    this.ReceiveConfirmationTime.Equals(input.ReceiveConfirmationTime))
                ) && 
                (
                    this.ApprovalDate == input.ApprovalDate ||
                    (this.ApprovalDate != null &&
                    this.ApprovalDate.Equals(input.ApprovalDate))
                ) && 
                (
                    this.ApprovalTime == input.ApprovalTime ||
                    (this.ApprovalTime != null &&
                    this.ApprovalTime.Equals(input.ApprovalTime))
                ) && 
                (
                    this.ApprovedByUser == input.ApprovedByUser ||
                    (this.ApprovedByUser != null &&
                    this.ApprovedByUser.Equals(input.ApprovedByUser))
                ) && 
                (
                    this.TransportConfirmationDate == input.TransportConfirmationDate ||
                    (this.TransportConfirmationDate != null &&
                    this.TransportConfirmationDate.Equals(input.TransportConfirmationDate))
                ) && 
                (
                    this.TransportConfirmationTime == input.TransportConfirmationTime ||
                    (this.TransportConfirmationTime != null &&
                    this.TransportConfirmationTime.Equals(input.TransportConfirmationTime))
                ) && 
                (
                    this.TransportConfirmedByUser == input.TransportConfirmedByUser ||
                    (this.TransportConfirmedByUser != null &&
                    this.TransportConfirmedByUser.Equals(input.TransportConfirmedByUser))
                ) && 
                (
                    this.ReceiveConfirmedByUser == input.ReceiveConfirmedByUser ||
                    (this.ReceiveConfirmedByUser != null &&
                    this.ReceiveConfirmedByUser.Equals(input.ReceiveConfirmedByUser))
                ) && 
                (
                    this.WasteCodeExtended == input.WasteCodeExtended ||
                    (this.WasteCodeExtended != null &&
                    this.WasteCodeExtended.Equals(input.WasteCodeExtended))
                ) && 
                (
                    this.WasteCodeExtendedDescription == input.WasteCodeExtendedDescription ||
                    (this.WasteCodeExtendedDescription != null &&
                    this.WasteCodeExtendedDescription.Equals(input.WasteCodeExtendedDescription))
                ) && 
                (
                    this.HazardousWasteReclassification == input.HazardousWasteReclassification ||
                    (this.HazardousWasteReclassification != null &&
                    this.HazardousWasteReclassification.Equals(input.HazardousWasteReclassification))
                ) && 
                (
                    this.HazardousWasteReclassificationDescription == input.HazardousWasteReclassificationDescription ||
                    (this.HazardousWasteReclassificationDescription != null &&
                    this.HazardousWasteReclassificationDescription.Equals(input.HazardousWasteReclassificationDescription))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.CardNumber != null)
                    hashCode = hashCode * 59 + this.CardNumber.GetHashCode();
                if (this.CardStatus != null)
                    hashCode = hashCode * 59 + this.CardStatus.GetHashCode();
                if (this.CalendarYear != null)
                    hashCode = hashCode * 59 + this.CalendarYear.GetHashCode();
                if (this.SenderNameOrFirstNameAndLastName != null)
                    hashCode = hashCode * 59 + this.SenderNameOrFirstNameAndLastName.GetHashCode();
                if (this.SenderAddress != null)
                    hashCode = hashCode * 59 + this.SenderAddress.GetHashCode();
                if (this.SenderEupNumber != null)
                    hashCode = hashCode * 59 + this.SenderEupNumber.GetHashCode();
                if (this.SenderEupName != null)
                    hashCode = hashCode * 59 + this.SenderEupName.GetHashCode();
                if (this.SenderEupAddress != null)
                    hashCode = hashCode * 59 + this.SenderEupAddress.GetHashCode();
                if (this.SenderIdentificationNumber != null)
                    hashCode = hashCode * 59 + this.SenderIdentificationNumber.GetHashCode();
                if (this.SenderNip != null)
                    hashCode = hashCode * 59 + this.SenderNip.GetHashCode();
                if (this.SenderNipEu != null)
                    hashCode = hashCode * 59 + this.SenderNipEu.GetHashCode();
                if (this.CarrierNameOrFirstNameAndLastName != null)
                    hashCode = hashCode * 59 + this.CarrierNameOrFirstNameAndLastName.GetHashCode();
                if (this.CarrierAddress != null)
                    hashCode = hashCode * 59 + this.CarrierAddress.GetHashCode();
                if (this.CarrierIdentificationNumber != null)
                    hashCode = hashCode * 59 + this.CarrierIdentificationNumber.GetHashCode();
                if (this.CarrierNip != null)
                    hashCode = hashCode * 59 + this.CarrierNip.GetHashCode();
                if (this.CarrierNipEu != null)
                    hashCode = hashCode * 59 + this.CarrierNipEu.GetHashCode();
                if (this.ReceiverNameOrFirstNameAndLastName != null)
                    hashCode = hashCode * 59 + this.ReceiverNameOrFirstNameAndLastName.GetHashCode();
                if (this.ReceiverAddress != null)
                    hashCode = hashCode * 59 + this.ReceiverAddress.GetHashCode();
                if (this.ReceiverEupNumber != null)
                    hashCode = hashCode * 59 + this.ReceiverEupNumber.GetHashCode();
                if (this.ReceiverEupName != null)
                    hashCode = hashCode * 59 + this.ReceiverEupName.GetHashCode();
                if (this.ReceiverEupAddress != null)
                    hashCode = hashCode * 59 + this.ReceiverEupAddress.GetHashCode();
                if (this.ReceiverIdentificationNumber != null)
                    hashCode = hashCode * 59 + this.ReceiverIdentificationNumber.GetHashCode();
                if (this.ReceiverNip != null)
                    hashCode = hashCode * 59 + this.ReceiverNip.GetHashCode();
                if (this.ReceiverNipEu != null)
                    hashCode = hashCode * 59 + this.ReceiverNipEu.GetHashCode();
                if (this.CommuneName != null)
                    hashCode = hashCode * 59 + this.CommuneName.GetHashCode();
                if (this.CommuneArea != null)
                    hashCode = hashCode * 59 + this.CommuneArea.GetHashCode();
                if (this.WasteCodeAndDescription != null)
                    hashCode = hashCode * 59 + this.WasteCodeAndDescription.GetHashCode();
                if (this.WasteMass != null)
                    hashCode = hashCode * 59 + this.WasteMass.GetHashCode();
                if (this.Remarks != null)
                    hashCode = hashCode * 59 + this.Remarks.GetHashCode();
                if (this.VehicleRegNumber != null)
                    hashCode = hashCode * 59 + this.VehicleRegNumber.GetHashCode();
                if (this.RealTransportDate != null)
                    hashCode = hashCode * 59 + this.RealTransportDate.GetHashCode();
                if (this.RealTransportTime != null)
                    hashCode = hashCode * 59 + this.RealTransportTime.GetHashCode();
                if (this.ReceiveConfirmationDate != null)
                    hashCode = hashCode * 59 + this.ReceiveConfirmationDate.GetHashCode();
                if (this.ReceiveConfirmationTime != null)
                    hashCode = hashCode * 59 + this.ReceiveConfirmationTime.GetHashCode();
                if (this.ApprovalDate != null)
                    hashCode = hashCode * 59 + this.ApprovalDate.GetHashCode();
                if (this.ApprovalTime != null)
                    hashCode = hashCode * 59 + this.ApprovalTime.GetHashCode();
                if (this.ApprovedByUser != null)
                    hashCode = hashCode * 59 + this.ApprovedByUser.GetHashCode();
                if (this.TransportConfirmationDate != null)
                    hashCode = hashCode * 59 + this.TransportConfirmationDate.GetHashCode();
                if (this.TransportConfirmationTime != null)
                    hashCode = hashCode * 59 + this.TransportConfirmationTime.GetHashCode();
                if (this.TransportConfirmedByUser != null)
                    hashCode = hashCode * 59 + this.TransportConfirmedByUser.GetHashCode();
                if (this.ReceiveConfirmedByUser != null)
                    hashCode = hashCode * 59 + this.ReceiveConfirmedByUser.GetHashCode();
                if (this.WasteCodeExtended != null)
                    hashCode = hashCode * 59 + this.WasteCodeExtended.GetHashCode();
                if (this.WasteCodeExtendedDescription != null)
                    hashCode = hashCode * 59 + this.WasteCodeExtendedDescription.GetHashCode();
                if (this.HazardousWasteReclassification != null)
                    hashCode = hashCode * 59 + this.HazardousWasteReclassification.GetHashCode();
                if (this.HazardousWasteReclassificationDescription != null)
                    hashCode = hashCode * 59 + this.HazardousWasteReclassificationDescription.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
