/* 
 * v1 Waste Register public Api
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// WasteRegisterPublicApiApiModelsElasticsearchTerytCommuneEs
    /// </summary>
    [DataContract]
    public partial class WasteRegisterPublicApiApiModelsElasticsearchTerytCommuneEs :  IEquatable<WasteRegisterPublicApiApiModelsElasticsearchTerytCommuneEs>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="WasteRegisterPublicApiApiModelsElasticsearchTerytCommuneEs" /> class.
        /// </summary>
        /// <param name="pk">pk.</param>
        /// <param name="fulltext">fulltext.</param>
        /// <param name="fulltextHtml">fulltextHtml.</param>
        /// <param name="rodzajGminy">rodzajGminy.</param>
        /// <param name="gmina">gmina.</param>
        /// <param name="powiat">powiat.</param>
        /// <param name="wojewodztwo">wojewodztwo.</param>
        public WasteRegisterPublicApiApiModelsElasticsearchTerytCommuneEs(string pk = default(string), string fulltext = default(string), string fulltextHtml = default(string), string rodzajGminy = default(string), string gmina = default(string), string powiat = default(string), string wojewodztwo = default(string))
        {
            this.Pk = pk;
            this.Fulltext = fulltext;
            this.FulltextHtml = fulltextHtml;
            this.RodzajGminy = rodzajGminy;
            this.Gmina = gmina;
            this.Powiat = powiat;
            this.Wojewodztwo = wojewodztwo;
        }
        
        /// <summary>
        /// Gets or Sets Pk
        /// </summary>
        [DataMember(Name="pk", EmitDefaultValue=false)]
        public string Pk { get; set; }

        /// <summary>
        /// Gets or Sets Fulltext
        /// </summary>
        [DataMember(Name="fulltext", EmitDefaultValue=false)]
        public string Fulltext { get; set; }

        /// <summary>
        /// Gets or Sets FulltextHtml
        /// </summary>
        [DataMember(Name="fulltext_html", EmitDefaultValue=false)]
        public string FulltextHtml { get; set; }

        /// <summary>
        /// Gets or Sets RodzajGminy
        /// </summary>
        [DataMember(Name="rodzaj_gminy", EmitDefaultValue=false)]
        public string RodzajGminy { get; set; }

        /// <summary>
        /// Gets or Sets Gmina
        /// </summary>
        [DataMember(Name="gmina", EmitDefaultValue=false)]
        public string Gmina { get; set; }

        /// <summary>
        /// Gets or Sets Powiat
        /// </summary>
        [DataMember(Name="powiat", EmitDefaultValue=false)]
        public string Powiat { get; set; }

        /// <summary>
        /// Gets or Sets Wojewodztwo
        /// </summary>
        [DataMember(Name="wojewodztwo", EmitDefaultValue=false)]
        public string Wojewodztwo { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class WasteRegisterPublicApiApiModelsElasticsearchTerytCommuneEs {\n");
            sb.Append("  Pk: ").Append(Pk).Append("\n");
            sb.Append("  Fulltext: ").Append(Fulltext).Append("\n");
            sb.Append("  FulltextHtml: ").Append(FulltextHtml).Append("\n");
            sb.Append("  RodzajGminy: ").Append(RodzajGminy).Append("\n");
            sb.Append("  Gmina: ").Append(Gmina).Append("\n");
            sb.Append("  Powiat: ").Append(Powiat).Append("\n");
            sb.Append("  Wojewodztwo: ").Append(Wojewodztwo).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as WasteRegisterPublicApiApiModelsElasticsearchTerytCommuneEs);
        }

        /// <summary>
        /// Returns true if WasteRegisterPublicApiApiModelsElasticsearchTerytCommuneEs instances are equal
        /// </summary>
        /// <param name="input">Instance of WasteRegisterPublicApiApiModelsElasticsearchTerytCommuneEs to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(WasteRegisterPublicApiApiModelsElasticsearchTerytCommuneEs input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Pk == input.Pk ||
                    (this.Pk != null &&
                    this.Pk.Equals(input.Pk))
                ) && 
                (
                    this.Fulltext == input.Fulltext ||
                    (this.Fulltext != null &&
                    this.Fulltext.Equals(input.Fulltext))
                ) && 
                (
                    this.FulltextHtml == input.FulltextHtml ||
                    (this.FulltextHtml != null &&
                    this.FulltextHtml.Equals(input.FulltextHtml))
                ) && 
                (
                    this.RodzajGminy == input.RodzajGminy ||
                    (this.RodzajGminy != null &&
                    this.RodzajGminy.Equals(input.RodzajGminy))
                ) && 
                (
                    this.Gmina == input.Gmina ||
                    (this.Gmina != null &&
                    this.Gmina.Equals(input.Gmina))
                ) && 
                (
                    this.Powiat == input.Powiat ||
                    (this.Powiat != null &&
                    this.Powiat.Equals(input.Powiat))
                ) && 
                (
                    this.Wojewodztwo == input.Wojewodztwo ||
                    (this.Wojewodztwo != null &&
                    this.Wojewodztwo.Equals(input.Wojewodztwo))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Pk != null)
                    hashCode = hashCode * 59 + this.Pk.GetHashCode();
                if (this.Fulltext != null)
                    hashCode = hashCode * 59 + this.Fulltext.GetHashCode();
                if (this.FulltextHtml != null)
                    hashCode = hashCode * 59 + this.FulltextHtml.GetHashCode();
                if (this.RodzajGminy != null)
                    hashCode = hashCode * 59 + this.RodzajGminy.GetHashCode();
                if (this.Gmina != null)
                    hashCode = hashCode * 59 + this.Gmina.GetHashCode();
                if (this.Powiat != null)
                    hashCode = hashCode * 59 + this.Powiat.GetHashCode();
                if (this.Wojewodztwo != null)
                    hashCode = hashCode * 59 + this.Wojewodztwo.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
