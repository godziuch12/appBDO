/* 
 * v1 Waste Register public Api
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// WasteRegisterPublicApiApiModelsResponsesWasteRegisterWreckWasteRecordCardV1GetCollectingTransferredVehicleResponse
    /// </summary>
    [DataContract]
    public partial class WasteRegisterPublicApiApiModelsResponsesWasteRegisterWreckWasteRecordCardV1GetCollectingTransferredVehicleResponse :  IEquatable<WasteRegisterPublicApiApiModelsResponsesWasteRegisterWreckWasteRecordCardV1GetCollectingTransferredVehicleResponse>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="WasteRegisterPublicApiApiModelsResponsesWasteRegisterWreckWasteRecordCardV1GetCollectingTransferredVehicleResponse" /> class.
        /// </summary>
        /// <param name="kepwCollectingTransferredVehiclesId">Id wpisu Prowadzący punkt zbierania pojazdów - Przekazane.</param>
        /// <param name="kepwId">Id karty ewidencji pojazdów wycofanych z eksploatacji.</param>
        /// <param name="kpoId">Id karty przekazania odpadów.</param>
        /// <param name="vehiclesMass">Masa [Mg].</param>
        /// <param name="vehiclesCount">Liczba [szt.].</param>
        /// <param name="transferDate">Data przekazania.</param>
        /// <param name="createdByUserId">Id użytkownika sporządzającego.</param>
        /// <param name="createdAt">Data utworzenia.</param>
        /// <param name="kpoCardNumber">Numer karty kpo.</param>
        public WasteRegisterPublicApiApiModelsResponsesWasteRegisterWreckWasteRecordCardV1GetCollectingTransferredVehicleResponse(Guid? kepwCollectingTransferredVehiclesId = default(Guid?), Guid? kepwId = default(Guid?), Guid? kpoId = default(Guid?), double? vehiclesMass = default(double?), int? vehiclesCount = default(int?), DateTime? transferDate = default(DateTime?), Guid? createdByUserId = default(Guid?), DateTime? createdAt = default(DateTime?), string kpoCardNumber = default(string))
        {
            this.KepwCollectingTransferredVehiclesId = kepwCollectingTransferredVehiclesId;
            this.KepwId = kepwId;
            this.KpoId = kpoId;
            this.VehiclesMass = vehiclesMass;
            this.VehiclesCount = vehiclesCount;
            this.TransferDate = transferDate;
            this.CreatedByUserId = createdByUserId;
            this.CreatedAt = createdAt;
            this.KpoCardNumber = kpoCardNumber;
        }
        
        /// <summary>
        /// Id wpisu Prowadzący punkt zbierania pojazdów - Przekazane
        /// </summary>
        /// <value>Id wpisu Prowadzący punkt zbierania pojazdów - Przekazane</value>
        [DataMember(Name="kepwCollectingTransferredVehiclesId", EmitDefaultValue=false)]
        public Guid? KepwCollectingTransferredVehiclesId { get; set; }

        /// <summary>
        /// Id karty ewidencji pojazdów wycofanych z eksploatacji
        /// </summary>
        /// <value>Id karty ewidencji pojazdów wycofanych z eksploatacji</value>
        [DataMember(Name="kepwId", EmitDefaultValue=false)]
        public Guid? KepwId { get; set; }

        /// <summary>
        /// Id karty przekazania odpadów
        /// </summary>
        /// <value>Id karty przekazania odpadów</value>
        [DataMember(Name="kpoId", EmitDefaultValue=false)]
        public Guid? KpoId { get; set; }

        /// <summary>
        /// Masa [Mg]
        /// </summary>
        /// <value>Masa [Mg]</value>
        [DataMember(Name="vehiclesMass", EmitDefaultValue=false)]
        public double? VehiclesMass { get; set; }

        /// <summary>
        /// Liczba [szt.]
        /// </summary>
        /// <value>Liczba [szt.]</value>
        [DataMember(Name="vehiclesCount", EmitDefaultValue=false)]
        public int? VehiclesCount { get; set; }

        /// <summary>
        /// Data przekazania
        /// </summary>
        /// <value>Data przekazania</value>
        [DataMember(Name="transferDate", EmitDefaultValue=false)]
        public DateTime? TransferDate { get; set; }

        /// <summary>
        /// Id użytkownika sporządzającego
        /// </summary>
        /// <value>Id użytkownika sporządzającego</value>
        [DataMember(Name="createdByUserId", EmitDefaultValue=false)]
        public Guid? CreatedByUserId { get; set; }

        /// <summary>
        /// Data utworzenia
        /// </summary>
        /// <value>Data utworzenia</value>
        [DataMember(Name="createdAt", EmitDefaultValue=false)]
        public DateTime? CreatedAt { get; set; }

        /// <summary>
        /// Numer karty kpo
        /// </summary>
        /// <value>Numer karty kpo</value>
        [DataMember(Name="kpoCardNumber", EmitDefaultValue=false)]
        public string KpoCardNumber { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class WasteRegisterPublicApiApiModelsResponsesWasteRegisterWreckWasteRecordCardV1GetCollectingTransferredVehicleResponse {\n");
            sb.Append("  KepwCollectingTransferredVehiclesId: ").Append(KepwCollectingTransferredVehiclesId).Append("\n");
            sb.Append("  KepwId: ").Append(KepwId).Append("\n");
            sb.Append("  KpoId: ").Append(KpoId).Append("\n");
            sb.Append("  VehiclesMass: ").Append(VehiclesMass).Append("\n");
            sb.Append("  VehiclesCount: ").Append(VehiclesCount).Append("\n");
            sb.Append("  TransferDate: ").Append(TransferDate).Append("\n");
            sb.Append("  CreatedByUserId: ").Append(CreatedByUserId).Append("\n");
            sb.Append("  CreatedAt: ").Append(CreatedAt).Append("\n");
            sb.Append("  KpoCardNumber: ").Append(KpoCardNumber).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as WasteRegisterPublicApiApiModelsResponsesWasteRegisterWreckWasteRecordCardV1GetCollectingTransferredVehicleResponse);
        }

        /// <summary>
        /// Returns true if WasteRegisterPublicApiApiModelsResponsesWasteRegisterWreckWasteRecordCardV1GetCollectingTransferredVehicleResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of WasteRegisterPublicApiApiModelsResponsesWasteRegisterWreckWasteRecordCardV1GetCollectingTransferredVehicleResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(WasteRegisterPublicApiApiModelsResponsesWasteRegisterWreckWasteRecordCardV1GetCollectingTransferredVehicleResponse input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.KepwCollectingTransferredVehiclesId == input.KepwCollectingTransferredVehiclesId ||
                    (this.KepwCollectingTransferredVehiclesId != null &&
                    this.KepwCollectingTransferredVehiclesId.Equals(input.KepwCollectingTransferredVehiclesId))
                ) && 
                (
                    this.KepwId == input.KepwId ||
                    (this.KepwId != null &&
                    this.KepwId.Equals(input.KepwId))
                ) && 
                (
                    this.KpoId == input.KpoId ||
                    (this.KpoId != null &&
                    this.KpoId.Equals(input.KpoId))
                ) && 
                (
                    this.VehiclesMass == input.VehiclesMass ||
                    (this.VehiclesMass != null &&
                    this.VehiclesMass.Equals(input.VehiclesMass))
                ) && 
                (
                    this.VehiclesCount == input.VehiclesCount ||
                    (this.VehiclesCount != null &&
                    this.VehiclesCount.Equals(input.VehiclesCount))
                ) && 
                (
                    this.TransferDate == input.TransferDate ||
                    (this.TransferDate != null &&
                    this.TransferDate.Equals(input.TransferDate))
                ) && 
                (
                    this.CreatedByUserId == input.CreatedByUserId ||
                    (this.CreatedByUserId != null &&
                    this.CreatedByUserId.Equals(input.CreatedByUserId))
                ) && 
                (
                    this.CreatedAt == input.CreatedAt ||
                    (this.CreatedAt != null &&
                    this.CreatedAt.Equals(input.CreatedAt))
                ) && 
                (
                    this.KpoCardNumber == input.KpoCardNumber ||
                    (this.KpoCardNumber != null &&
                    this.KpoCardNumber.Equals(input.KpoCardNumber))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.KepwCollectingTransferredVehiclesId != null)
                    hashCode = hashCode * 59 + this.KepwCollectingTransferredVehiclesId.GetHashCode();
                if (this.KepwId != null)
                    hashCode = hashCode * 59 + this.KepwId.GetHashCode();
                if (this.KpoId != null)
                    hashCode = hashCode * 59 + this.KpoId.GetHashCode();
                if (this.VehiclesMass != null)
                    hashCode = hashCode * 59 + this.VehiclesMass.GetHashCode();
                if (this.VehiclesCount != null)
                    hashCode = hashCode * 59 + this.VehiclesCount.GetHashCode();
                if (this.TransferDate != null)
                    hashCode = hashCode * 59 + this.TransferDate.GetHashCode();
                if (this.CreatedByUserId != null)
                    hashCode = hashCode * 59 + this.CreatedByUserId.GetHashCode();
                if (this.CreatedAt != null)
                    hashCode = hashCode * 59 + this.CreatedAt.GetHashCode();
                if (this.KpoCardNumber != null)
                    hashCode = hashCode * 59 + this.KpoCardNumber.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
