/* 
 * v1 Waste Register public Api
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// WasteRegisterPublicApiApiModelsResponsesWasteRegisterHazardousWasteRecordCardV1GetKeonSummaryResponse
    /// </summary>
    [DataContract]
    public partial class WasteRegisterPublicApiApiModelsResponsesWasteRegisterHazardousWasteRecordCardV1GetKeonSummaryResponse :  IEquatable<WasteRegisterPublicApiApiModelsResponsesWasteRegisterHazardousWasteRecordCardV1GetKeonSummaryResponse>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="WasteRegisterPublicApiApiModelsResponsesWasteRegisterHazardousWasteRecordCardV1GetKeonSummaryResponse" /> class.
        /// </summary>
        /// <param name="sumBrokerWasteMass">sumBrokerWasteMass.</param>
        /// <param name="sumDealerWasteMass">sumDealerWasteMass.</param>
        /// <param name="totalSum">totalSum.</param>
        public WasteRegisterPublicApiApiModelsResponsesWasteRegisterHazardousWasteRecordCardV1GetKeonSummaryResponse(double? sumBrokerWasteMass = default(double?), double? sumDealerWasteMass = default(double?), double? totalSum = default(double?))
        {
            this.SumBrokerWasteMass = sumBrokerWasteMass;
            this.SumDealerWasteMass = sumDealerWasteMass;
            this.TotalSum = totalSum;
        }
        
        /// <summary>
        /// Gets or Sets SumBrokerWasteMass
        /// </summary>
        [DataMember(Name="sumBrokerWasteMass", EmitDefaultValue=false)]
        public double? SumBrokerWasteMass { get; set; }

        /// <summary>
        /// Gets or Sets SumDealerWasteMass
        /// </summary>
        [DataMember(Name="sumDealerWasteMass", EmitDefaultValue=false)]
        public double? SumDealerWasteMass { get; set; }

        /// <summary>
        /// Gets or Sets TotalSum
        /// </summary>
        [DataMember(Name="totalSum", EmitDefaultValue=false)]
        public double? TotalSum { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class WasteRegisterPublicApiApiModelsResponsesWasteRegisterHazardousWasteRecordCardV1GetKeonSummaryResponse {\n");
            sb.Append("  SumBrokerWasteMass: ").Append(SumBrokerWasteMass).Append("\n");
            sb.Append("  SumDealerWasteMass: ").Append(SumDealerWasteMass).Append("\n");
            sb.Append("  TotalSum: ").Append(TotalSum).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as WasteRegisterPublicApiApiModelsResponsesWasteRegisterHazardousWasteRecordCardV1GetKeonSummaryResponse);
        }

        /// <summary>
        /// Returns true if WasteRegisterPublicApiApiModelsResponsesWasteRegisterHazardousWasteRecordCardV1GetKeonSummaryResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of WasteRegisterPublicApiApiModelsResponsesWasteRegisterHazardousWasteRecordCardV1GetKeonSummaryResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(WasteRegisterPublicApiApiModelsResponsesWasteRegisterHazardousWasteRecordCardV1GetKeonSummaryResponse input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.SumBrokerWasteMass == input.SumBrokerWasteMass ||
                    (this.SumBrokerWasteMass != null &&
                    this.SumBrokerWasteMass.Equals(input.SumBrokerWasteMass))
                ) && 
                (
                    this.SumDealerWasteMass == input.SumDealerWasteMass ||
                    (this.SumDealerWasteMass != null &&
                    this.SumDealerWasteMass.Equals(input.SumDealerWasteMass))
                ) && 
                (
                    this.TotalSum == input.TotalSum ||
                    (this.TotalSum != null &&
                    this.TotalSum.Equals(input.TotalSum))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.SumBrokerWasteMass != null)
                    hashCode = hashCode * 59 + this.SumBrokerWasteMass.GetHashCode();
                if (this.SumDealerWasteMass != null)
                    hashCode = hashCode * 59 + this.SumDealerWasteMass.GetHashCode();
                if (this.TotalSum != null)
                    hashCode = hashCode * 59 + this.TotalSum.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
