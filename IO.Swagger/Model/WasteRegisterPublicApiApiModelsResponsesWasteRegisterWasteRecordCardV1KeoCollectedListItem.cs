/* 
 * v1 Waste Register public Api
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// WasteRegisterPublicApiApiModelsResponsesWasteRegisterWasteRecordCardV1KeoCollectedListItem
    /// </summary>
    [DataContract]
    public partial class WasteRegisterPublicApiApiModelsResponsesWasteRegisterWasteRecordCardV1KeoCollectedListItem :  IEquatable<WasteRegisterPublicApiApiModelsResponsesWasteRegisterWasteRecordCardV1KeoCollectedListItem>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="WasteRegisterPublicApiApiModelsResponsesWasteRegisterWasteRecordCardV1KeoCollectedListItem" /> class.
        /// </summary>
        /// <param name="keoCollectedId">Id wpisu Przyjęte odpady.</param>
        /// <param name="createdByUser">Utworzone przez użytkownika.</param>
        /// <param name="collectedDate">Data przejęcia odpadów.</param>
        /// <param name="isEntryBasedOnKpo">Wpis dokonywany na podstawie karty przekazania odpadów.</param>
        /// <param name="isImportToRp">Przywóz do RP.</param>
        /// <param name="isEquipmentOwnerExemptFromRecord">Posiadacz odpadów zwolniony z obowiązku prowadzenia ewidencji odpadów.</param>
        /// <param name="cardNumber">Numer karty.</param>
        /// <param name="collectedMass">Masa przejętych odpadów [Mg].</param>
        /// <param name="installationName">Nazwa instalacji.</param>
        public WasteRegisterPublicApiApiModelsResponsesWasteRegisterWasteRecordCardV1KeoCollectedListItem(Guid? keoCollectedId = default(Guid?), string createdByUser = default(string), DateTime? collectedDate = default(DateTime?), bool? isEntryBasedOnKpo = default(bool?), bool? isImportToRp = default(bool?), bool? isEquipmentOwnerExemptFromRecord = default(bool?), string cardNumber = default(string), double? collectedMass = default(double?), string installationName = default(string))
        {
            this.KeoCollectedId = keoCollectedId;
            this.CreatedByUser = createdByUser;
            this.CollectedDate = collectedDate;
            this.IsEntryBasedOnKpo = isEntryBasedOnKpo;
            this.IsImportToRp = isImportToRp;
            this.IsEquipmentOwnerExemptFromRecord = isEquipmentOwnerExemptFromRecord;
            this.CardNumber = cardNumber;
            this.CollectedMass = collectedMass;
            this.InstallationName = installationName;
        }
        
        /// <summary>
        /// Id wpisu Przyjęte odpady
        /// </summary>
        /// <value>Id wpisu Przyjęte odpady</value>
        [DataMember(Name="keoCollectedId", EmitDefaultValue=false)]
        public Guid? KeoCollectedId { get; set; }

        /// <summary>
        /// Utworzone przez użytkownika
        /// </summary>
        /// <value>Utworzone przez użytkownika</value>
        [DataMember(Name="createdByUser", EmitDefaultValue=false)]
        public string CreatedByUser { get; set; }

        /// <summary>
        /// Data przejęcia odpadów
        /// </summary>
        /// <value>Data przejęcia odpadów</value>
        [DataMember(Name="collectedDate", EmitDefaultValue=false)]
        public DateTime? CollectedDate { get; set; }

        /// <summary>
        /// Wpis dokonywany na podstawie karty przekazania odpadów
        /// </summary>
        /// <value>Wpis dokonywany na podstawie karty przekazania odpadów</value>
        [DataMember(Name="isEntryBasedOnKpo", EmitDefaultValue=false)]
        public bool? IsEntryBasedOnKpo { get; set; }

        /// <summary>
        /// Przywóz do RP
        /// </summary>
        /// <value>Przywóz do RP</value>
        [DataMember(Name="isImportToRp", EmitDefaultValue=false)]
        public bool? IsImportToRp { get; set; }

        /// <summary>
        /// Posiadacz odpadów zwolniony z obowiązku prowadzenia ewidencji odpadów
        /// </summary>
        /// <value>Posiadacz odpadów zwolniony z obowiązku prowadzenia ewidencji odpadów</value>
        [DataMember(Name="isEquipmentOwnerExemptFromRecord", EmitDefaultValue=false)]
        public bool? IsEquipmentOwnerExemptFromRecord { get; set; }

        /// <summary>
        /// Numer karty
        /// </summary>
        /// <value>Numer karty</value>
        [DataMember(Name="cardNumber", EmitDefaultValue=false)]
        public string CardNumber { get; set; }

        /// <summary>
        /// Masa przejętych odpadów [Mg]
        /// </summary>
        /// <value>Masa przejętych odpadów [Mg]</value>
        [DataMember(Name="collectedMass", EmitDefaultValue=false)]
        public double? CollectedMass { get; set; }

        /// <summary>
        /// Nazwa instalacji
        /// </summary>
        /// <value>Nazwa instalacji</value>
        [DataMember(Name="installationName", EmitDefaultValue=false)]
        public string InstallationName { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class WasteRegisterPublicApiApiModelsResponsesWasteRegisterWasteRecordCardV1KeoCollectedListItem {\n");
            sb.Append("  KeoCollectedId: ").Append(KeoCollectedId).Append("\n");
            sb.Append("  CreatedByUser: ").Append(CreatedByUser).Append("\n");
            sb.Append("  CollectedDate: ").Append(CollectedDate).Append("\n");
            sb.Append("  IsEntryBasedOnKpo: ").Append(IsEntryBasedOnKpo).Append("\n");
            sb.Append("  IsImportToRp: ").Append(IsImportToRp).Append("\n");
            sb.Append("  IsEquipmentOwnerExemptFromRecord: ").Append(IsEquipmentOwnerExemptFromRecord).Append("\n");
            sb.Append("  CardNumber: ").Append(CardNumber).Append("\n");
            sb.Append("  CollectedMass: ").Append(CollectedMass).Append("\n");
            sb.Append("  InstallationName: ").Append(InstallationName).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as WasteRegisterPublicApiApiModelsResponsesWasteRegisterWasteRecordCardV1KeoCollectedListItem);
        }

        /// <summary>
        /// Returns true if WasteRegisterPublicApiApiModelsResponsesWasteRegisterWasteRecordCardV1KeoCollectedListItem instances are equal
        /// </summary>
        /// <param name="input">Instance of WasteRegisterPublicApiApiModelsResponsesWasteRegisterWasteRecordCardV1KeoCollectedListItem to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(WasteRegisterPublicApiApiModelsResponsesWasteRegisterWasteRecordCardV1KeoCollectedListItem input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.KeoCollectedId == input.KeoCollectedId ||
                    (this.KeoCollectedId != null &&
                    this.KeoCollectedId.Equals(input.KeoCollectedId))
                ) && 
                (
                    this.CreatedByUser == input.CreatedByUser ||
                    (this.CreatedByUser != null &&
                    this.CreatedByUser.Equals(input.CreatedByUser))
                ) && 
                (
                    this.CollectedDate == input.CollectedDate ||
                    (this.CollectedDate != null &&
                    this.CollectedDate.Equals(input.CollectedDate))
                ) && 
                (
                    this.IsEntryBasedOnKpo == input.IsEntryBasedOnKpo ||
                    (this.IsEntryBasedOnKpo != null &&
                    this.IsEntryBasedOnKpo.Equals(input.IsEntryBasedOnKpo))
                ) && 
                (
                    this.IsImportToRp == input.IsImportToRp ||
                    (this.IsImportToRp != null &&
                    this.IsImportToRp.Equals(input.IsImportToRp))
                ) && 
                (
                    this.IsEquipmentOwnerExemptFromRecord == input.IsEquipmentOwnerExemptFromRecord ||
                    (this.IsEquipmentOwnerExemptFromRecord != null &&
                    this.IsEquipmentOwnerExemptFromRecord.Equals(input.IsEquipmentOwnerExemptFromRecord))
                ) && 
                (
                    this.CardNumber == input.CardNumber ||
                    (this.CardNumber != null &&
                    this.CardNumber.Equals(input.CardNumber))
                ) && 
                (
                    this.CollectedMass == input.CollectedMass ||
                    (this.CollectedMass != null &&
                    this.CollectedMass.Equals(input.CollectedMass))
                ) && 
                (
                    this.InstallationName == input.InstallationName ||
                    (this.InstallationName != null &&
                    this.InstallationName.Equals(input.InstallationName))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.KeoCollectedId != null)
                    hashCode = hashCode * 59 + this.KeoCollectedId.GetHashCode();
                if (this.CreatedByUser != null)
                    hashCode = hashCode * 59 + this.CreatedByUser.GetHashCode();
                if (this.CollectedDate != null)
                    hashCode = hashCode * 59 + this.CollectedDate.GetHashCode();
                if (this.IsEntryBasedOnKpo != null)
                    hashCode = hashCode * 59 + this.IsEntryBasedOnKpo.GetHashCode();
                if (this.IsImportToRp != null)
                    hashCode = hashCode * 59 + this.IsImportToRp.GetHashCode();
                if (this.IsEquipmentOwnerExemptFromRecord != null)
                    hashCode = hashCode * 59 + this.IsEquipmentOwnerExemptFromRecord.GetHashCode();
                if (this.CardNumber != null)
                    hashCode = hashCode * 59 + this.CardNumber.GetHashCode();
                if (this.CollectedMass != null)
                    hashCode = hashCode * 59 + this.CollectedMass.GetHashCode();
                if (this.InstallationName != null)
                    hashCode = hashCode * 59 + this.InstallationName.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
