/* 
 * v1 Waste Register public Api
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// WasteRegisterPublicApiApiModelsResponsesWasteRegisterWreckWasteRecordCardV1DismantleReceivedVehicleListItem
    /// </summary>
    [DataContract]
    public partial class WasteRegisterPublicApiApiModelsResponsesWasteRegisterWreckWasteRecordCardV1DismantleReceivedVehicleListItem :  IEquatable<WasteRegisterPublicApiApiModelsResponsesWasteRegisterWreckWasteRecordCardV1DismantleReceivedVehicleListItem>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="WasteRegisterPublicApiApiModelsResponsesWasteRegisterWreckWasteRecordCardV1DismantleReceivedVehicleListItem" /> class.
        /// </summary>
        /// <param name="dismantleReceivedVehicleId">Prowadzący stację demontażu - Przyjęte odpady.</param>
        /// <param name="receiveDate">Data przyjęcia.</param>
        /// <param name="kpoCardNumber">Numer karty kpo.</param>
        /// <param name="receivedWithKpo">Na podstawie karty przekazania odpadów.</param>
        /// <param name="receivedFromAbroad">Przywóz do RP.</param>
        /// <param name="ownerNotRegistered">Posiadacz odpadów zwolniony z obowiązku prowadzenia ewidencji odpadów.</param>
        /// <param name="receivedFromDismantleStation">Przyjęte do stacji demontażu od punktu zbierania pojazdów.</param>
        /// <param name="vehiclesMass">Masa [Mg].</param>
        /// <param name="vehiclesCount">Liczba [szt.].</param>
        /// <param name="createdByUser">Utworzone przez użytkownika.</param>
        public WasteRegisterPublicApiApiModelsResponsesWasteRegisterWreckWasteRecordCardV1DismantleReceivedVehicleListItem(Guid? dismantleReceivedVehicleId = default(Guid?), DateTime? receiveDate = default(DateTime?), string kpoCardNumber = default(string), bool? receivedWithKpo = default(bool?), bool? receivedFromAbroad = default(bool?), bool? ownerNotRegistered = default(bool?), bool? receivedFromDismantleStation = default(bool?), double? vehiclesMass = default(double?), int? vehiclesCount = default(int?), string createdByUser = default(string))
        {
            this.DismantleReceivedVehicleId = dismantleReceivedVehicleId;
            this.ReceiveDate = receiveDate;
            this.KpoCardNumber = kpoCardNumber;
            this.ReceivedWithKpo = receivedWithKpo;
            this.ReceivedFromAbroad = receivedFromAbroad;
            this.OwnerNotRegistered = ownerNotRegistered;
            this.ReceivedFromDismantleStation = receivedFromDismantleStation;
            this.VehiclesMass = vehiclesMass;
            this.VehiclesCount = vehiclesCount;
            this.CreatedByUser = createdByUser;
        }
        
        /// <summary>
        /// Prowadzący stację demontażu - Przyjęte odpady
        /// </summary>
        /// <value>Prowadzący stację demontażu - Przyjęte odpady</value>
        [DataMember(Name="dismantleReceivedVehicleId", EmitDefaultValue=false)]
        public Guid? DismantleReceivedVehicleId { get; set; }

        /// <summary>
        /// Data przyjęcia
        /// </summary>
        /// <value>Data przyjęcia</value>
        [DataMember(Name="receiveDate", EmitDefaultValue=false)]
        public DateTime? ReceiveDate { get; set; }

        /// <summary>
        /// Numer karty kpo
        /// </summary>
        /// <value>Numer karty kpo</value>
        [DataMember(Name="kpoCardNumber", EmitDefaultValue=false)]
        public string KpoCardNumber { get; set; }

        /// <summary>
        /// Na podstawie karty przekazania odpadów
        /// </summary>
        /// <value>Na podstawie karty przekazania odpadów</value>
        [DataMember(Name="receivedWithKpo", EmitDefaultValue=false)]
        public bool? ReceivedWithKpo { get; set; }

        /// <summary>
        /// Przywóz do RP
        /// </summary>
        /// <value>Przywóz do RP</value>
        [DataMember(Name="receivedFromAbroad", EmitDefaultValue=false)]
        public bool? ReceivedFromAbroad { get; set; }

        /// <summary>
        /// Posiadacz odpadów zwolniony z obowiązku prowadzenia ewidencji odpadów
        /// </summary>
        /// <value>Posiadacz odpadów zwolniony z obowiązku prowadzenia ewidencji odpadów</value>
        [DataMember(Name="ownerNotRegistered", EmitDefaultValue=false)]
        public bool? OwnerNotRegistered { get; set; }

        /// <summary>
        /// Przyjęte do stacji demontażu od punktu zbierania pojazdów
        /// </summary>
        /// <value>Przyjęte do stacji demontażu od punktu zbierania pojazdów</value>
        [DataMember(Name="receivedFromDismantleStation", EmitDefaultValue=false)]
        public bool? ReceivedFromDismantleStation { get; set; }

        /// <summary>
        /// Masa [Mg]
        /// </summary>
        /// <value>Masa [Mg]</value>
        [DataMember(Name="vehiclesMass", EmitDefaultValue=false)]
        public double? VehiclesMass { get; set; }

        /// <summary>
        /// Liczba [szt.]
        /// </summary>
        /// <value>Liczba [szt.]</value>
        [DataMember(Name="vehiclesCount", EmitDefaultValue=false)]
        public int? VehiclesCount { get; set; }

        /// <summary>
        /// Utworzone przez użytkownika
        /// </summary>
        /// <value>Utworzone przez użytkownika</value>
        [DataMember(Name="createdByUser", EmitDefaultValue=false)]
        public string CreatedByUser { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class WasteRegisterPublicApiApiModelsResponsesWasteRegisterWreckWasteRecordCardV1DismantleReceivedVehicleListItem {\n");
            sb.Append("  DismantleReceivedVehicleId: ").Append(DismantleReceivedVehicleId).Append("\n");
            sb.Append("  ReceiveDate: ").Append(ReceiveDate).Append("\n");
            sb.Append("  KpoCardNumber: ").Append(KpoCardNumber).Append("\n");
            sb.Append("  ReceivedWithKpo: ").Append(ReceivedWithKpo).Append("\n");
            sb.Append("  ReceivedFromAbroad: ").Append(ReceivedFromAbroad).Append("\n");
            sb.Append("  OwnerNotRegistered: ").Append(OwnerNotRegistered).Append("\n");
            sb.Append("  ReceivedFromDismantleStation: ").Append(ReceivedFromDismantleStation).Append("\n");
            sb.Append("  VehiclesMass: ").Append(VehiclesMass).Append("\n");
            sb.Append("  VehiclesCount: ").Append(VehiclesCount).Append("\n");
            sb.Append("  CreatedByUser: ").Append(CreatedByUser).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as WasteRegisterPublicApiApiModelsResponsesWasteRegisterWreckWasteRecordCardV1DismantleReceivedVehicleListItem);
        }

        /// <summary>
        /// Returns true if WasteRegisterPublicApiApiModelsResponsesWasteRegisterWreckWasteRecordCardV1DismantleReceivedVehicleListItem instances are equal
        /// </summary>
        /// <param name="input">Instance of WasteRegisterPublicApiApiModelsResponsesWasteRegisterWreckWasteRecordCardV1DismantleReceivedVehicleListItem to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(WasteRegisterPublicApiApiModelsResponsesWasteRegisterWreckWasteRecordCardV1DismantleReceivedVehicleListItem input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.DismantleReceivedVehicleId == input.DismantleReceivedVehicleId ||
                    (this.DismantleReceivedVehicleId != null &&
                    this.DismantleReceivedVehicleId.Equals(input.DismantleReceivedVehicleId))
                ) && 
                (
                    this.ReceiveDate == input.ReceiveDate ||
                    (this.ReceiveDate != null &&
                    this.ReceiveDate.Equals(input.ReceiveDate))
                ) && 
                (
                    this.KpoCardNumber == input.KpoCardNumber ||
                    (this.KpoCardNumber != null &&
                    this.KpoCardNumber.Equals(input.KpoCardNumber))
                ) && 
                (
                    this.ReceivedWithKpo == input.ReceivedWithKpo ||
                    (this.ReceivedWithKpo != null &&
                    this.ReceivedWithKpo.Equals(input.ReceivedWithKpo))
                ) && 
                (
                    this.ReceivedFromAbroad == input.ReceivedFromAbroad ||
                    (this.ReceivedFromAbroad != null &&
                    this.ReceivedFromAbroad.Equals(input.ReceivedFromAbroad))
                ) && 
                (
                    this.OwnerNotRegistered == input.OwnerNotRegistered ||
                    (this.OwnerNotRegistered != null &&
                    this.OwnerNotRegistered.Equals(input.OwnerNotRegistered))
                ) && 
                (
                    this.ReceivedFromDismantleStation == input.ReceivedFromDismantleStation ||
                    (this.ReceivedFromDismantleStation != null &&
                    this.ReceivedFromDismantleStation.Equals(input.ReceivedFromDismantleStation))
                ) && 
                (
                    this.VehiclesMass == input.VehiclesMass ||
                    (this.VehiclesMass != null &&
                    this.VehiclesMass.Equals(input.VehiclesMass))
                ) && 
                (
                    this.VehiclesCount == input.VehiclesCount ||
                    (this.VehiclesCount != null &&
                    this.VehiclesCount.Equals(input.VehiclesCount))
                ) && 
                (
                    this.CreatedByUser == input.CreatedByUser ||
                    (this.CreatedByUser != null &&
                    this.CreatedByUser.Equals(input.CreatedByUser))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.DismantleReceivedVehicleId != null)
                    hashCode = hashCode * 59 + this.DismantleReceivedVehicleId.GetHashCode();
                if (this.ReceiveDate != null)
                    hashCode = hashCode * 59 + this.ReceiveDate.GetHashCode();
                if (this.KpoCardNumber != null)
                    hashCode = hashCode * 59 + this.KpoCardNumber.GetHashCode();
                if (this.ReceivedWithKpo != null)
                    hashCode = hashCode * 59 + this.ReceivedWithKpo.GetHashCode();
                if (this.ReceivedFromAbroad != null)
                    hashCode = hashCode * 59 + this.ReceivedFromAbroad.GetHashCode();
                if (this.OwnerNotRegistered != null)
                    hashCode = hashCode * 59 + this.OwnerNotRegistered.GetHashCode();
                if (this.ReceivedFromDismantleStation != null)
                    hashCode = hashCode * 59 + this.ReceivedFromDismantleStation.GetHashCode();
                if (this.VehiclesMass != null)
                    hashCode = hashCode * 59 + this.VehiclesMass.GetHashCode();
                if (this.VehiclesCount != null)
                    hashCode = hashCode * 59 + this.VehiclesCount.GetHashCode();
                if (this.CreatedByUser != null)
                    hashCode = hashCode * 59 + this.CreatedByUser.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
