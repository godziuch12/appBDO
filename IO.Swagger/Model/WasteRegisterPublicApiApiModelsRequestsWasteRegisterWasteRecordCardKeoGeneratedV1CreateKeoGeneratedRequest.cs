/* 
 * v1 Waste Register public Api
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// WasteRegisterPublicApiApiModelsRequestsWasteRegisterWasteRecordCardKeoGeneratedV1CreateKeoGeneratedRequest
    /// </summary>
    [DataContract]
    public partial class WasteRegisterPublicApiApiModelsRequestsWasteRegisterWasteRecordCardKeoGeneratedV1CreateKeoGeneratedRequest :  IEquatable<WasteRegisterPublicApiApiModelsRequestsWasteRegisterWasteRecordCardKeoGeneratedV1CreateKeoGeneratedRequest>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="WasteRegisterPublicApiApiModelsRequestsWasteRegisterWasteRecordCardKeoGeneratedV1CreateKeoGeneratedRequest" /> class.
        /// </summary>
        /// <param name="keoId">Id karty ewidencji odpadów.</param>
        /// <param name="installationName">Nazwa instalacji.</param>
        /// <param name="wasteMassInstallation">Masa wytworzonych odpadów: w związku z eksploatacją instalacji [Mg].</param>
        /// <param name="wasteMassExcludingInstallation">Masa wytworzonych odpadów: poza instalacją.</param>
        /// <param name="wasteFromServices">wytwarzanie odpadów - w wyniku świadczenia usług (w rozumieniu art. 3 ust. 1 pkt 32 ustawy o odpadach) i/lub działalności w zakresie obiektów liniowych (w rozumieniu art. 3 pkt 3a ustawy - Prawo budowlane).</param>
        /// <param name="communeId">Id gminy.</param>
        /// <param name="manufactureDate">Data wytworzenia.</param>
        /// <param name="hazardousWasteReclassification">Zmiana statusu odpadów niebezpiecznych na odpady inne niż niebezpieczne.</param>
        public WasteRegisterPublicApiApiModelsRequestsWasteRegisterWasteRecordCardKeoGeneratedV1CreateKeoGeneratedRequest(Guid? keoId = default(Guid?), string installationName = default(string), double? wasteMassInstallation = default(double?), double? wasteMassExcludingInstallation = default(double?), bool? wasteFromServices = default(bool?), string communeId = default(string), DateTime? manufactureDate = default(DateTime?), bool? hazardousWasteReclassification = default(bool?))
        {
            this.KeoId = keoId;
            this.InstallationName = installationName;
            this.WasteMassInstallation = wasteMassInstallation;
            this.WasteMassExcludingInstallation = wasteMassExcludingInstallation;
            this.WasteFromServices = wasteFromServices;
            this.CommuneId = communeId;
            this.ManufactureDate = manufactureDate;
            this.HazardousWasteReclassification = hazardousWasteReclassification;
        }
        
        /// <summary>
        /// Id karty ewidencji odpadów
        /// </summary>
        /// <value>Id karty ewidencji odpadów</value>
        [DataMember(Name="keoId", EmitDefaultValue=false)]
        public Guid? KeoId { get; set; }

        /// <summary>
        /// Nazwa instalacji
        /// </summary>
        /// <value>Nazwa instalacji</value>
        [DataMember(Name="installationName", EmitDefaultValue=false)]
        public string InstallationName { get; set; }

        /// <summary>
        /// Masa wytworzonych odpadów: w związku z eksploatacją instalacji [Mg]
        /// </summary>
        /// <value>Masa wytworzonych odpadów: w związku z eksploatacją instalacji [Mg]</value>
        [DataMember(Name="wasteMassInstallation", EmitDefaultValue=false)]
        public double? WasteMassInstallation { get; set; }

        /// <summary>
        /// Masa wytworzonych odpadów: poza instalacją
        /// </summary>
        /// <value>Masa wytworzonych odpadów: poza instalacją</value>
        [DataMember(Name="wasteMassExcludingInstallation", EmitDefaultValue=false)]
        public double? WasteMassExcludingInstallation { get; set; }

        /// <summary>
        /// wytwarzanie odpadów - w wyniku świadczenia usług (w rozumieniu art. 3 ust. 1 pkt 32 ustawy o odpadach) i/lub działalności w zakresie obiektów liniowych (w rozumieniu art. 3 pkt 3a ustawy - Prawo budowlane)
        /// </summary>
        /// <value>wytwarzanie odpadów - w wyniku świadczenia usług (w rozumieniu art. 3 ust. 1 pkt 32 ustawy o odpadach) i/lub działalności w zakresie obiektów liniowych (w rozumieniu art. 3 pkt 3a ustawy - Prawo budowlane)</value>
        [DataMember(Name="wasteFromServices", EmitDefaultValue=false)]
        public bool? WasteFromServices { get; set; }

        /// <summary>
        /// Id gminy
        /// </summary>
        /// <value>Id gminy</value>
        [DataMember(Name="communeId", EmitDefaultValue=false)]
        public string CommuneId { get; set; }

        /// <summary>
        /// Data wytworzenia
        /// </summary>
        /// <value>Data wytworzenia</value>
        [DataMember(Name="manufactureDate", EmitDefaultValue=false)]
        public DateTime? ManufactureDate { get; set; }

        /// <summary>
        /// Zmiana statusu odpadów niebezpiecznych na odpady inne niż niebezpieczne
        /// </summary>
        /// <value>Zmiana statusu odpadów niebezpiecznych na odpady inne niż niebezpieczne</value>
        [DataMember(Name="hazardousWasteReclassification", EmitDefaultValue=false)]
        public bool? HazardousWasteReclassification { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class WasteRegisterPublicApiApiModelsRequestsWasteRegisterWasteRecordCardKeoGeneratedV1CreateKeoGeneratedRequest {\n");
            sb.Append("  KeoId: ").Append(KeoId).Append("\n");
            sb.Append("  InstallationName: ").Append(InstallationName).Append("\n");
            sb.Append("  WasteMassInstallation: ").Append(WasteMassInstallation).Append("\n");
            sb.Append("  WasteMassExcludingInstallation: ").Append(WasteMassExcludingInstallation).Append("\n");
            sb.Append("  WasteFromServices: ").Append(WasteFromServices).Append("\n");
            sb.Append("  CommuneId: ").Append(CommuneId).Append("\n");
            sb.Append("  ManufactureDate: ").Append(ManufactureDate).Append("\n");
            sb.Append("  HazardousWasteReclassification: ").Append(HazardousWasteReclassification).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as WasteRegisterPublicApiApiModelsRequestsWasteRegisterWasteRecordCardKeoGeneratedV1CreateKeoGeneratedRequest);
        }

        /// <summary>
        /// Returns true if WasteRegisterPublicApiApiModelsRequestsWasteRegisterWasteRecordCardKeoGeneratedV1CreateKeoGeneratedRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of WasteRegisterPublicApiApiModelsRequestsWasteRegisterWasteRecordCardKeoGeneratedV1CreateKeoGeneratedRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(WasteRegisterPublicApiApiModelsRequestsWasteRegisterWasteRecordCardKeoGeneratedV1CreateKeoGeneratedRequest input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.KeoId == input.KeoId ||
                    (this.KeoId != null &&
                    this.KeoId.Equals(input.KeoId))
                ) && 
                (
                    this.InstallationName == input.InstallationName ||
                    (this.InstallationName != null &&
                    this.InstallationName.Equals(input.InstallationName))
                ) && 
                (
                    this.WasteMassInstallation == input.WasteMassInstallation ||
                    (this.WasteMassInstallation != null &&
                    this.WasteMassInstallation.Equals(input.WasteMassInstallation))
                ) && 
                (
                    this.WasteMassExcludingInstallation == input.WasteMassExcludingInstallation ||
                    (this.WasteMassExcludingInstallation != null &&
                    this.WasteMassExcludingInstallation.Equals(input.WasteMassExcludingInstallation))
                ) && 
                (
                    this.WasteFromServices == input.WasteFromServices ||
                    (this.WasteFromServices != null &&
                    this.WasteFromServices.Equals(input.WasteFromServices))
                ) && 
                (
                    this.CommuneId == input.CommuneId ||
                    (this.CommuneId != null &&
                    this.CommuneId.Equals(input.CommuneId))
                ) && 
                (
                    this.ManufactureDate == input.ManufactureDate ||
                    (this.ManufactureDate != null &&
                    this.ManufactureDate.Equals(input.ManufactureDate))
                ) && 
                (
                    this.HazardousWasteReclassification == input.HazardousWasteReclassification ||
                    (this.HazardousWasteReclassification != null &&
                    this.HazardousWasteReclassification.Equals(input.HazardousWasteReclassification))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.KeoId != null)
                    hashCode = hashCode * 59 + this.KeoId.GetHashCode();
                if (this.InstallationName != null)
                    hashCode = hashCode * 59 + this.InstallationName.GetHashCode();
                if (this.WasteMassInstallation != null)
                    hashCode = hashCode * 59 + this.WasteMassInstallation.GetHashCode();
                if (this.WasteMassExcludingInstallation != null)
                    hashCode = hashCode * 59 + this.WasteMassExcludingInstallation.GetHashCode();
                if (this.WasteFromServices != null)
                    hashCode = hashCode * 59 + this.WasteFromServices.GetHashCode();
                if (this.CommuneId != null)
                    hashCode = hashCode * 59 + this.CommuneId.GetHashCode();
                if (this.ManufactureDate != null)
                    hashCode = hashCode * 59 + this.ManufactureDate.GetHashCode();
                if (this.HazardousWasteReclassification != null)
                    hashCode = hashCode * 59 + this.HazardousWasteReclassification.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
