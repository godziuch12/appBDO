/* 
 * v1 Waste Register public Api
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// WasteRegisterPublicApiApiModelsCollectionsOrder
    /// </summary>
    [DataContract]
    public partial class WasteRegisterPublicApiApiModelsCollectionsOrder :  IEquatable<WasteRegisterPublicApiApiModelsCollectionsOrder>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="WasteRegisterPublicApiApiModelsCollectionsOrder" /> class.
        /// </summary>
        /// <param name="isAscending">Flaga ustawiana na true, jeśli zbiór ma być posortowany rosnąco, false w przeciwnym razie.</param>
        /// <param name="orderColumn">Identyfikator kolumny, według której ma być zrelizowane sortowanie.</param>
        public WasteRegisterPublicApiApiModelsCollectionsOrder(bool? isAscending = default(bool?), string orderColumn = default(string))
        {
            this.IsAscending = isAscending;
            this.OrderColumn = orderColumn;
        }
        
        /// <summary>
        /// Flaga ustawiana na true, jeśli zbiór ma być posortowany rosnąco, false w przeciwnym razie
        /// </summary>
        /// <value>Flaga ustawiana na true, jeśli zbiór ma być posortowany rosnąco, false w przeciwnym razie</value>
        [DataMember(Name="isAscending", EmitDefaultValue=false)]
        public bool? IsAscending { get; set; }

        /// <summary>
        /// Identyfikator kolumny, według której ma być zrelizowane sortowanie
        /// </summary>
        /// <value>Identyfikator kolumny, według której ma być zrelizowane sortowanie</value>
        [DataMember(Name="orderColumn", EmitDefaultValue=false)]
        public string OrderColumn { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class WasteRegisterPublicApiApiModelsCollectionsOrder {\n");
            sb.Append("  IsAscending: ").Append(IsAscending).Append("\n");
            sb.Append("  OrderColumn: ").Append(OrderColumn).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as WasteRegisterPublicApiApiModelsCollectionsOrder);
        }

        /// <summary>
        /// Returns true if WasteRegisterPublicApiApiModelsCollectionsOrder instances are equal
        /// </summary>
        /// <param name="input">Instance of WasteRegisterPublicApiApiModelsCollectionsOrder to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(WasteRegisterPublicApiApiModelsCollectionsOrder input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.IsAscending == input.IsAscending ||
                    (this.IsAscending != null &&
                    this.IsAscending.Equals(input.IsAscending))
                ) && 
                (
                    this.OrderColumn == input.OrderColumn ||
                    (this.OrderColumn != null &&
                    this.OrderColumn.Equals(input.OrderColumn))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.IsAscending != null)
                    hashCode = hashCode * 59 + this.IsAscending.GetHashCode();
                if (this.OrderColumn != null)
                    hashCode = hashCode * 59 + this.OrderColumn.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
