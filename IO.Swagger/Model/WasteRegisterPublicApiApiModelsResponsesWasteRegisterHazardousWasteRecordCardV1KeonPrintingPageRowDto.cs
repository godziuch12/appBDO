/* 
 * v1 Waste Register public Api
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// WasteRegisterPublicApiApiModelsResponsesWasteRegisterHazardousWasteRecordCardV1KeonPrintingPageRowDto
    /// </summary>
    [DataContract]
    public partial class WasteRegisterPublicApiApiModelsResponsesWasteRegisterHazardousWasteRecordCardV1KeonPrintingPageRowDto :  IEquatable<WasteRegisterPublicApiApiModelsResponsesWasteRegisterHazardousWasteRecordCardV1KeonPrintingPageRowDto>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="WasteRegisterPublicApiApiModelsResponsesWasteRegisterHazardousWasteRecordCardV1KeonPrintingPageRowDto" /> class.
        /// </summary>
        /// <param name="no">no.</param>
        /// <param name="createdAt">Data utworzenia.</param>
        /// <param name="wasteMass">Masa odpadów.</param>
        /// <param name="wasteSenderCompanyName">wasteSenderCompanyName.</param>
        /// <param name="wasteSenderIdentificationNumber">wasteSenderIdentificationNumber.</param>
        /// <param name="wasteReceiverCompanyName">wasteReceiverCompanyName.</param>
        /// <param name="wasteReceiverIdentificationNumber">wasteReceiverIdentificationNumber.</param>
        /// <param name="receiveDate">Data przyjęcia.</param>
        /// <param name="documentNumber">Numer dokumentu.</param>
        /// <param name="createdByUser">Utworzone przez użytkownika.</param>
        public WasteRegisterPublicApiApiModelsResponsesWasteRegisterHazardousWasteRecordCardV1KeonPrintingPageRowDto(string no = default(string), string createdAt = default(string), string wasteMass = default(string), string wasteSenderCompanyName = default(string), string wasteSenderIdentificationNumber = default(string), string wasteReceiverCompanyName = default(string), string wasteReceiverIdentificationNumber = default(string), string receiveDate = default(string), string documentNumber = default(string), string createdByUser = default(string))
        {
            this.No = no;
            this.CreatedAt = createdAt;
            this.WasteMass = wasteMass;
            this.WasteSenderCompanyName = wasteSenderCompanyName;
            this.WasteSenderIdentificationNumber = wasteSenderIdentificationNumber;
            this.WasteReceiverCompanyName = wasteReceiverCompanyName;
            this.WasteReceiverIdentificationNumber = wasteReceiverIdentificationNumber;
            this.ReceiveDate = receiveDate;
            this.DocumentNumber = documentNumber;
            this.CreatedByUser = createdByUser;
        }
        
        /// <summary>
        /// Gets or Sets No
        /// </summary>
        [DataMember(Name="no", EmitDefaultValue=false)]
        public string No { get; set; }

        /// <summary>
        /// Data utworzenia
        /// </summary>
        /// <value>Data utworzenia</value>
        [DataMember(Name="createdAt", EmitDefaultValue=false)]
        public string CreatedAt { get; set; }

        /// <summary>
        /// Masa odpadów
        /// </summary>
        /// <value>Masa odpadów</value>
        [DataMember(Name="wasteMass", EmitDefaultValue=false)]
        public string WasteMass { get; set; }

        /// <summary>
        /// Gets or Sets WasteSenderCompanyName
        /// </summary>
        [DataMember(Name="wasteSenderCompanyName", EmitDefaultValue=false)]
        public string WasteSenderCompanyName { get; set; }

        /// <summary>
        /// Gets or Sets WasteSenderIdentificationNumber
        /// </summary>
        [DataMember(Name="wasteSenderIdentificationNumber", EmitDefaultValue=false)]
        public string WasteSenderIdentificationNumber { get; set; }

        /// <summary>
        /// Gets or Sets WasteReceiverCompanyName
        /// </summary>
        [DataMember(Name="wasteReceiverCompanyName", EmitDefaultValue=false)]
        public string WasteReceiverCompanyName { get; set; }

        /// <summary>
        /// Gets or Sets WasteReceiverIdentificationNumber
        /// </summary>
        [DataMember(Name="wasteReceiverIdentificationNumber", EmitDefaultValue=false)]
        public string WasteReceiverIdentificationNumber { get; set; }

        /// <summary>
        /// Data przyjęcia
        /// </summary>
        /// <value>Data przyjęcia</value>
        [DataMember(Name="receiveDate", EmitDefaultValue=false)]
        public string ReceiveDate { get; set; }

        /// <summary>
        /// Numer dokumentu
        /// </summary>
        /// <value>Numer dokumentu</value>
        [DataMember(Name="documentNumber", EmitDefaultValue=false)]
        public string DocumentNumber { get; set; }

        /// <summary>
        /// Utworzone przez użytkownika
        /// </summary>
        /// <value>Utworzone przez użytkownika</value>
        [DataMember(Name="createdByUser", EmitDefaultValue=false)]
        public string CreatedByUser { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class WasteRegisterPublicApiApiModelsResponsesWasteRegisterHazardousWasteRecordCardV1KeonPrintingPageRowDto {\n");
            sb.Append("  No: ").Append(No).Append("\n");
            sb.Append("  CreatedAt: ").Append(CreatedAt).Append("\n");
            sb.Append("  WasteMass: ").Append(WasteMass).Append("\n");
            sb.Append("  WasteSenderCompanyName: ").Append(WasteSenderCompanyName).Append("\n");
            sb.Append("  WasteSenderIdentificationNumber: ").Append(WasteSenderIdentificationNumber).Append("\n");
            sb.Append("  WasteReceiverCompanyName: ").Append(WasteReceiverCompanyName).Append("\n");
            sb.Append("  WasteReceiverIdentificationNumber: ").Append(WasteReceiverIdentificationNumber).Append("\n");
            sb.Append("  ReceiveDate: ").Append(ReceiveDate).Append("\n");
            sb.Append("  DocumentNumber: ").Append(DocumentNumber).Append("\n");
            sb.Append("  CreatedByUser: ").Append(CreatedByUser).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as WasteRegisterPublicApiApiModelsResponsesWasteRegisterHazardousWasteRecordCardV1KeonPrintingPageRowDto);
        }

        /// <summary>
        /// Returns true if WasteRegisterPublicApiApiModelsResponsesWasteRegisterHazardousWasteRecordCardV1KeonPrintingPageRowDto instances are equal
        /// </summary>
        /// <param name="input">Instance of WasteRegisterPublicApiApiModelsResponsesWasteRegisterHazardousWasteRecordCardV1KeonPrintingPageRowDto to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(WasteRegisterPublicApiApiModelsResponsesWasteRegisterHazardousWasteRecordCardV1KeonPrintingPageRowDto input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.No == input.No ||
                    (this.No != null &&
                    this.No.Equals(input.No))
                ) && 
                (
                    this.CreatedAt == input.CreatedAt ||
                    (this.CreatedAt != null &&
                    this.CreatedAt.Equals(input.CreatedAt))
                ) && 
                (
                    this.WasteMass == input.WasteMass ||
                    (this.WasteMass != null &&
                    this.WasteMass.Equals(input.WasteMass))
                ) && 
                (
                    this.WasteSenderCompanyName == input.WasteSenderCompanyName ||
                    (this.WasteSenderCompanyName != null &&
                    this.WasteSenderCompanyName.Equals(input.WasteSenderCompanyName))
                ) && 
                (
                    this.WasteSenderIdentificationNumber == input.WasteSenderIdentificationNumber ||
                    (this.WasteSenderIdentificationNumber != null &&
                    this.WasteSenderIdentificationNumber.Equals(input.WasteSenderIdentificationNumber))
                ) && 
                (
                    this.WasteReceiverCompanyName == input.WasteReceiverCompanyName ||
                    (this.WasteReceiverCompanyName != null &&
                    this.WasteReceiverCompanyName.Equals(input.WasteReceiverCompanyName))
                ) && 
                (
                    this.WasteReceiverIdentificationNumber == input.WasteReceiverIdentificationNumber ||
                    (this.WasteReceiverIdentificationNumber != null &&
                    this.WasteReceiverIdentificationNumber.Equals(input.WasteReceiverIdentificationNumber))
                ) && 
                (
                    this.ReceiveDate == input.ReceiveDate ||
                    (this.ReceiveDate != null &&
                    this.ReceiveDate.Equals(input.ReceiveDate))
                ) && 
                (
                    this.DocumentNumber == input.DocumentNumber ||
                    (this.DocumentNumber != null &&
                    this.DocumentNumber.Equals(input.DocumentNumber))
                ) && 
                (
                    this.CreatedByUser == input.CreatedByUser ||
                    (this.CreatedByUser != null &&
                    this.CreatedByUser.Equals(input.CreatedByUser))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.No != null)
                    hashCode = hashCode * 59 + this.No.GetHashCode();
                if (this.CreatedAt != null)
                    hashCode = hashCode * 59 + this.CreatedAt.GetHashCode();
                if (this.WasteMass != null)
                    hashCode = hashCode * 59 + this.WasteMass.GetHashCode();
                if (this.WasteSenderCompanyName != null)
                    hashCode = hashCode * 59 + this.WasteSenderCompanyName.GetHashCode();
                if (this.WasteSenderIdentificationNumber != null)
                    hashCode = hashCode * 59 + this.WasteSenderIdentificationNumber.GetHashCode();
                if (this.WasteReceiverCompanyName != null)
                    hashCode = hashCode * 59 + this.WasteReceiverCompanyName.GetHashCode();
                if (this.WasteReceiverIdentificationNumber != null)
                    hashCode = hashCode * 59 + this.WasteReceiverIdentificationNumber.GetHashCode();
                if (this.ReceiveDate != null)
                    hashCode = hashCode * 59 + this.ReceiveDate.GetHashCode();
                if (this.DocumentNumber != null)
                    hashCode = hashCode * 59 + this.DocumentNumber.GetHashCode();
                if (this.CreatedByUser != null)
                    hashCode = hashCode * 59 + this.CreatedByUser.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
