/* 
 * v1 Waste Register public Api
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// WasteRegisterPublicApiApiModelsResponsesWasteRegisterElectronicWasteRecordCardV1KezsEquipmentGroupCardDto
    /// </summary>
    [DataContract]
    public partial class WasteRegisterPublicApiApiModelsResponsesWasteRegisterElectronicWasteRecordCardV1KezsEquipmentGroupCardDto :  IEquatable<WasteRegisterPublicApiApiModelsResponsesWasteRegisterElectronicWasteRecordCardV1KezsEquipmentGroupCardDto>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="WasteRegisterPublicApiApiModelsResponsesWasteRegisterElectronicWasteRecordCardV1KezsEquipmentGroupCardDto" /> class.
        /// </summary>
        /// <param name="kezsEquipmentGroupCardId">Id grupy zebranego sprzętu.</param>
        /// <param name="kezsEquipmentGroupId">kezsEquipmentGroupId.</param>
        /// <param name="kezsId">Id karty ewidencji zużytego sprzętu elektrycznego i elektronicznego.</param>
        /// <param name="stockMass">Masa grupy zebranego sprzętu.</param>
        /// <param name="kezsEquipmentGroup">kezsEquipmentGroup.</param>
        /// <param name="kezsStockWasteMassGroup">kezsStockWasteMassGroup.</param>
        /// <param name="kezsEquipmentCollectingEntry">kezsEquipmentCollectingEntry.</param>
        /// <param name="kezsEquipmentManagement">kezsEquipmentManagement.</param>
        /// <param name="kezsWasteManagementHandedOver">kezsWasteManagementHandedOver.</param>
        /// <param name="kezsWasteManagementOnOnesOwn">kezsWasteManagementOnOnesOwn.</param>
        /// <param name="kezsUsedEquipmentWasteGeneration">kezsUsedEquipmentWasteGeneration.</param>
        public WasteRegisterPublicApiApiModelsResponsesWasteRegisterElectronicWasteRecordCardV1KezsEquipmentGroupCardDto(Guid? kezsEquipmentGroupCardId = default(Guid?), int? kezsEquipmentGroupId = default(int?), Guid? kezsId = default(Guid?), double? stockMass = default(double?), WasteRegisterPublicApiApiModelsResponsesWasteRegisterElectronicWasteRecordCardV1KezsEquipmentGroupDto kezsEquipmentGroup = default(WasteRegisterPublicApiApiModelsResponsesWasteRegisterElectronicWasteRecordCardV1KezsEquipmentGroupDto), List<WasteRegisterPublicApiApiModelsResponsesWasteRegisterElectronicWasteRecordCardV1KezsStockWasteMassGroupDto> kezsStockWasteMassGroup = default(List<WasteRegisterPublicApiApiModelsResponsesWasteRegisterElectronicWasteRecordCardV1KezsStockWasteMassGroupDto>), List<WasteRegisterPublicApiApiModelsResponsesWasteRegisterElectronicWasteRecordCardV1KezsEquipmentCollectingEntryDto> kezsEquipmentCollectingEntry = default(List<WasteRegisterPublicApiApiModelsResponsesWasteRegisterElectronicWasteRecordCardV1KezsEquipmentCollectingEntryDto>), List<WasteRegisterPublicApiApiModelsResponsesWasteRegisterElectronicWasteRecordCardV1KezsEquipmentManagementDto> kezsEquipmentManagement = default(List<WasteRegisterPublicApiApiModelsResponsesWasteRegisterElectronicWasteRecordCardV1KezsEquipmentManagementDto>), List<WasteRegisterPublicApiApiModelsResponsesWasteRegisterElectronicWasteRecordCardV1KezsWasteManagementHandedOverDto> kezsWasteManagementHandedOver = default(List<WasteRegisterPublicApiApiModelsResponsesWasteRegisterElectronicWasteRecordCardV1KezsWasteManagementHandedOverDto>), List<WasteRegisterPublicApiApiModelsResponsesWasteRegisterElectronicWasteRecordCardV1KezsWasteManagementOnOnesOwnDto> kezsWasteManagementOnOnesOwn = default(List<WasteRegisterPublicApiApiModelsResponsesWasteRegisterElectronicWasteRecordCardV1KezsWasteManagementOnOnesOwnDto>), List<WasteRegisterPublicApiApiModelsResponsesWasteRegisterElectronicWasteRecordCardV1KezsUsedEquipmentWasteGenerationDto> kezsUsedEquipmentWasteGeneration = default(List<WasteRegisterPublicApiApiModelsResponsesWasteRegisterElectronicWasteRecordCardV1KezsUsedEquipmentWasteGenerationDto>))
        {
            this.KezsEquipmentGroupCardId = kezsEquipmentGroupCardId;
            this.KezsEquipmentGroupId = kezsEquipmentGroupId;
            this.KezsId = kezsId;
            this.StockMass = stockMass;
            this.KezsEquipmentGroup = kezsEquipmentGroup;
            this.KezsStockWasteMassGroup = kezsStockWasteMassGroup;
            this.KezsEquipmentCollectingEntry = kezsEquipmentCollectingEntry;
            this.KezsEquipmentManagement = kezsEquipmentManagement;
            this.KezsWasteManagementHandedOver = kezsWasteManagementHandedOver;
            this.KezsWasteManagementOnOnesOwn = kezsWasteManagementOnOnesOwn;
            this.KezsUsedEquipmentWasteGeneration = kezsUsedEquipmentWasteGeneration;
        }
        
        /// <summary>
        /// Id grupy zebranego sprzętu
        /// </summary>
        /// <value>Id grupy zebranego sprzętu</value>
        [DataMember(Name="kezsEquipmentGroupCardId", EmitDefaultValue=false)]
        public Guid? KezsEquipmentGroupCardId { get; set; }

        /// <summary>
        /// Gets or Sets KezsEquipmentGroupId
        /// </summary>
        [DataMember(Name="kezsEquipmentGroupId", EmitDefaultValue=false)]
        public int? KezsEquipmentGroupId { get; set; }

        /// <summary>
        /// Id karty ewidencji zużytego sprzętu elektrycznego i elektronicznego
        /// </summary>
        /// <value>Id karty ewidencji zużytego sprzętu elektrycznego i elektronicznego</value>
        [DataMember(Name="kezsId", EmitDefaultValue=false)]
        public Guid? KezsId { get; set; }

        /// <summary>
        /// Masa grupy zebranego sprzętu
        /// </summary>
        /// <value>Masa grupy zebranego sprzętu</value>
        [DataMember(Name="stockMass", EmitDefaultValue=false)]
        public double? StockMass { get; set; }

        /// <summary>
        /// Gets or Sets KezsEquipmentGroup
        /// </summary>
        [DataMember(Name="kezsEquipmentGroup", EmitDefaultValue=false)]
        public WasteRegisterPublicApiApiModelsResponsesWasteRegisterElectronicWasteRecordCardV1KezsEquipmentGroupDto KezsEquipmentGroup { get; set; }

        /// <summary>
        /// Gets or Sets KezsStockWasteMassGroup
        /// </summary>
        [DataMember(Name="kezsStockWasteMassGroup", EmitDefaultValue=false)]
        public List<WasteRegisterPublicApiApiModelsResponsesWasteRegisterElectronicWasteRecordCardV1KezsStockWasteMassGroupDto> KezsStockWasteMassGroup { get; set; }

        /// <summary>
        /// Gets or Sets KezsEquipmentCollectingEntry
        /// </summary>
        [DataMember(Name="kezsEquipmentCollectingEntry", EmitDefaultValue=false)]
        public List<WasteRegisterPublicApiApiModelsResponsesWasteRegisterElectronicWasteRecordCardV1KezsEquipmentCollectingEntryDto> KezsEquipmentCollectingEntry { get; set; }

        /// <summary>
        /// Gets or Sets KezsEquipmentManagement
        /// </summary>
        [DataMember(Name="kezsEquipmentManagement", EmitDefaultValue=false)]
        public List<WasteRegisterPublicApiApiModelsResponsesWasteRegisterElectronicWasteRecordCardV1KezsEquipmentManagementDto> KezsEquipmentManagement { get; set; }

        /// <summary>
        /// Gets or Sets KezsWasteManagementHandedOver
        /// </summary>
        [DataMember(Name="kezsWasteManagementHandedOver", EmitDefaultValue=false)]
        public List<WasteRegisterPublicApiApiModelsResponsesWasteRegisterElectronicWasteRecordCardV1KezsWasteManagementHandedOverDto> KezsWasteManagementHandedOver { get; set; }

        /// <summary>
        /// Gets or Sets KezsWasteManagementOnOnesOwn
        /// </summary>
        [DataMember(Name="kezsWasteManagementOnOnesOwn", EmitDefaultValue=false)]
        public List<WasteRegisterPublicApiApiModelsResponsesWasteRegisterElectronicWasteRecordCardV1KezsWasteManagementOnOnesOwnDto> KezsWasteManagementOnOnesOwn { get; set; }

        /// <summary>
        /// Gets or Sets KezsUsedEquipmentWasteGeneration
        /// </summary>
        [DataMember(Name="kezsUsedEquipmentWasteGeneration", EmitDefaultValue=false)]
        public List<WasteRegisterPublicApiApiModelsResponsesWasteRegisterElectronicWasteRecordCardV1KezsUsedEquipmentWasteGenerationDto> KezsUsedEquipmentWasteGeneration { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class WasteRegisterPublicApiApiModelsResponsesWasteRegisterElectronicWasteRecordCardV1KezsEquipmentGroupCardDto {\n");
            sb.Append("  KezsEquipmentGroupCardId: ").Append(KezsEquipmentGroupCardId).Append("\n");
            sb.Append("  KezsEquipmentGroupId: ").Append(KezsEquipmentGroupId).Append("\n");
            sb.Append("  KezsId: ").Append(KezsId).Append("\n");
            sb.Append("  StockMass: ").Append(StockMass).Append("\n");
            sb.Append("  KezsEquipmentGroup: ").Append(KezsEquipmentGroup).Append("\n");
            sb.Append("  KezsStockWasteMassGroup: ").Append(KezsStockWasteMassGroup).Append("\n");
            sb.Append("  KezsEquipmentCollectingEntry: ").Append(KezsEquipmentCollectingEntry).Append("\n");
            sb.Append("  KezsEquipmentManagement: ").Append(KezsEquipmentManagement).Append("\n");
            sb.Append("  KezsWasteManagementHandedOver: ").Append(KezsWasteManagementHandedOver).Append("\n");
            sb.Append("  KezsWasteManagementOnOnesOwn: ").Append(KezsWasteManagementOnOnesOwn).Append("\n");
            sb.Append("  KezsUsedEquipmentWasteGeneration: ").Append(KezsUsedEquipmentWasteGeneration).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as WasteRegisterPublicApiApiModelsResponsesWasteRegisterElectronicWasteRecordCardV1KezsEquipmentGroupCardDto);
        }

        /// <summary>
        /// Returns true if WasteRegisterPublicApiApiModelsResponsesWasteRegisterElectronicWasteRecordCardV1KezsEquipmentGroupCardDto instances are equal
        /// </summary>
        /// <param name="input">Instance of WasteRegisterPublicApiApiModelsResponsesWasteRegisterElectronicWasteRecordCardV1KezsEquipmentGroupCardDto to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(WasteRegisterPublicApiApiModelsResponsesWasteRegisterElectronicWasteRecordCardV1KezsEquipmentGroupCardDto input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.KezsEquipmentGroupCardId == input.KezsEquipmentGroupCardId ||
                    (this.KezsEquipmentGroupCardId != null &&
                    this.KezsEquipmentGroupCardId.Equals(input.KezsEquipmentGroupCardId))
                ) && 
                (
                    this.KezsEquipmentGroupId == input.KezsEquipmentGroupId ||
                    (this.KezsEquipmentGroupId != null &&
                    this.KezsEquipmentGroupId.Equals(input.KezsEquipmentGroupId))
                ) && 
                (
                    this.KezsId == input.KezsId ||
                    (this.KezsId != null &&
                    this.KezsId.Equals(input.KezsId))
                ) && 
                (
                    this.StockMass == input.StockMass ||
                    (this.StockMass != null &&
                    this.StockMass.Equals(input.StockMass))
                ) && 
                (
                    this.KezsEquipmentGroup == input.KezsEquipmentGroup ||
                    (this.KezsEquipmentGroup != null &&
                    this.KezsEquipmentGroup.Equals(input.KezsEquipmentGroup))
                ) && 
                (
                    this.KezsStockWasteMassGroup == input.KezsStockWasteMassGroup ||
                    this.KezsStockWasteMassGroup != null &&
                    this.KezsStockWasteMassGroup.SequenceEqual(input.KezsStockWasteMassGroup)
                ) && 
                (
                    this.KezsEquipmentCollectingEntry == input.KezsEquipmentCollectingEntry ||
                    this.KezsEquipmentCollectingEntry != null &&
                    this.KezsEquipmentCollectingEntry.SequenceEqual(input.KezsEquipmentCollectingEntry)
                ) && 
                (
                    this.KezsEquipmentManagement == input.KezsEquipmentManagement ||
                    this.KezsEquipmentManagement != null &&
                    this.KezsEquipmentManagement.SequenceEqual(input.KezsEquipmentManagement)
                ) && 
                (
                    this.KezsWasteManagementHandedOver == input.KezsWasteManagementHandedOver ||
                    this.KezsWasteManagementHandedOver != null &&
                    this.KezsWasteManagementHandedOver.SequenceEqual(input.KezsWasteManagementHandedOver)
                ) && 
                (
                    this.KezsWasteManagementOnOnesOwn == input.KezsWasteManagementOnOnesOwn ||
                    this.KezsWasteManagementOnOnesOwn != null &&
                    this.KezsWasteManagementOnOnesOwn.SequenceEqual(input.KezsWasteManagementOnOnesOwn)
                ) && 
                (
                    this.KezsUsedEquipmentWasteGeneration == input.KezsUsedEquipmentWasteGeneration ||
                    this.KezsUsedEquipmentWasteGeneration != null &&
                    this.KezsUsedEquipmentWasteGeneration.SequenceEqual(input.KezsUsedEquipmentWasteGeneration)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.KezsEquipmentGroupCardId != null)
                    hashCode = hashCode * 59 + this.KezsEquipmentGroupCardId.GetHashCode();
                if (this.KezsEquipmentGroupId != null)
                    hashCode = hashCode * 59 + this.KezsEquipmentGroupId.GetHashCode();
                if (this.KezsId != null)
                    hashCode = hashCode * 59 + this.KezsId.GetHashCode();
                if (this.StockMass != null)
                    hashCode = hashCode * 59 + this.StockMass.GetHashCode();
                if (this.KezsEquipmentGroup != null)
                    hashCode = hashCode * 59 + this.KezsEquipmentGroup.GetHashCode();
                if (this.KezsStockWasteMassGroup != null)
                    hashCode = hashCode * 59 + this.KezsStockWasteMassGroup.GetHashCode();
                if (this.KezsEquipmentCollectingEntry != null)
                    hashCode = hashCode * 59 + this.KezsEquipmentCollectingEntry.GetHashCode();
                if (this.KezsEquipmentManagement != null)
                    hashCode = hashCode * 59 + this.KezsEquipmentManagement.GetHashCode();
                if (this.KezsWasteManagementHandedOver != null)
                    hashCode = hashCode * 59 + this.KezsWasteManagementHandedOver.GetHashCode();
                if (this.KezsWasteManagementOnOnesOwn != null)
                    hashCode = hashCode * 59 + this.KezsWasteManagementOnOnesOwn.GetHashCode();
                if (this.KezsUsedEquipmentWasteGeneration != null)
                    hashCode = hashCode * 59 + this.KezsUsedEquipmentWasteGeneration.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
