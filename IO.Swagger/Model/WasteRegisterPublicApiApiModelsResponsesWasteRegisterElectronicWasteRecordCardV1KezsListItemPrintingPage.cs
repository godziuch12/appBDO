/* 
 * v1 Waste Register public Api
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// WasteRegisterPublicApiApiModelsResponsesWasteRegisterElectronicWasteRecordCardV1KezsListItemPrintingPage
    /// </summary>
    [DataContract]
    public partial class WasteRegisterPublicApiApiModelsResponsesWasteRegisterElectronicWasteRecordCardV1KezsListItemPrintingPage :  IEquatable<WasteRegisterPublicApiApiModelsResponsesWasteRegisterElectronicWasteRecordCardV1KezsListItemPrintingPage>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="WasteRegisterPublicApiApiModelsResponsesWasteRegisterElectronicWasteRecordCardV1KezsListItemPrintingPage" /> class.
        /// </summary>
        /// <param name="date">Data.</param>
        /// <param name="fullName">fullName.</param>
        /// <param name="collectedFromUserCardNumber">collectedFromUserCardNumber.</param>
        /// <param name="collectedFromUserMass">collectedFromUserMass.</param>
        /// <param name="collectedFromOtherUserCardNumber">collectedFromOtherUserCardNumber.</param>
        /// <param name="collectedFromOtherUserMass">collectedFromOtherUserMass.</param>
        /// <param name="managementCardNumber">managementCardNumber.</param>
        /// <param name="managementHandedOverMass">managementHandedOverMass.</param>
        /// <param name="managementUsedEquipmentMass">managementUsedEquipmentMass.</param>
        /// <param name="managementRecycledEquipmentMass">managementRecycledEquipmentMass.</param>
        /// <param name="recycledPartsEquipmentMass">Masa zużytego sprzętu przeznaczonego do ponownego użycia.</param>
        /// <param name="usedEquipmentMass">Masa przetwarzanego sprzętu.</param>
        /// <param name="usedEquipmentCodeAndKindOfWaste">usedEquipmentCodeAndKindOfWaste.</param>
        /// <param name="onOnesOwnRecycledWasteMass">onOnesOwnRecycledWasteMass.</param>
        /// <param name="onOnesOwnRD">onOnesOwnRD.</param>
        /// <param name="onOnesOwnIsRecycling">onOnesOwnIsRecycling.</param>
        /// <param name="handedOverMass">handedOverMass.</param>
        /// <param name="handedOverCardNumberOrCodeAndKindOfWaste">handedOverCardNumberOrCodeAndKindOfWaste.</param>
        /// <param name="wasteCodeExtended">Kod ex.</param>
        /// <param name="wasteCodeExtendedDescription">Rodzaj odpadu ex.</param>
        /// <param name="hazardousWasteReclassification">Zmiana statusu odpadów niebezpiecznych na odpady inne niż niebezpieczne.</param>
        /// <param name="hazardousWasteReclassificationDescription">Rodzaj odpadu.</param>
        public WasteRegisterPublicApiApiModelsResponsesWasteRegisterElectronicWasteRecordCardV1KezsListItemPrintingPage(DateTime? date = default(DateTime?), string fullName = default(string), string collectedFromUserCardNumber = default(string), double? collectedFromUserMass = default(double?), string collectedFromOtherUserCardNumber = default(string), double? collectedFromOtherUserMass = default(double?), string managementCardNumber = default(string), double? managementHandedOverMass = default(double?), double? managementUsedEquipmentMass = default(double?), double? managementRecycledEquipmentMass = default(double?), double? recycledPartsEquipmentMass = default(double?), double? usedEquipmentMass = default(double?), string usedEquipmentCodeAndKindOfWaste = default(string), double? onOnesOwnRecycledWasteMass = default(double?), string onOnesOwnRD = default(string), bool? onOnesOwnIsRecycling = default(bool?), double? handedOverMass = default(double?), string handedOverCardNumberOrCodeAndKindOfWaste = default(string), bool? wasteCodeExtended = default(bool?), string wasteCodeExtendedDescription = default(string), bool? hazardousWasteReclassification = default(bool?), string hazardousWasteReclassificationDescription = default(string))
        {
            this.Date = date;
            this.FullName = fullName;
            this.CollectedFromUserCardNumber = collectedFromUserCardNumber;
            this.CollectedFromUserMass = collectedFromUserMass;
            this.CollectedFromOtherUserCardNumber = collectedFromOtherUserCardNumber;
            this.CollectedFromOtherUserMass = collectedFromOtherUserMass;
            this.ManagementCardNumber = managementCardNumber;
            this.ManagementHandedOverMass = managementHandedOverMass;
            this.ManagementUsedEquipmentMass = managementUsedEquipmentMass;
            this.ManagementRecycledEquipmentMass = managementRecycledEquipmentMass;
            this.RecycledPartsEquipmentMass = recycledPartsEquipmentMass;
            this.UsedEquipmentMass = usedEquipmentMass;
            this.UsedEquipmentCodeAndKindOfWaste = usedEquipmentCodeAndKindOfWaste;
            this.OnOnesOwnRecycledWasteMass = onOnesOwnRecycledWasteMass;
            this.OnOnesOwnRD = onOnesOwnRD;
            this.OnOnesOwnIsRecycling = onOnesOwnIsRecycling;
            this.HandedOverMass = handedOverMass;
            this.HandedOverCardNumberOrCodeAndKindOfWaste = handedOverCardNumberOrCodeAndKindOfWaste;
            this.WasteCodeExtended = wasteCodeExtended;
            this.WasteCodeExtendedDescription = wasteCodeExtendedDescription;
            this.HazardousWasteReclassification = hazardousWasteReclassification;
            this.HazardousWasteReclassificationDescription = hazardousWasteReclassificationDescription;
        }
        
        /// <summary>
        /// Data
        /// </summary>
        /// <value>Data</value>
        [DataMember(Name="date", EmitDefaultValue=false)]
        public DateTime? Date { get; set; }

        /// <summary>
        /// Gets or Sets FullName
        /// </summary>
        [DataMember(Name="fullName", EmitDefaultValue=false)]
        public string FullName { get; set; }

        /// <summary>
        /// Gets or Sets CollectedFromUserCardNumber
        /// </summary>
        [DataMember(Name="collectedFromUserCardNumber", EmitDefaultValue=false)]
        public string CollectedFromUserCardNumber { get; set; }

        /// <summary>
        /// Gets or Sets CollectedFromUserMass
        /// </summary>
        [DataMember(Name="collectedFromUserMass", EmitDefaultValue=false)]
        public double? CollectedFromUserMass { get; set; }

        /// <summary>
        /// Gets or Sets CollectedFromOtherUserCardNumber
        /// </summary>
        [DataMember(Name="collectedFromOtherUserCardNumber", EmitDefaultValue=false)]
        public string CollectedFromOtherUserCardNumber { get; set; }

        /// <summary>
        /// Gets or Sets CollectedFromOtherUserMass
        /// </summary>
        [DataMember(Name="collectedFromOtherUserMass", EmitDefaultValue=false)]
        public double? CollectedFromOtherUserMass { get; set; }

        /// <summary>
        /// Gets or Sets ManagementCardNumber
        /// </summary>
        [DataMember(Name="managementCardNumber", EmitDefaultValue=false)]
        public string ManagementCardNumber { get; set; }

        /// <summary>
        /// Gets or Sets ManagementHandedOverMass
        /// </summary>
        [DataMember(Name="managementHandedOverMass", EmitDefaultValue=false)]
        public double? ManagementHandedOverMass { get; set; }

        /// <summary>
        /// Gets or Sets ManagementUsedEquipmentMass
        /// </summary>
        [DataMember(Name="managementUsedEquipmentMass", EmitDefaultValue=false)]
        public double? ManagementUsedEquipmentMass { get; set; }

        /// <summary>
        /// Gets or Sets ManagementRecycledEquipmentMass
        /// </summary>
        [DataMember(Name="managementRecycledEquipmentMass", EmitDefaultValue=false)]
        public double? ManagementRecycledEquipmentMass { get; set; }

        /// <summary>
        /// Masa zużytego sprzętu przeznaczonego do ponownego użycia
        /// </summary>
        /// <value>Masa zużytego sprzętu przeznaczonego do ponownego użycia</value>
        [DataMember(Name="recycledPartsEquipmentMass", EmitDefaultValue=false)]
        public double? RecycledPartsEquipmentMass { get; set; }

        /// <summary>
        /// Masa przetwarzanego sprzętu
        /// </summary>
        /// <value>Masa przetwarzanego sprzętu</value>
        [DataMember(Name="usedEquipmentMass", EmitDefaultValue=false)]
        public double? UsedEquipmentMass { get; set; }

        /// <summary>
        /// Gets or Sets UsedEquipmentCodeAndKindOfWaste
        /// </summary>
        [DataMember(Name="usedEquipmentCodeAndKindOfWaste", EmitDefaultValue=false)]
        public string UsedEquipmentCodeAndKindOfWaste { get; set; }

        /// <summary>
        /// Gets or Sets OnOnesOwnRecycledWasteMass
        /// </summary>
        [DataMember(Name="onOnesOwnRecycledWasteMass", EmitDefaultValue=false)]
        public double? OnOnesOwnRecycledWasteMass { get; set; }

        /// <summary>
        /// Gets or Sets OnOnesOwnRD
        /// </summary>
        [DataMember(Name="onOnesOwnRD", EmitDefaultValue=false)]
        public string OnOnesOwnRD { get; set; }

        /// <summary>
        /// Gets or Sets OnOnesOwnIsRecycling
        /// </summary>
        [DataMember(Name="onOnesOwnIsRecycling", EmitDefaultValue=false)]
        public bool? OnOnesOwnIsRecycling { get; set; }

        /// <summary>
        /// Gets or Sets HandedOverMass
        /// </summary>
        [DataMember(Name="handedOverMass", EmitDefaultValue=false)]
        public double? HandedOverMass { get; set; }

        /// <summary>
        /// Gets or Sets HandedOverCardNumberOrCodeAndKindOfWaste
        /// </summary>
        [DataMember(Name="handedOverCardNumberOrCodeAndKindOfWaste", EmitDefaultValue=false)]
        public string HandedOverCardNumberOrCodeAndKindOfWaste { get; set; }

        /// <summary>
        /// Kod ex
        /// </summary>
        /// <value>Kod ex</value>
        [DataMember(Name="wasteCodeExtended", EmitDefaultValue=false)]
        public bool? WasteCodeExtended { get; set; }

        /// <summary>
        /// Rodzaj odpadu ex
        /// </summary>
        /// <value>Rodzaj odpadu ex</value>
        [DataMember(Name="wasteCodeExtendedDescription", EmitDefaultValue=false)]
        public string WasteCodeExtendedDescription { get; set; }

        /// <summary>
        /// Zmiana statusu odpadów niebezpiecznych na odpady inne niż niebezpieczne
        /// </summary>
        /// <value>Zmiana statusu odpadów niebezpiecznych na odpady inne niż niebezpieczne</value>
        [DataMember(Name="hazardousWasteReclassification", EmitDefaultValue=false)]
        public bool? HazardousWasteReclassification { get; set; }

        /// <summary>
        /// Rodzaj odpadu
        /// </summary>
        /// <value>Rodzaj odpadu</value>
        [DataMember(Name="hazardousWasteReclassificationDescription", EmitDefaultValue=false)]
        public string HazardousWasteReclassificationDescription { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class WasteRegisterPublicApiApiModelsResponsesWasteRegisterElectronicWasteRecordCardV1KezsListItemPrintingPage {\n");
            sb.Append("  Date: ").Append(Date).Append("\n");
            sb.Append("  FullName: ").Append(FullName).Append("\n");
            sb.Append("  CollectedFromUserCardNumber: ").Append(CollectedFromUserCardNumber).Append("\n");
            sb.Append("  CollectedFromUserMass: ").Append(CollectedFromUserMass).Append("\n");
            sb.Append("  CollectedFromOtherUserCardNumber: ").Append(CollectedFromOtherUserCardNumber).Append("\n");
            sb.Append("  CollectedFromOtherUserMass: ").Append(CollectedFromOtherUserMass).Append("\n");
            sb.Append("  ManagementCardNumber: ").Append(ManagementCardNumber).Append("\n");
            sb.Append("  ManagementHandedOverMass: ").Append(ManagementHandedOverMass).Append("\n");
            sb.Append("  ManagementUsedEquipmentMass: ").Append(ManagementUsedEquipmentMass).Append("\n");
            sb.Append("  ManagementRecycledEquipmentMass: ").Append(ManagementRecycledEquipmentMass).Append("\n");
            sb.Append("  RecycledPartsEquipmentMass: ").Append(RecycledPartsEquipmentMass).Append("\n");
            sb.Append("  UsedEquipmentMass: ").Append(UsedEquipmentMass).Append("\n");
            sb.Append("  UsedEquipmentCodeAndKindOfWaste: ").Append(UsedEquipmentCodeAndKindOfWaste).Append("\n");
            sb.Append("  OnOnesOwnRecycledWasteMass: ").Append(OnOnesOwnRecycledWasteMass).Append("\n");
            sb.Append("  OnOnesOwnRD: ").Append(OnOnesOwnRD).Append("\n");
            sb.Append("  OnOnesOwnIsRecycling: ").Append(OnOnesOwnIsRecycling).Append("\n");
            sb.Append("  HandedOverMass: ").Append(HandedOverMass).Append("\n");
            sb.Append("  HandedOverCardNumberOrCodeAndKindOfWaste: ").Append(HandedOverCardNumberOrCodeAndKindOfWaste).Append("\n");
            sb.Append("  WasteCodeExtended: ").Append(WasteCodeExtended).Append("\n");
            sb.Append("  WasteCodeExtendedDescription: ").Append(WasteCodeExtendedDescription).Append("\n");
            sb.Append("  HazardousWasteReclassification: ").Append(HazardousWasteReclassification).Append("\n");
            sb.Append("  HazardousWasteReclassificationDescription: ").Append(HazardousWasteReclassificationDescription).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as WasteRegisterPublicApiApiModelsResponsesWasteRegisterElectronicWasteRecordCardV1KezsListItemPrintingPage);
        }

        /// <summary>
        /// Returns true if WasteRegisterPublicApiApiModelsResponsesWasteRegisterElectronicWasteRecordCardV1KezsListItemPrintingPage instances are equal
        /// </summary>
        /// <param name="input">Instance of WasteRegisterPublicApiApiModelsResponsesWasteRegisterElectronicWasteRecordCardV1KezsListItemPrintingPage to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(WasteRegisterPublicApiApiModelsResponsesWasteRegisterElectronicWasteRecordCardV1KezsListItemPrintingPage input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Date == input.Date ||
                    (this.Date != null &&
                    this.Date.Equals(input.Date))
                ) && 
                (
                    this.FullName == input.FullName ||
                    (this.FullName != null &&
                    this.FullName.Equals(input.FullName))
                ) && 
                (
                    this.CollectedFromUserCardNumber == input.CollectedFromUserCardNumber ||
                    (this.CollectedFromUserCardNumber != null &&
                    this.CollectedFromUserCardNumber.Equals(input.CollectedFromUserCardNumber))
                ) && 
                (
                    this.CollectedFromUserMass == input.CollectedFromUserMass ||
                    (this.CollectedFromUserMass != null &&
                    this.CollectedFromUserMass.Equals(input.CollectedFromUserMass))
                ) && 
                (
                    this.CollectedFromOtherUserCardNumber == input.CollectedFromOtherUserCardNumber ||
                    (this.CollectedFromOtherUserCardNumber != null &&
                    this.CollectedFromOtherUserCardNumber.Equals(input.CollectedFromOtherUserCardNumber))
                ) && 
                (
                    this.CollectedFromOtherUserMass == input.CollectedFromOtherUserMass ||
                    (this.CollectedFromOtherUserMass != null &&
                    this.CollectedFromOtherUserMass.Equals(input.CollectedFromOtherUserMass))
                ) && 
                (
                    this.ManagementCardNumber == input.ManagementCardNumber ||
                    (this.ManagementCardNumber != null &&
                    this.ManagementCardNumber.Equals(input.ManagementCardNumber))
                ) && 
                (
                    this.ManagementHandedOverMass == input.ManagementHandedOverMass ||
                    (this.ManagementHandedOverMass != null &&
                    this.ManagementHandedOverMass.Equals(input.ManagementHandedOverMass))
                ) && 
                (
                    this.ManagementUsedEquipmentMass == input.ManagementUsedEquipmentMass ||
                    (this.ManagementUsedEquipmentMass != null &&
                    this.ManagementUsedEquipmentMass.Equals(input.ManagementUsedEquipmentMass))
                ) && 
                (
                    this.ManagementRecycledEquipmentMass == input.ManagementRecycledEquipmentMass ||
                    (this.ManagementRecycledEquipmentMass != null &&
                    this.ManagementRecycledEquipmentMass.Equals(input.ManagementRecycledEquipmentMass))
                ) && 
                (
                    this.RecycledPartsEquipmentMass == input.RecycledPartsEquipmentMass ||
                    (this.RecycledPartsEquipmentMass != null &&
                    this.RecycledPartsEquipmentMass.Equals(input.RecycledPartsEquipmentMass))
                ) && 
                (
                    this.UsedEquipmentMass == input.UsedEquipmentMass ||
                    (this.UsedEquipmentMass != null &&
                    this.UsedEquipmentMass.Equals(input.UsedEquipmentMass))
                ) && 
                (
                    this.UsedEquipmentCodeAndKindOfWaste == input.UsedEquipmentCodeAndKindOfWaste ||
                    (this.UsedEquipmentCodeAndKindOfWaste != null &&
                    this.UsedEquipmentCodeAndKindOfWaste.Equals(input.UsedEquipmentCodeAndKindOfWaste))
                ) && 
                (
                    this.OnOnesOwnRecycledWasteMass == input.OnOnesOwnRecycledWasteMass ||
                    (this.OnOnesOwnRecycledWasteMass != null &&
                    this.OnOnesOwnRecycledWasteMass.Equals(input.OnOnesOwnRecycledWasteMass))
                ) && 
                (
                    this.OnOnesOwnRD == input.OnOnesOwnRD ||
                    (this.OnOnesOwnRD != null &&
                    this.OnOnesOwnRD.Equals(input.OnOnesOwnRD))
                ) && 
                (
                    this.OnOnesOwnIsRecycling == input.OnOnesOwnIsRecycling ||
                    (this.OnOnesOwnIsRecycling != null &&
                    this.OnOnesOwnIsRecycling.Equals(input.OnOnesOwnIsRecycling))
                ) && 
                (
                    this.HandedOverMass == input.HandedOverMass ||
                    (this.HandedOverMass != null &&
                    this.HandedOverMass.Equals(input.HandedOverMass))
                ) && 
                (
                    this.HandedOverCardNumberOrCodeAndKindOfWaste == input.HandedOverCardNumberOrCodeAndKindOfWaste ||
                    (this.HandedOverCardNumberOrCodeAndKindOfWaste != null &&
                    this.HandedOverCardNumberOrCodeAndKindOfWaste.Equals(input.HandedOverCardNumberOrCodeAndKindOfWaste))
                ) && 
                (
                    this.WasteCodeExtended == input.WasteCodeExtended ||
                    (this.WasteCodeExtended != null &&
                    this.WasteCodeExtended.Equals(input.WasteCodeExtended))
                ) && 
                (
                    this.WasteCodeExtendedDescription == input.WasteCodeExtendedDescription ||
                    (this.WasteCodeExtendedDescription != null &&
                    this.WasteCodeExtendedDescription.Equals(input.WasteCodeExtendedDescription))
                ) && 
                (
                    this.HazardousWasteReclassification == input.HazardousWasteReclassification ||
                    (this.HazardousWasteReclassification != null &&
                    this.HazardousWasteReclassification.Equals(input.HazardousWasteReclassification))
                ) && 
                (
                    this.HazardousWasteReclassificationDescription == input.HazardousWasteReclassificationDescription ||
                    (this.HazardousWasteReclassificationDescription != null &&
                    this.HazardousWasteReclassificationDescription.Equals(input.HazardousWasteReclassificationDescription))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Date != null)
                    hashCode = hashCode * 59 + this.Date.GetHashCode();
                if (this.FullName != null)
                    hashCode = hashCode * 59 + this.FullName.GetHashCode();
                if (this.CollectedFromUserCardNumber != null)
                    hashCode = hashCode * 59 + this.CollectedFromUserCardNumber.GetHashCode();
                if (this.CollectedFromUserMass != null)
                    hashCode = hashCode * 59 + this.CollectedFromUserMass.GetHashCode();
                if (this.CollectedFromOtherUserCardNumber != null)
                    hashCode = hashCode * 59 + this.CollectedFromOtherUserCardNumber.GetHashCode();
                if (this.CollectedFromOtherUserMass != null)
                    hashCode = hashCode * 59 + this.CollectedFromOtherUserMass.GetHashCode();
                if (this.ManagementCardNumber != null)
                    hashCode = hashCode * 59 + this.ManagementCardNumber.GetHashCode();
                if (this.ManagementHandedOverMass != null)
                    hashCode = hashCode * 59 + this.ManagementHandedOverMass.GetHashCode();
                if (this.ManagementUsedEquipmentMass != null)
                    hashCode = hashCode * 59 + this.ManagementUsedEquipmentMass.GetHashCode();
                if (this.ManagementRecycledEquipmentMass != null)
                    hashCode = hashCode * 59 + this.ManagementRecycledEquipmentMass.GetHashCode();
                if (this.RecycledPartsEquipmentMass != null)
                    hashCode = hashCode * 59 + this.RecycledPartsEquipmentMass.GetHashCode();
                if (this.UsedEquipmentMass != null)
                    hashCode = hashCode * 59 + this.UsedEquipmentMass.GetHashCode();
                if (this.UsedEquipmentCodeAndKindOfWaste != null)
                    hashCode = hashCode * 59 + this.UsedEquipmentCodeAndKindOfWaste.GetHashCode();
                if (this.OnOnesOwnRecycledWasteMass != null)
                    hashCode = hashCode * 59 + this.OnOnesOwnRecycledWasteMass.GetHashCode();
                if (this.OnOnesOwnRD != null)
                    hashCode = hashCode * 59 + this.OnOnesOwnRD.GetHashCode();
                if (this.OnOnesOwnIsRecycling != null)
                    hashCode = hashCode * 59 + this.OnOnesOwnIsRecycling.GetHashCode();
                if (this.HandedOverMass != null)
                    hashCode = hashCode * 59 + this.HandedOverMass.GetHashCode();
                if (this.HandedOverCardNumberOrCodeAndKindOfWaste != null)
                    hashCode = hashCode * 59 + this.HandedOverCardNumberOrCodeAndKindOfWaste.GetHashCode();
                if (this.WasteCodeExtended != null)
                    hashCode = hashCode * 59 + this.WasteCodeExtended.GetHashCode();
                if (this.WasteCodeExtendedDescription != null)
                    hashCode = hashCode * 59 + this.WasteCodeExtendedDescription.GetHashCode();
                if (this.HazardousWasteReclassification != null)
                    hashCode = hashCode * 59 + this.HazardousWasteReclassification.GetHashCode();
                if (this.HazardousWasteReclassificationDescription != null)
                    hashCode = hashCode * 59 + this.HazardousWasteReclassificationDescription.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
