/* 
 * v1 Waste Register public Api
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// WasteRegisterPublicApiApiModelsResponsesWasteRegisterWasteTransferCardV1ConfirmationGeneratedKpoDto
    /// </summary>
    [DataContract]
    public partial class WasteRegisterPublicApiApiModelsResponsesWasteRegisterWasteTransferCardV1ConfirmationGeneratedKpoDto :  IEquatable<WasteRegisterPublicApiApiModelsResponsesWasteRegisterWasteTransferCardV1ConfirmationGeneratedKpoDto>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="WasteRegisterPublicApiApiModelsResponsesWasteRegisterWasteTransferCardV1ConfirmationGeneratedKpoDto" /> class.
        /// </summary>
        /// <param name="kpoId">Id karty przekazania odpadów.</param>
        /// <param name="year">Rok kalendarzowy.</param>
        /// <param name="cardNumber">Numer Karty Przekazania Odpadów.</param>
        /// <param name="cardStatusId">Id statusu Karty Przekazania Odpadów.</param>
        /// <param name="cardStatus">Status karty.</param>
        /// <param name="senderCompanyId">Id podmiotu przekazującego odpady.</param>
        /// <param name="senderEupId">Id miejsca prowadzenia działalności przekazującego odpady.</param>
        /// <param name="carrierCompanyId">Id podmiotu transportującego odpady.</param>
        /// <param name="receiverCompanyId">Id podmiotu przejmującego odpady.</param>
        /// <param name="receiverEupId">Id miejsca prowadzenia działalności przejmującego odpady.</param>
        /// <param name="wasteCodeId">Id kodu odpadu.</param>
        /// <param name="vehicleRegNumber">Numer rejestracyjny środka transportu.</param>
        /// <param name="wasteMass">Masa odpadów.</param>
        /// <param name="plannedTransportTime">Planowana data i godzina transportu.</param>
        /// <param name="cardApprovalTime">Data zatwierdzenia karty.</param>
        /// <param name="approvalUser">Użytkownik zatwierdzający kartę.</param>
        /// <param name="realTransportTime">Rzeczywista data i godzina transportu.</param>
        /// <param name="wasteProcessId">Id procesu przetwarzania odpadów.</param>
        /// <param name="certificateNumberAndBoxNumbers">Numer certyfikatu oraz numery pojemników.</param>
        /// <param name="generatingConfirmationUser">Użytkownik generujący potwierdzenie.</param>
        /// <param name="generatingConfirmationTime">Data wygenerowania potwierdzenia.</param>
        /// <param name="cardStatusCodeName">Oznaczenie kodowe statusu karty.</param>
        /// <param name="isRevised">Czy korygowana.</param>
        /// <param name="revisedAt">Data wprowadzenia korekty.</param>
        /// <param name="revisedBy">Imię i Nazwisko osoby korygującej kartę.</param>
        /// <param name="revisedWasteMass">Skorygowana masa odpadów.</param>
        /// <param name="revisedWasteCodeId">Skorygowany kod i rodzaj odpadów.</param>
        /// <param name="additionalInfo">Informacje dodatkowe.</param>
        /// <param name="wasteCodeExtended">Kod ex.</param>
        /// <param name="wasteCodeExtendedDescription">Rodzaj odpadu ex.</param>
        /// <param name="hazardousWasteReclassification">Zmiana statusu odpadów niebezpiecznych na odpady inne niż niebezpieczne.</param>
        /// <param name="hazardousWasteReclassificationDescription">Rodzaj odpadu.</param>
        public WasteRegisterPublicApiApiModelsResponsesWasteRegisterWasteTransferCardV1ConfirmationGeneratedKpoDto(Guid? kpoId = default(Guid?), int? year = default(int?), string cardNumber = default(string), int? cardStatusId = default(int?), string cardStatus = default(string), Guid? senderCompanyId = default(Guid?), Guid? senderEupId = default(Guid?), Guid? carrierCompanyId = default(Guid?), Guid? receiverCompanyId = default(Guid?), Guid? receiverEupId = default(Guid?), int? wasteCodeId = default(int?), string vehicleRegNumber = default(string), double? wasteMass = default(double?), DateTime? plannedTransportTime = default(DateTime?), DateTime? cardApprovalTime = default(DateTime?), string approvalUser = default(string), DateTime? realTransportTime = default(DateTime?), int? wasteProcessId = default(int?), string certificateNumberAndBoxNumbers = default(string), string generatingConfirmationUser = default(string), DateTime? generatingConfirmationTime = default(DateTime?), string cardStatusCodeName = default(string), bool? isRevised = default(bool?), DateTime? revisedAt = default(DateTime?), string revisedBy = default(string), double? revisedWasteMass = default(double?), int? revisedWasteCodeId = default(int?), string additionalInfo = default(string), bool? wasteCodeExtended = default(bool?), string wasteCodeExtendedDescription = default(string), bool? hazardousWasteReclassification = default(bool?), string hazardousWasteReclassificationDescription = default(string))
        {
            this.KpoId = kpoId;
            this.Year = year;
            this.CardNumber = cardNumber;
            this.CardStatusId = cardStatusId;
            this.CardStatus = cardStatus;
            this.SenderCompanyId = senderCompanyId;
            this.SenderEupId = senderEupId;
            this.CarrierCompanyId = carrierCompanyId;
            this.ReceiverCompanyId = receiverCompanyId;
            this.ReceiverEupId = receiverEupId;
            this.WasteCodeId = wasteCodeId;
            this.VehicleRegNumber = vehicleRegNumber;
            this.WasteMass = wasteMass;
            this.PlannedTransportTime = plannedTransportTime;
            this.CardApprovalTime = cardApprovalTime;
            this.ApprovalUser = approvalUser;
            this.RealTransportTime = realTransportTime;
            this.WasteProcessId = wasteProcessId;
            this.CertificateNumberAndBoxNumbers = certificateNumberAndBoxNumbers;
            this.GeneratingConfirmationUser = generatingConfirmationUser;
            this.GeneratingConfirmationTime = generatingConfirmationTime;
            this.CardStatusCodeName = cardStatusCodeName;
            this.IsRevised = isRevised;
            this.RevisedAt = revisedAt;
            this.RevisedBy = revisedBy;
            this.RevisedWasteMass = revisedWasteMass;
            this.RevisedWasteCodeId = revisedWasteCodeId;
            this.AdditionalInfo = additionalInfo;
            this.WasteCodeExtended = wasteCodeExtended;
            this.WasteCodeExtendedDescription = wasteCodeExtendedDescription;
            this.HazardousWasteReclassification = hazardousWasteReclassification;
            this.HazardousWasteReclassificationDescription = hazardousWasteReclassificationDescription;
        }
        
        /// <summary>
        /// Id karty przekazania odpadów
        /// </summary>
        /// <value>Id karty przekazania odpadów</value>
        [DataMember(Name="kpoId", EmitDefaultValue=false)]
        public Guid? KpoId { get; set; }

        /// <summary>
        /// Rok kalendarzowy
        /// </summary>
        /// <value>Rok kalendarzowy</value>
        [DataMember(Name="year", EmitDefaultValue=false)]
        public int? Year { get; set; }

        /// <summary>
        /// Numer Karty Przekazania Odpadów
        /// </summary>
        /// <value>Numer Karty Przekazania Odpadów</value>
        [DataMember(Name="cardNumber", EmitDefaultValue=false)]
        public string CardNumber { get; set; }

        /// <summary>
        /// Id statusu Karty Przekazania Odpadów
        /// </summary>
        /// <value>Id statusu Karty Przekazania Odpadów</value>
        [DataMember(Name="cardStatusId", EmitDefaultValue=false)]
        public int? CardStatusId { get; set; }

        /// <summary>
        /// Status karty
        /// </summary>
        /// <value>Status karty</value>
        [DataMember(Name="cardStatus", EmitDefaultValue=false)]
        public string CardStatus { get; set; }

        /// <summary>
        /// Id podmiotu przekazującego odpady
        /// </summary>
        /// <value>Id podmiotu przekazującego odpady</value>
        [DataMember(Name="senderCompanyId", EmitDefaultValue=false)]
        public Guid? SenderCompanyId { get; set; }

        /// <summary>
        /// Id miejsca prowadzenia działalności przekazującego odpady
        /// </summary>
        /// <value>Id miejsca prowadzenia działalności przekazującego odpady</value>
        [DataMember(Name="senderEupId", EmitDefaultValue=false)]
        public Guid? SenderEupId { get; set; }

        /// <summary>
        /// Id podmiotu transportującego odpady
        /// </summary>
        /// <value>Id podmiotu transportującego odpady</value>
        [DataMember(Name="carrierCompanyId", EmitDefaultValue=false)]
        public Guid? CarrierCompanyId { get; set; }

        /// <summary>
        /// Id podmiotu przejmującego odpady
        /// </summary>
        /// <value>Id podmiotu przejmującego odpady</value>
        [DataMember(Name="receiverCompanyId", EmitDefaultValue=false)]
        public Guid? ReceiverCompanyId { get; set; }

        /// <summary>
        /// Id miejsca prowadzenia działalności przejmującego odpady
        /// </summary>
        /// <value>Id miejsca prowadzenia działalności przejmującego odpady</value>
        [DataMember(Name="receiverEupId", EmitDefaultValue=false)]
        public Guid? ReceiverEupId { get; set; }

        /// <summary>
        /// Id kodu odpadu
        /// </summary>
        /// <value>Id kodu odpadu</value>
        [DataMember(Name="wasteCodeId", EmitDefaultValue=false)]
        public int? WasteCodeId { get; set; }

        /// <summary>
        /// Numer rejestracyjny środka transportu
        /// </summary>
        /// <value>Numer rejestracyjny środka transportu</value>
        [DataMember(Name="vehicleRegNumber", EmitDefaultValue=false)]
        public string VehicleRegNumber { get; set; }

        /// <summary>
        /// Masa odpadów
        /// </summary>
        /// <value>Masa odpadów</value>
        [DataMember(Name="wasteMass", EmitDefaultValue=false)]
        public double? WasteMass { get; set; }

        /// <summary>
        /// Planowana data i godzina transportu
        /// </summary>
        /// <value>Planowana data i godzina transportu</value>
        [DataMember(Name="plannedTransportTime", EmitDefaultValue=false)]
        public DateTime? PlannedTransportTime { get; set; }

        /// <summary>
        /// Data zatwierdzenia karty
        /// </summary>
        /// <value>Data zatwierdzenia karty</value>
        [DataMember(Name="cardApprovalTime", EmitDefaultValue=false)]
        public DateTime? CardApprovalTime { get; set; }

        /// <summary>
        /// Użytkownik zatwierdzający kartę
        /// </summary>
        /// <value>Użytkownik zatwierdzający kartę</value>
        [DataMember(Name="approvalUser", EmitDefaultValue=false)]
        public string ApprovalUser { get; set; }

        /// <summary>
        /// Rzeczywista data i godzina transportu
        /// </summary>
        /// <value>Rzeczywista data i godzina transportu</value>
        [DataMember(Name="realTransportTime", EmitDefaultValue=false)]
        public DateTime? RealTransportTime { get; set; }

        /// <summary>
        /// Id procesu przetwarzania odpadów
        /// </summary>
        /// <value>Id procesu przetwarzania odpadów</value>
        [DataMember(Name="wasteProcessId", EmitDefaultValue=false)]
        public int? WasteProcessId { get; set; }

        /// <summary>
        /// Numer certyfikatu oraz numery pojemników
        /// </summary>
        /// <value>Numer certyfikatu oraz numery pojemników</value>
        [DataMember(Name="certificateNumberAndBoxNumbers", EmitDefaultValue=false)]
        public string CertificateNumberAndBoxNumbers { get; set; }

        /// <summary>
        /// Użytkownik generujący potwierdzenie
        /// </summary>
        /// <value>Użytkownik generujący potwierdzenie</value>
        [DataMember(Name="generatingConfirmationUser", EmitDefaultValue=false)]
        public string GeneratingConfirmationUser { get; set; }

        /// <summary>
        /// Data wygenerowania potwierdzenia
        /// </summary>
        /// <value>Data wygenerowania potwierdzenia</value>
        [DataMember(Name="generatingConfirmationTime", EmitDefaultValue=false)]
        public DateTime? GeneratingConfirmationTime { get; set; }

        /// <summary>
        /// Oznaczenie kodowe statusu karty
        /// </summary>
        /// <value>Oznaczenie kodowe statusu karty</value>
        [DataMember(Name="cardStatusCodeName", EmitDefaultValue=false)]
        public string CardStatusCodeName { get; set; }

        /// <summary>
        /// Czy korygowana
        /// </summary>
        /// <value>Czy korygowana</value>
        [DataMember(Name="isRevised", EmitDefaultValue=false)]
        public bool? IsRevised { get; set; }

        /// <summary>
        /// Data wprowadzenia korekty
        /// </summary>
        /// <value>Data wprowadzenia korekty</value>
        [DataMember(Name="revisedAt", EmitDefaultValue=false)]
        public DateTime? RevisedAt { get; set; }

        /// <summary>
        /// Imię i Nazwisko osoby korygującej kartę
        /// </summary>
        /// <value>Imię i Nazwisko osoby korygującej kartę</value>
        [DataMember(Name="revisedBy", EmitDefaultValue=false)]
        public string RevisedBy { get; set; }

        /// <summary>
        /// Skorygowana masa odpadów
        /// </summary>
        /// <value>Skorygowana masa odpadów</value>
        [DataMember(Name="revisedWasteMass", EmitDefaultValue=false)]
        public double? RevisedWasteMass { get; set; }

        /// <summary>
        /// Skorygowany kod i rodzaj odpadów
        /// </summary>
        /// <value>Skorygowany kod i rodzaj odpadów</value>
        [DataMember(Name="revisedWasteCodeId", EmitDefaultValue=false)]
        public int? RevisedWasteCodeId { get; set; }

        /// <summary>
        /// Informacje dodatkowe
        /// </summary>
        /// <value>Informacje dodatkowe</value>
        [DataMember(Name="additionalInfo", EmitDefaultValue=false)]
        public string AdditionalInfo { get; set; }

        /// <summary>
        /// Kod ex
        /// </summary>
        /// <value>Kod ex</value>
        [DataMember(Name="wasteCodeExtended", EmitDefaultValue=false)]
        public bool? WasteCodeExtended { get; set; }

        /// <summary>
        /// Rodzaj odpadu ex
        /// </summary>
        /// <value>Rodzaj odpadu ex</value>
        [DataMember(Name="wasteCodeExtendedDescription", EmitDefaultValue=false)]
        public string WasteCodeExtendedDescription { get; set; }

        /// <summary>
        /// Zmiana statusu odpadów niebezpiecznych na odpady inne niż niebezpieczne
        /// </summary>
        /// <value>Zmiana statusu odpadów niebezpiecznych na odpady inne niż niebezpieczne</value>
        [DataMember(Name="hazardousWasteReclassification", EmitDefaultValue=false)]
        public bool? HazardousWasteReclassification { get; set; }

        /// <summary>
        /// Rodzaj odpadu
        /// </summary>
        /// <value>Rodzaj odpadu</value>
        [DataMember(Name="hazardousWasteReclassificationDescription", EmitDefaultValue=false)]
        public string HazardousWasteReclassificationDescription { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class WasteRegisterPublicApiApiModelsResponsesWasteRegisterWasteTransferCardV1ConfirmationGeneratedKpoDto {\n");
            sb.Append("  KpoId: ").Append(KpoId).Append("\n");
            sb.Append("  Year: ").Append(Year).Append("\n");
            sb.Append("  CardNumber: ").Append(CardNumber).Append("\n");
            sb.Append("  CardStatusId: ").Append(CardStatusId).Append("\n");
            sb.Append("  CardStatus: ").Append(CardStatus).Append("\n");
            sb.Append("  SenderCompanyId: ").Append(SenderCompanyId).Append("\n");
            sb.Append("  SenderEupId: ").Append(SenderEupId).Append("\n");
            sb.Append("  CarrierCompanyId: ").Append(CarrierCompanyId).Append("\n");
            sb.Append("  ReceiverCompanyId: ").Append(ReceiverCompanyId).Append("\n");
            sb.Append("  ReceiverEupId: ").Append(ReceiverEupId).Append("\n");
            sb.Append("  WasteCodeId: ").Append(WasteCodeId).Append("\n");
            sb.Append("  VehicleRegNumber: ").Append(VehicleRegNumber).Append("\n");
            sb.Append("  WasteMass: ").Append(WasteMass).Append("\n");
            sb.Append("  PlannedTransportTime: ").Append(PlannedTransportTime).Append("\n");
            sb.Append("  CardApprovalTime: ").Append(CardApprovalTime).Append("\n");
            sb.Append("  ApprovalUser: ").Append(ApprovalUser).Append("\n");
            sb.Append("  RealTransportTime: ").Append(RealTransportTime).Append("\n");
            sb.Append("  WasteProcessId: ").Append(WasteProcessId).Append("\n");
            sb.Append("  CertificateNumberAndBoxNumbers: ").Append(CertificateNumberAndBoxNumbers).Append("\n");
            sb.Append("  GeneratingConfirmationUser: ").Append(GeneratingConfirmationUser).Append("\n");
            sb.Append("  GeneratingConfirmationTime: ").Append(GeneratingConfirmationTime).Append("\n");
            sb.Append("  CardStatusCodeName: ").Append(CardStatusCodeName).Append("\n");
            sb.Append("  IsRevised: ").Append(IsRevised).Append("\n");
            sb.Append("  RevisedAt: ").Append(RevisedAt).Append("\n");
            sb.Append("  RevisedBy: ").Append(RevisedBy).Append("\n");
            sb.Append("  RevisedWasteMass: ").Append(RevisedWasteMass).Append("\n");
            sb.Append("  RevisedWasteCodeId: ").Append(RevisedWasteCodeId).Append("\n");
            sb.Append("  AdditionalInfo: ").Append(AdditionalInfo).Append("\n");
            sb.Append("  WasteCodeExtended: ").Append(WasteCodeExtended).Append("\n");
            sb.Append("  WasteCodeExtendedDescription: ").Append(WasteCodeExtendedDescription).Append("\n");
            sb.Append("  HazardousWasteReclassification: ").Append(HazardousWasteReclassification).Append("\n");
            sb.Append("  HazardousWasteReclassificationDescription: ").Append(HazardousWasteReclassificationDescription).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as WasteRegisterPublicApiApiModelsResponsesWasteRegisterWasteTransferCardV1ConfirmationGeneratedKpoDto);
        }

        /// <summary>
        /// Returns true if WasteRegisterPublicApiApiModelsResponsesWasteRegisterWasteTransferCardV1ConfirmationGeneratedKpoDto instances are equal
        /// </summary>
        /// <param name="input">Instance of WasteRegisterPublicApiApiModelsResponsesWasteRegisterWasteTransferCardV1ConfirmationGeneratedKpoDto to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(WasteRegisterPublicApiApiModelsResponsesWasteRegisterWasteTransferCardV1ConfirmationGeneratedKpoDto input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.KpoId == input.KpoId ||
                    (this.KpoId != null &&
                    this.KpoId.Equals(input.KpoId))
                ) && 
                (
                    this.Year == input.Year ||
                    (this.Year != null &&
                    this.Year.Equals(input.Year))
                ) && 
                (
                    this.CardNumber == input.CardNumber ||
                    (this.CardNumber != null &&
                    this.CardNumber.Equals(input.CardNumber))
                ) && 
                (
                    this.CardStatusId == input.CardStatusId ||
                    (this.CardStatusId != null &&
                    this.CardStatusId.Equals(input.CardStatusId))
                ) && 
                (
                    this.CardStatus == input.CardStatus ||
                    (this.CardStatus != null &&
                    this.CardStatus.Equals(input.CardStatus))
                ) && 
                (
                    this.SenderCompanyId == input.SenderCompanyId ||
                    (this.SenderCompanyId != null &&
                    this.SenderCompanyId.Equals(input.SenderCompanyId))
                ) && 
                (
                    this.SenderEupId == input.SenderEupId ||
                    (this.SenderEupId != null &&
                    this.SenderEupId.Equals(input.SenderEupId))
                ) && 
                (
                    this.CarrierCompanyId == input.CarrierCompanyId ||
                    (this.CarrierCompanyId != null &&
                    this.CarrierCompanyId.Equals(input.CarrierCompanyId))
                ) && 
                (
                    this.ReceiverCompanyId == input.ReceiverCompanyId ||
                    (this.ReceiverCompanyId != null &&
                    this.ReceiverCompanyId.Equals(input.ReceiverCompanyId))
                ) && 
                (
                    this.ReceiverEupId == input.ReceiverEupId ||
                    (this.ReceiverEupId != null &&
                    this.ReceiverEupId.Equals(input.ReceiverEupId))
                ) && 
                (
                    this.WasteCodeId == input.WasteCodeId ||
                    (this.WasteCodeId != null &&
                    this.WasteCodeId.Equals(input.WasteCodeId))
                ) && 
                (
                    this.VehicleRegNumber == input.VehicleRegNumber ||
                    (this.VehicleRegNumber != null &&
                    this.VehicleRegNumber.Equals(input.VehicleRegNumber))
                ) && 
                (
                    this.WasteMass == input.WasteMass ||
                    (this.WasteMass != null &&
                    this.WasteMass.Equals(input.WasteMass))
                ) && 
                (
                    this.PlannedTransportTime == input.PlannedTransportTime ||
                    (this.PlannedTransportTime != null &&
                    this.PlannedTransportTime.Equals(input.PlannedTransportTime))
                ) && 
                (
                    this.CardApprovalTime == input.CardApprovalTime ||
                    (this.CardApprovalTime != null &&
                    this.CardApprovalTime.Equals(input.CardApprovalTime))
                ) && 
                (
                    this.ApprovalUser == input.ApprovalUser ||
                    (this.ApprovalUser != null &&
                    this.ApprovalUser.Equals(input.ApprovalUser))
                ) && 
                (
                    this.RealTransportTime == input.RealTransportTime ||
                    (this.RealTransportTime != null &&
                    this.RealTransportTime.Equals(input.RealTransportTime))
                ) && 
                (
                    this.WasteProcessId == input.WasteProcessId ||
                    (this.WasteProcessId != null &&
                    this.WasteProcessId.Equals(input.WasteProcessId))
                ) && 
                (
                    this.CertificateNumberAndBoxNumbers == input.CertificateNumberAndBoxNumbers ||
                    (this.CertificateNumberAndBoxNumbers != null &&
                    this.CertificateNumberAndBoxNumbers.Equals(input.CertificateNumberAndBoxNumbers))
                ) && 
                (
                    this.GeneratingConfirmationUser == input.GeneratingConfirmationUser ||
                    (this.GeneratingConfirmationUser != null &&
                    this.GeneratingConfirmationUser.Equals(input.GeneratingConfirmationUser))
                ) && 
                (
                    this.GeneratingConfirmationTime == input.GeneratingConfirmationTime ||
                    (this.GeneratingConfirmationTime != null &&
                    this.GeneratingConfirmationTime.Equals(input.GeneratingConfirmationTime))
                ) && 
                (
                    this.CardStatusCodeName == input.CardStatusCodeName ||
                    (this.CardStatusCodeName != null &&
                    this.CardStatusCodeName.Equals(input.CardStatusCodeName))
                ) && 
                (
                    this.IsRevised == input.IsRevised ||
                    (this.IsRevised != null &&
                    this.IsRevised.Equals(input.IsRevised))
                ) && 
                (
                    this.RevisedAt == input.RevisedAt ||
                    (this.RevisedAt != null &&
                    this.RevisedAt.Equals(input.RevisedAt))
                ) && 
                (
                    this.RevisedBy == input.RevisedBy ||
                    (this.RevisedBy != null &&
                    this.RevisedBy.Equals(input.RevisedBy))
                ) && 
                (
                    this.RevisedWasteMass == input.RevisedWasteMass ||
                    (this.RevisedWasteMass != null &&
                    this.RevisedWasteMass.Equals(input.RevisedWasteMass))
                ) && 
                (
                    this.RevisedWasteCodeId == input.RevisedWasteCodeId ||
                    (this.RevisedWasteCodeId != null &&
                    this.RevisedWasteCodeId.Equals(input.RevisedWasteCodeId))
                ) && 
                (
                    this.AdditionalInfo == input.AdditionalInfo ||
                    (this.AdditionalInfo != null &&
                    this.AdditionalInfo.Equals(input.AdditionalInfo))
                ) && 
                (
                    this.WasteCodeExtended == input.WasteCodeExtended ||
                    (this.WasteCodeExtended != null &&
                    this.WasteCodeExtended.Equals(input.WasteCodeExtended))
                ) && 
                (
                    this.WasteCodeExtendedDescription == input.WasteCodeExtendedDescription ||
                    (this.WasteCodeExtendedDescription != null &&
                    this.WasteCodeExtendedDescription.Equals(input.WasteCodeExtendedDescription))
                ) && 
                (
                    this.HazardousWasteReclassification == input.HazardousWasteReclassification ||
                    (this.HazardousWasteReclassification != null &&
                    this.HazardousWasteReclassification.Equals(input.HazardousWasteReclassification))
                ) && 
                (
                    this.HazardousWasteReclassificationDescription == input.HazardousWasteReclassificationDescription ||
                    (this.HazardousWasteReclassificationDescription != null &&
                    this.HazardousWasteReclassificationDescription.Equals(input.HazardousWasteReclassificationDescription))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.KpoId != null)
                    hashCode = hashCode * 59 + this.KpoId.GetHashCode();
                if (this.Year != null)
                    hashCode = hashCode * 59 + this.Year.GetHashCode();
                if (this.CardNumber != null)
                    hashCode = hashCode * 59 + this.CardNumber.GetHashCode();
                if (this.CardStatusId != null)
                    hashCode = hashCode * 59 + this.CardStatusId.GetHashCode();
                if (this.CardStatus != null)
                    hashCode = hashCode * 59 + this.CardStatus.GetHashCode();
                if (this.SenderCompanyId != null)
                    hashCode = hashCode * 59 + this.SenderCompanyId.GetHashCode();
                if (this.SenderEupId != null)
                    hashCode = hashCode * 59 + this.SenderEupId.GetHashCode();
                if (this.CarrierCompanyId != null)
                    hashCode = hashCode * 59 + this.CarrierCompanyId.GetHashCode();
                if (this.ReceiverCompanyId != null)
                    hashCode = hashCode * 59 + this.ReceiverCompanyId.GetHashCode();
                if (this.ReceiverEupId != null)
                    hashCode = hashCode * 59 + this.ReceiverEupId.GetHashCode();
                if (this.WasteCodeId != null)
                    hashCode = hashCode * 59 + this.WasteCodeId.GetHashCode();
                if (this.VehicleRegNumber != null)
                    hashCode = hashCode * 59 + this.VehicleRegNumber.GetHashCode();
                if (this.WasteMass != null)
                    hashCode = hashCode * 59 + this.WasteMass.GetHashCode();
                if (this.PlannedTransportTime != null)
                    hashCode = hashCode * 59 + this.PlannedTransportTime.GetHashCode();
                if (this.CardApprovalTime != null)
                    hashCode = hashCode * 59 + this.CardApprovalTime.GetHashCode();
                if (this.ApprovalUser != null)
                    hashCode = hashCode * 59 + this.ApprovalUser.GetHashCode();
                if (this.RealTransportTime != null)
                    hashCode = hashCode * 59 + this.RealTransportTime.GetHashCode();
                if (this.WasteProcessId != null)
                    hashCode = hashCode * 59 + this.WasteProcessId.GetHashCode();
                if (this.CertificateNumberAndBoxNumbers != null)
                    hashCode = hashCode * 59 + this.CertificateNumberAndBoxNumbers.GetHashCode();
                if (this.GeneratingConfirmationUser != null)
                    hashCode = hashCode * 59 + this.GeneratingConfirmationUser.GetHashCode();
                if (this.GeneratingConfirmationTime != null)
                    hashCode = hashCode * 59 + this.GeneratingConfirmationTime.GetHashCode();
                if (this.CardStatusCodeName != null)
                    hashCode = hashCode * 59 + this.CardStatusCodeName.GetHashCode();
                if (this.IsRevised != null)
                    hashCode = hashCode * 59 + this.IsRevised.GetHashCode();
                if (this.RevisedAt != null)
                    hashCode = hashCode * 59 + this.RevisedAt.GetHashCode();
                if (this.RevisedBy != null)
                    hashCode = hashCode * 59 + this.RevisedBy.GetHashCode();
                if (this.RevisedWasteMass != null)
                    hashCode = hashCode * 59 + this.RevisedWasteMass.GetHashCode();
                if (this.RevisedWasteCodeId != null)
                    hashCode = hashCode * 59 + this.RevisedWasteCodeId.GetHashCode();
                if (this.AdditionalInfo != null)
                    hashCode = hashCode * 59 + this.AdditionalInfo.GetHashCode();
                if (this.WasteCodeExtended != null)
                    hashCode = hashCode * 59 + this.WasteCodeExtended.GetHashCode();
                if (this.WasteCodeExtendedDescription != null)
                    hashCode = hashCode * 59 + this.WasteCodeExtendedDescription.GetHashCode();
                if (this.HazardousWasteReclassification != null)
                    hashCode = hashCode * 59 + this.HazardousWasteReclassification.GetHashCode();
                if (this.HazardousWasteReclassificationDescription != null)
                    hashCode = hashCode * 59 + this.HazardousWasteReclassificationDescription.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
