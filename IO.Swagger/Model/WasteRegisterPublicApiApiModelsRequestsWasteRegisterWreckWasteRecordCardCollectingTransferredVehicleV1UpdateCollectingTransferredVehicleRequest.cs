/* 
 * v1 Waste Register public Api
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// WasteRegisterPublicApiApiModelsRequestsWasteRegisterWreckWasteRecordCardCollectingTransferredVehicleV1UpdateCollectingTransferredVehicleRequest
    /// </summary>
    [DataContract]
    public partial class WasteRegisterPublicApiApiModelsRequestsWasteRegisterWreckWasteRecordCardCollectingTransferredVehicleV1UpdateCollectingTransferredVehicleRequest :  IEquatable<WasteRegisterPublicApiApiModelsRequestsWasteRegisterWreckWasteRecordCardCollectingTransferredVehicleV1UpdateCollectingTransferredVehicleRequest>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="WasteRegisterPublicApiApiModelsRequestsWasteRegisterWreckWasteRecordCardCollectingTransferredVehicleV1UpdateCollectingTransferredVehicleRequest" /> class.
        /// </summary>
        /// <param name="kepwCollectingTransferredVehiclesId">Id wpisu Prowadzący punkt zbierania pojazdów - Przekazane.</param>
        /// <param name="kpoId">Id karty przekazania odpadów.</param>
        /// <param name="vehiclesCount">Liczba [szt.].</param>
        public WasteRegisterPublicApiApiModelsRequestsWasteRegisterWreckWasteRecordCardCollectingTransferredVehicleV1UpdateCollectingTransferredVehicleRequest(Guid? kepwCollectingTransferredVehiclesId = default(Guid?), Guid? kpoId = default(Guid?), int? vehiclesCount = default(int?))
        {
            this.KepwCollectingTransferredVehiclesId = kepwCollectingTransferredVehiclesId;
            this.KpoId = kpoId;
            this.VehiclesCount = vehiclesCount;
        }
        
        /// <summary>
        /// Id wpisu Prowadzący punkt zbierania pojazdów - Przekazane
        /// </summary>
        /// <value>Id wpisu Prowadzący punkt zbierania pojazdów - Przekazane</value>
        [DataMember(Name="kepwCollectingTransferredVehiclesId", EmitDefaultValue=false)]
        public Guid? KepwCollectingTransferredVehiclesId { get; set; }

        /// <summary>
        /// Id karty przekazania odpadów
        /// </summary>
        /// <value>Id karty przekazania odpadów</value>
        [DataMember(Name="kpoId", EmitDefaultValue=false)]
        public Guid? KpoId { get; set; }

        /// <summary>
        /// Liczba [szt.]
        /// </summary>
        /// <value>Liczba [szt.]</value>
        [DataMember(Name="vehiclesCount", EmitDefaultValue=false)]
        public int? VehiclesCount { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class WasteRegisterPublicApiApiModelsRequestsWasteRegisterWreckWasteRecordCardCollectingTransferredVehicleV1UpdateCollectingTransferredVehicleRequest {\n");
            sb.Append("  KepwCollectingTransferredVehiclesId: ").Append(KepwCollectingTransferredVehiclesId).Append("\n");
            sb.Append("  KpoId: ").Append(KpoId).Append("\n");
            sb.Append("  VehiclesCount: ").Append(VehiclesCount).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as WasteRegisterPublicApiApiModelsRequestsWasteRegisterWreckWasteRecordCardCollectingTransferredVehicleV1UpdateCollectingTransferredVehicleRequest);
        }

        /// <summary>
        /// Returns true if WasteRegisterPublicApiApiModelsRequestsWasteRegisterWreckWasteRecordCardCollectingTransferredVehicleV1UpdateCollectingTransferredVehicleRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of WasteRegisterPublicApiApiModelsRequestsWasteRegisterWreckWasteRecordCardCollectingTransferredVehicleV1UpdateCollectingTransferredVehicleRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(WasteRegisterPublicApiApiModelsRequestsWasteRegisterWreckWasteRecordCardCollectingTransferredVehicleV1UpdateCollectingTransferredVehicleRequest input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.KepwCollectingTransferredVehiclesId == input.KepwCollectingTransferredVehiclesId ||
                    (this.KepwCollectingTransferredVehiclesId != null &&
                    this.KepwCollectingTransferredVehiclesId.Equals(input.KepwCollectingTransferredVehiclesId))
                ) && 
                (
                    this.KpoId == input.KpoId ||
                    (this.KpoId != null &&
                    this.KpoId.Equals(input.KpoId))
                ) && 
                (
                    this.VehiclesCount == input.VehiclesCount ||
                    (this.VehiclesCount != null &&
                    this.VehiclesCount.Equals(input.VehiclesCount))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.KepwCollectingTransferredVehiclesId != null)
                    hashCode = hashCode * 59 + this.KepwCollectingTransferredVehiclesId.GetHashCode();
                if (this.KpoId != null)
                    hashCode = hashCode * 59 + this.KpoId.GetHashCode();
                if (this.VehiclesCount != null)
                    hashCode = hashCode * 59 + this.VehiclesCount.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
