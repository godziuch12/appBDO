/* 
 * v1 Waste Register public Api
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// WasteRegisterPublicApiApiModelsResponsesWasteRegisterMunicipalSewageSludgeCardV1GetKekosSummaryResponse
    /// </summary>
    [DataContract]
    public partial class WasteRegisterPublicApiApiModelsResponsesWasteRegisterMunicipalSewageSludgeCardV1GetKekosSummaryResponse :  IEquatable<WasteRegisterPublicApiApiModelsResponsesWasteRegisterMunicipalSewageSludgeCardV1GetKekosSummaryResponse>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="WasteRegisterPublicApiApiModelsResponsesWasteRegisterMunicipalSewageSludgeCardV1GetKekosSummaryResponse" /> class.
        /// </summary>
        /// <param name="wasteCodeId">Id kodu odpadu.</param>
        /// <param name="cardNumber">Numer karty.</param>
        /// <param name="year">Rok kalendarzowy.</param>
        /// <param name="initialMass">initialMass.</param>
        /// <param name="initialDryMatterMass">initialDryMatterMass.</param>
        /// <param name="appliedSedimentsSludgeMass">appliedSedimentsSludgeMass.</param>
        /// <param name="appliedSedimentsSludgeMassDryMatter">appliedSedimentsSludgeMassDryMatter.</param>
        /// <param name="batchOfGeneratedSedimentsSludgeMass">batchOfGeneratedSedimentsSludgeMass.</param>
        /// <param name="batchOfGeneratedSedimentsSludgeMassDryMatter">batchOfGeneratedSedimentsSludgeMassDryMatter.</param>
        public WasteRegisterPublicApiApiModelsResponsesWasteRegisterMunicipalSewageSludgeCardV1GetKekosSummaryResponse(int? wasteCodeId = default(int?), string cardNumber = default(string), int? year = default(int?), double? initialMass = default(double?), double? initialDryMatterMass = default(double?), double? appliedSedimentsSludgeMass = default(double?), double? appliedSedimentsSludgeMassDryMatter = default(double?), double? batchOfGeneratedSedimentsSludgeMass = default(double?), double? batchOfGeneratedSedimentsSludgeMassDryMatter = default(double?))
        {
            this.WasteCodeId = wasteCodeId;
            this.CardNumber = cardNumber;
            this.Year = year;
            this.InitialMass = initialMass;
            this.InitialDryMatterMass = initialDryMatterMass;
            this.AppliedSedimentsSludgeMass = appliedSedimentsSludgeMass;
            this.AppliedSedimentsSludgeMassDryMatter = appliedSedimentsSludgeMassDryMatter;
            this.BatchOfGeneratedSedimentsSludgeMass = batchOfGeneratedSedimentsSludgeMass;
            this.BatchOfGeneratedSedimentsSludgeMassDryMatter = batchOfGeneratedSedimentsSludgeMassDryMatter;
        }
        
        /// <summary>
        /// Id kodu odpadu
        /// </summary>
        /// <value>Id kodu odpadu</value>
        [DataMember(Name="wasteCodeId", EmitDefaultValue=false)]
        public int? WasteCodeId { get; set; }

        /// <summary>
        /// Numer karty
        /// </summary>
        /// <value>Numer karty</value>
        [DataMember(Name="cardNumber", EmitDefaultValue=false)]
        public string CardNumber { get; set; }

        /// <summary>
        /// Rok kalendarzowy
        /// </summary>
        /// <value>Rok kalendarzowy</value>
        [DataMember(Name="year", EmitDefaultValue=false)]
        public int? Year { get; set; }

        /// <summary>
        /// Gets or Sets InitialMass
        /// </summary>
        [DataMember(Name="initialMass", EmitDefaultValue=false)]
        public double? InitialMass { get; set; }

        /// <summary>
        /// Gets or Sets InitialDryMatterMass
        /// </summary>
        [DataMember(Name="initialDryMatterMass", EmitDefaultValue=false)]
        public double? InitialDryMatterMass { get; set; }

        /// <summary>
        /// Gets or Sets AppliedSedimentsSludgeMass
        /// </summary>
        [DataMember(Name="appliedSedimentsSludgeMass", EmitDefaultValue=false)]
        public double? AppliedSedimentsSludgeMass { get; set; }

        /// <summary>
        /// Gets or Sets AppliedSedimentsSludgeMassDryMatter
        /// </summary>
        [DataMember(Name="appliedSedimentsSludgeMassDryMatter", EmitDefaultValue=false)]
        public double? AppliedSedimentsSludgeMassDryMatter { get; set; }

        /// <summary>
        /// Gets or Sets BatchOfGeneratedSedimentsSludgeMass
        /// </summary>
        [DataMember(Name="batchOfGeneratedSedimentsSludgeMass", EmitDefaultValue=false)]
        public double? BatchOfGeneratedSedimentsSludgeMass { get; set; }

        /// <summary>
        /// Gets or Sets BatchOfGeneratedSedimentsSludgeMassDryMatter
        /// </summary>
        [DataMember(Name="batchOfGeneratedSedimentsSludgeMassDryMatter", EmitDefaultValue=false)]
        public double? BatchOfGeneratedSedimentsSludgeMassDryMatter { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class WasteRegisterPublicApiApiModelsResponsesWasteRegisterMunicipalSewageSludgeCardV1GetKekosSummaryResponse {\n");
            sb.Append("  WasteCodeId: ").Append(WasteCodeId).Append("\n");
            sb.Append("  CardNumber: ").Append(CardNumber).Append("\n");
            sb.Append("  Year: ").Append(Year).Append("\n");
            sb.Append("  InitialMass: ").Append(InitialMass).Append("\n");
            sb.Append("  InitialDryMatterMass: ").Append(InitialDryMatterMass).Append("\n");
            sb.Append("  AppliedSedimentsSludgeMass: ").Append(AppliedSedimentsSludgeMass).Append("\n");
            sb.Append("  AppliedSedimentsSludgeMassDryMatter: ").Append(AppliedSedimentsSludgeMassDryMatter).Append("\n");
            sb.Append("  BatchOfGeneratedSedimentsSludgeMass: ").Append(BatchOfGeneratedSedimentsSludgeMass).Append("\n");
            sb.Append("  BatchOfGeneratedSedimentsSludgeMassDryMatter: ").Append(BatchOfGeneratedSedimentsSludgeMassDryMatter).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as WasteRegisterPublicApiApiModelsResponsesWasteRegisterMunicipalSewageSludgeCardV1GetKekosSummaryResponse);
        }

        /// <summary>
        /// Returns true if WasteRegisterPublicApiApiModelsResponsesWasteRegisterMunicipalSewageSludgeCardV1GetKekosSummaryResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of WasteRegisterPublicApiApiModelsResponsesWasteRegisterMunicipalSewageSludgeCardV1GetKekosSummaryResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(WasteRegisterPublicApiApiModelsResponsesWasteRegisterMunicipalSewageSludgeCardV1GetKekosSummaryResponse input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.WasteCodeId == input.WasteCodeId ||
                    (this.WasteCodeId != null &&
                    this.WasteCodeId.Equals(input.WasteCodeId))
                ) && 
                (
                    this.CardNumber == input.CardNumber ||
                    (this.CardNumber != null &&
                    this.CardNumber.Equals(input.CardNumber))
                ) && 
                (
                    this.Year == input.Year ||
                    (this.Year != null &&
                    this.Year.Equals(input.Year))
                ) && 
                (
                    this.InitialMass == input.InitialMass ||
                    (this.InitialMass != null &&
                    this.InitialMass.Equals(input.InitialMass))
                ) && 
                (
                    this.InitialDryMatterMass == input.InitialDryMatterMass ||
                    (this.InitialDryMatterMass != null &&
                    this.InitialDryMatterMass.Equals(input.InitialDryMatterMass))
                ) && 
                (
                    this.AppliedSedimentsSludgeMass == input.AppliedSedimentsSludgeMass ||
                    (this.AppliedSedimentsSludgeMass != null &&
                    this.AppliedSedimentsSludgeMass.Equals(input.AppliedSedimentsSludgeMass))
                ) && 
                (
                    this.AppliedSedimentsSludgeMassDryMatter == input.AppliedSedimentsSludgeMassDryMatter ||
                    (this.AppliedSedimentsSludgeMassDryMatter != null &&
                    this.AppliedSedimentsSludgeMassDryMatter.Equals(input.AppliedSedimentsSludgeMassDryMatter))
                ) && 
                (
                    this.BatchOfGeneratedSedimentsSludgeMass == input.BatchOfGeneratedSedimentsSludgeMass ||
                    (this.BatchOfGeneratedSedimentsSludgeMass != null &&
                    this.BatchOfGeneratedSedimentsSludgeMass.Equals(input.BatchOfGeneratedSedimentsSludgeMass))
                ) && 
                (
                    this.BatchOfGeneratedSedimentsSludgeMassDryMatter == input.BatchOfGeneratedSedimentsSludgeMassDryMatter ||
                    (this.BatchOfGeneratedSedimentsSludgeMassDryMatter != null &&
                    this.BatchOfGeneratedSedimentsSludgeMassDryMatter.Equals(input.BatchOfGeneratedSedimentsSludgeMassDryMatter))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.WasteCodeId != null)
                    hashCode = hashCode * 59 + this.WasteCodeId.GetHashCode();
                if (this.CardNumber != null)
                    hashCode = hashCode * 59 + this.CardNumber.GetHashCode();
                if (this.Year != null)
                    hashCode = hashCode * 59 + this.Year.GetHashCode();
                if (this.InitialMass != null)
                    hashCode = hashCode * 59 + this.InitialMass.GetHashCode();
                if (this.InitialDryMatterMass != null)
                    hashCode = hashCode * 59 + this.InitialDryMatterMass.GetHashCode();
                if (this.AppliedSedimentsSludgeMass != null)
                    hashCode = hashCode * 59 + this.AppliedSedimentsSludgeMass.GetHashCode();
                if (this.AppliedSedimentsSludgeMassDryMatter != null)
                    hashCode = hashCode * 59 + this.AppliedSedimentsSludgeMassDryMatter.GetHashCode();
                if (this.BatchOfGeneratedSedimentsSludgeMass != null)
                    hashCode = hashCode * 59 + this.BatchOfGeneratedSedimentsSludgeMass.GetHashCode();
                if (this.BatchOfGeneratedSedimentsSludgeMassDryMatter != null)
                    hashCode = hashCode * 59 + this.BatchOfGeneratedSedimentsSludgeMassDryMatter.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
