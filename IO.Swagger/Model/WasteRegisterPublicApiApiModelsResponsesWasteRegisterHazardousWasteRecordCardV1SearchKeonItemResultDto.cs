/* 
 * v1 Waste Register public Api
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// WasteRegisterPublicApiApiModelsResponsesWasteRegisterHazardousWasteRecordCardV1SearchKeonItemResultDto
    /// </summary>
    [DataContract]
    public partial class WasteRegisterPublicApiApiModelsResponsesWasteRegisterHazardousWasteRecordCardV1SearchKeonItemResultDto :  IEquatable<WasteRegisterPublicApiApiModelsResponsesWasteRegisterHazardousWasteRecordCardV1SearchKeonItemResultDto>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="WasteRegisterPublicApiApiModelsResponsesWasteRegisterHazardousWasteRecordCardV1SearchKeonItemResultDto" /> class.
        /// </summary>
        /// <param name="keonItemId">Id wpisu keon.</param>
        /// <param name="receiveConfirmationTime">Data otrzymania potwierdzenia.</param>
        /// <param name="documentNumber">Numer dokumentu.</param>
        /// <param name="wasteMass">Masa odpadów.</param>
        /// <param name="isDealer">Działalność jako sprzedawca odpadów.</param>
        /// <param name="isBroker">Działalność jako pośrednik w obrocie odpadami.</param>
        /// <param name="createdAt">Data utworzenia.</param>
        /// <param name="createdByUserFirstNameAndLastName">Imię i nazwisko użytkownika tworzącego kartę.</param>
        /// <param name="senderCompanyName">Nazwa podmiotu przekazującego.</param>
        /// <param name="senderCompanyIdentificationNumber">senderCompanyIdentificationNumber.</param>
        /// <param name="senderCompanyAddress">senderCompanyAddress.</param>
        /// <param name="receiverCompanyIdentificationNumber">receiverCompanyIdentificationNumber.</param>
        /// <param name="receiverCompanyAddress">receiverCompanyAddress.</param>
        /// <param name="receiverCompanyName">Nazwa podmiotu przejmującego.</param>
        public WasteRegisterPublicApiApiModelsResponsesWasteRegisterHazardousWasteRecordCardV1SearchKeonItemResultDto(Guid? keonItemId = default(Guid?), DateTime? receiveConfirmationTime = default(DateTime?), string documentNumber = default(string), double? wasteMass = default(double?), bool? isDealer = default(bool?), bool? isBroker = default(bool?), DateTime? createdAt = default(DateTime?), string createdByUserFirstNameAndLastName = default(string), string senderCompanyName = default(string), string senderCompanyIdentificationNumber = default(string), string senderCompanyAddress = default(string), string receiverCompanyIdentificationNumber = default(string), string receiverCompanyAddress = default(string), string receiverCompanyName = default(string))
        {
            this.KeonItemId = keonItemId;
            this.ReceiveConfirmationTime = receiveConfirmationTime;
            this.DocumentNumber = documentNumber;
            this.WasteMass = wasteMass;
            this.IsDealer = isDealer;
            this.IsBroker = isBroker;
            this.CreatedAt = createdAt;
            this.CreatedByUserFirstNameAndLastName = createdByUserFirstNameAndLastName;
            this.SenderCompanyName = senderCompanyName;
            this.SenderCompanyIdentificationNumber = senderCompanyIdentificationNumber;
            this.SenderCompanyAddress = senderCompanyAddress;
            this.ReceiverCompanyIdentificationNumber = receiverCompanyIdentificationNumber;
            this.ReceiverCompanyAddress = receiverCompanyAddress;
            this.ReceiverCompanyName = receiverCompanyName;
        }
        
        /// <summary>
        /// Id wpisu keon
        /// </summary>
        /// <value>Id wpisu keon</value>
        [DataMember(Name="keonItemId", EmitDefaultValue=false)]
        public Guid? KeonItemId { get; set; }

        /// <summary>
        /// Data otrzymania potwierdzenia
        /// </summary>
        /// <value>Data otrzymania potwierdzenia</value>
        [DataMember(Name="receiveConfirmationTime", EmitDefaultValue=false)]
        public DateTime? ReceiveConfirmationTime { get; set; }

        /// <summary>
        /// Numer dokumentu
        /// </summary>
        /// <value>Numer dokumentu</value>
        [DataMember(Name="documentNumber", EmitDefaultValue=false)]
        public string DocumentNumber { get; set; }

        /// <summary>
        /// Masa odpadów
        /// </summary>
        /// <value>Masa odpadów</value>
        [DataMember(Name="wasteMass", EmitDefaultValue=false)]
        public double? WasteMass { get; set; }

        /// <summary>
        /// Działalność jako sprzedawca odpadów
        /// </summary>
        /// <value>Działalność jako sprzedawca odpadów</value>
        [DataMember(Name="isDealer", EmitDefaultValue=false)]
        public bool? IsDealer { get; set; }

        /// <summary>
        /// Działalność jako pośrednik w obrocie odpadami
        /// </summary>
        /// <value>Działalność jako pośrednik w obrocie odpadami</value>
        [DataMember(Name="isBroker", EmitDefaultValue=false)]
        public bool? IsBroker { get; set; }

        /// <summary>
        /// Data utworzenia
        /// </summary>
        /// <value>Data utworzenia</value>
        [DataMember(Name="createdAt", EmitDefaultValue=false)]
        public DateTime? CreatedAt { get; set; }

        /// <summary>
        /// Imię i nazwisko użytkownika tworzącego kartę
        /// </summary>
        /// <value>Imię i nazwisko użytkownika tworzącego kartę</value>
        [DataMember(Name="createdByUserFirstNameAndLastName", EmitDefaultValue=false)]
        public string CreatedByUserFirstNameAndLastName { get; set; }

        /// <summary>
        /// Nazwa podmiotu przekazującego
        /// </summary>
        /// <value>Nazwa podmiotu przekazującego</value>
        [DataMember(Name="senderCompanyName", EmitDefaultValue=false)]
        public string SenderCompanyName { get; set; }

        /// <summary>
        /// Gets or Sets SenderCompanyIdentificationNumber
        /// </summary>
        [DataMember(Name="senderCompanyIdentificationNumber", EmitDefaultValue=false)]
        public string SenderCompanyIdentificationNumber { get; set; }

        /// <summary>
        /// Gets or Sets SenderCompanyAddress
        /// </summary>
        [DataMember(Name="senderCompanyAddress", EmitDefaultValue=false)]
        public string SenderCompanyAddress { get; set; }

        /// <summary>
        /// Gets or Sets ReceiverCompanyIdentificationNumber
        /// </summary>
        [DataMember(Name="receiverCompanyIdentificationNumber", EmitDefaultValue=false)]
        public string ReceiverCompanyIdentificationNumber { get; set; }

        /// <summary>
        /// Gets or Sets ReceiverCompanyAddress
        /// </summary>
        [DataMember(Name="receiverCompanyAddress", EmitDefaultValue=false)]
        public string ReceiverCompanyAddress { get; set; }

        /// <summary>
        /// Nazwa podmiotu przejmującego
        /// </summary>
        /// <value>Nazwa podmiotu przejmującego</value>
        [DataMember(Name="receiverCompanyName", EmitDefaultValue=false)]
        public string ReceiverCompanyName { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class WasteRegisterPublicApiApiModelsResponsesWasteRegisterHazardousWasteRecordCardV1SearchKeonItemResultDto {\n");
            sb.Append("  KeonItemId: ").Append(KeonItemId).Append("\n");
            sb.Append("  ReceiveConfirmationTime: ").Append(ReceiveConfirmationTime).Append("\n");
            sb.Append("  DocumentNumber: ").Append(DocumentNumber).Append("\n");
            sb.Append("  WasteMass: ").Append(WasteMass).Append("\n");
            sb.Append("  IsDealer: ").Append(IsDealer).Append("\n");
            sb.Append("  IsBroker: ").Append(IsBroker).Append("\n");
            sb.Append("  CreatedAt: ").Append(CreatedAt).Append("\n");
            sb.Append("  CreatedByUserFirstNameAndLastName: ").Append(CreatedByUserFirstNameAndLastName).Append("\n");
            sb.Append("  SenderCompanyName: ").Append(SenderCompanyName).Append("\n");
            sb.Append("  SenderCompanyIdentificationNumber: ").Append(SenderCompanyIdentificationNumber).Append("\n");
            sb.Append("  SenderCompanyAddress: ").Append(SenderCompanyAddress).Append("\n");
            sb.Append("  ReceiverCompanyIdentificationNumber: ").Append(ReceiverCompanyIdentificationNumber).Append("\n");
            sb.Append("  ReceiverCompanyAddress: ").Append(ReceiverCompanyAddress).Append("\n");
            sb.Append("  ReceiverCompanyName: ").Append(ReceiverCompanyName).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as WasteRegisterPublicApiApiModelsResponsesWasteRegisterHazardousWasteRecordCardV1SearchKeonItemResultDto);
        }

        /// <summary>
        /// Returns true if WasteRegisterPublicApiApiModelsResponsesWasteRegisterHazardousWasteRecordCardV1SearchKeonItemResultDto instances are equal
        /// </summary>
        /// <param name="input">Instance of WasteRegisterPublicApiApiModelsResponsesWasteRegisterHazardousWasteRecordCardV1SearchKeonItemResultDto to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(WasteRegisterPublicApiApiModelsResponsesWasteRegisterHazardousWasteRecordCardV1SearchKeonItemResultDto input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.KeonItemId == input.KeonItemId ||
                    (this.KeonItemId != null &&
                    this.KeonItemId.Equals(input.KeonItemId))
                ) && 
                (
                    this.ReceiveConfirmationTime == input.ReceiveConfirmationTime ||
                    (this.ReceiveConfirmationTime != null &&
                    this.ReceiveConfirmationTime.Equals(input.ReceiveConfirmationTime))
                ) && 
                (
                    this.DocumentNumber == input.DocumentNumber ||
                    (this.DocumentNumber != null &&
                    this.DocumentNumber.Equals(input.DocumentNumber))
                ) && 
                (
                    this.WasteMass == input.WasteMass ||
                    (this.WasteMass != null &&
                    this.WasteMass.Equals(input.WasteMass))
                ) && 
                (
                    this.IsDealer == input.IsDealer ||
                    (this.IsDealer != null &&
                    this.IsDealer.Equals(input.IsDealer))
                ) && 
                (
                    this.IsBroker == input.IsBroker ||
                    (this.IsBroker != null &&
                    this.IsBroker.Equals(input.IsBroker))
                ) && 
                (
                    this.CreatedAt == input.CreatedAt ||
                    (this.CreatedAt != null &&
                    this.CreatedAt.Equals(input.CreatedAt))
                ) && 
                (
                    this.CreatedByUserFirstNameAndLastName == input.CreatedByUserFirstNameAndLastName ||
                    (this.CreatedByUserFirstNameAndLastName != null &&
                    this.CreatedByUserFirstNameAndLastName.Equals(input.CreatedByUserFirstNameAndLastName))
                ) && 
                (
                    this.SenderCompanyName == input.SenderCompanyName ||
                    (this.SenderCompanyName != null &&
                    this.SenderCompanyName.Equals(input.SenderCompanyName))
                ) && 
                (
                    this.SenderCompanyIdentificationNumber == input.SenderCompanyIdentificationNumber ||
                    (this.SenderCompanyIdentificationNumber != null &&
                    this.SenderCompanyIdentificationNumber.Equals(input.SenderCompanyIdentificationNumber))
                ) && 
                (
                    this.SenderCompanyAddress == input.SenderCompanyAddress ||
                    (this.SenderCompanyAddress != null &&
                    this.SenderCompanyAddress.Equals(input.SenderCompanyAddress))
                ) && 
                (
                    this.ReceiverCompanyIdentificationNumber == input.ReceiverCompanyIdentificationNumber ||
                    (this.ReceiverCompanyIdentificationNumber != null &&
                    this.ReceiverCompanyIdentificationNumber.Equals(input.ReceiverCompanyIdentificationNumber))
                ) && 
                (
                    this.ReceiverCompanyAddress == input.ReceiverCompanyAddress ||
                    (this.ReceiverCompanyAddress != null &&
                    this.ReceiverCompanyAddress.Equals(input.ReceiverCompanyAddress))
                ) && 
                (
                    this.ReceiverCompanyName == input.ReceiverCompanyName ||
                    (this.ReceiverCompanyName != null &&
                    this.ReceiverCompanyName.Equals(input.ReceiverCompanyName))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.KeonItemId != null)
                    hashCode = hashCode * 59 + this.KeonItemId.GetHashCode();
                if (this.ReceiveConfirmationTime != null)
                    hashCode = hashCode * 59 + this.ReceiveConfirmationTime.GetHashCode();
                if (this.DocumentNumber != null)
                    hashCode = hashCode * 59 + this.DocumentNumber.GetHashCode();
                if (this.WasteMass != null)
                    hashCode = hashCode * 59 + this.WasteMass.GetHashCode();
                if (this.IsDealer != null)
                    hashCode = hashCode * 59 + this.IsDealer.GetHashCode();
                if (this.IsBroker != null)
                    hashCode = hashCode * 59 + this.IsBroker.GetHashCode();
                if (this.CreatedAt != null)
                    hashCode = hashCode * 59 + this.CreatedAt.GetHashCode();
                if (this.CreatedByUserFirstNameAndLastName != null)
                    hashCode = hashCode * 59 + this.CreatedByUserFirstNameAndLastName.GetHashCode();
                if (this.SenderCompanyName != null)
                    hashCode = hashCode * 59 + this.SenderCompanyName.GetHashCode();
                if (this.SenderCompanyIdentificationNumber != null)
                    hashCode = hashCode * 59 + this.SenderCompanyIdentificationNumber.GetHashCode();
                if (this.SenderCompanyAddress != null)
                    hashCode = hashCode * 59 + this.SenderCompanyAddress.GetHashCode();
                if (this.ReceiverCompanyIdentificationNumber != null)
                    hashCode = hashCode * 59 + this.ReceiverCompanyIdentificationNumber.GetHashCode();
                if (this.ReceiverCompanyAddress != null)
                    hashCode = hashCode * 59 + this.ReceiverCompanyAddress.GetHashCode();
                if (this.ReceiverCompanyName != null)
                    hashCode = hashCode * 59 + this.ReceiverCompanyName.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
