/* 
 * v1 Waste Register public Api
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// WasteRegisterPublicApiApiModelsRequestsAuthV1JwtRequest
    /// </summary>
    [DataContract]
    public partial class WasteRegisterPublicApiApiModelsRequestsAuthV1JwtRequest :  IEquatable<WasteRegisterPublicApiApiModelsRequestsAuthV1JwtRequest>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="WasteRegisterPublicApiApiModelsRequestsAuthV1JwtRequest" /> class.
        /// </summary>
        /// <param name="eupId">Id miejsca prowadzenia działalności (do pobrania przy użyciu metody getEupList).</param>
        /// <param name="clientId">Id aplikacji integrującej się z systemem BDO.</param>
        /// <param name="clientSecret">Klucz autoryzacyjny (do pobrania po zalogowaniu się do aplikacji WWW).</param>
        public WasteRegisterPublicApiApiModelsRequestsAuthV1JwtRequest(string eupId = default(string), string clientId = default(string), string clientSecret = default(string))
        {
            this.EupId = eupId;
            this.ClientId = clientId;
            this.ClientSecret = clientSecret;
        }
        
        /// <summary>
        /// Id miejsca prowadzenia działalności (do pobrania przy użyciu metody getEupList)
        /// </summary>
        /// <value>Id miejsca prowadzenia działalności (do pobrania przy użyciu metody getEupList)</value>
        [DataMember(Name="eupId", EmitDefaultValue=false)]
        public string EupId { get; set; }

        /// <summary>
        /// Id aplikacji integrującej się z systemem BDO
        /// </summary>
        /// <value>Id aplikacji integrującej się z systemem BDO</value>
        [DataMember(Name="clientId", EmitDefaultValue=false)]
        public string ClientId { get; set; }

        /// <summary>
        /// Klucz autoryzacyjny (do pobrania po zalogowaniu się do aplikacji WWW)
        /// </summary>
        /// <value>Klucz autoryzacyjny (do pobrania po zalogowaniu się do aplikacji WWW)</value>
        [DataMember(Name="clientSecret", EmitDefaultValue=false)]
        public string ClientSecret { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class WasteRegisterPublicApiApiModelsRequestsAuthV1JwtRequest {\n");
            sb.Append("  EupId: ").Append(EupId).Append("\n");
            sb.Append("  ClientId: ").Append(ClientId).Append("\n");
            sb.Append("  ClientSecret: ").Append(ClientSecret).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as WasteRegisterPublicApiApiModelsRequestsAuthV1JwtRequest);
        }

        /// <summary>
        /// Returns true if WasteRegisterPublicApiApiModelsRequestsAuthV1JwtRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of WasteRegisterPublicApiApiModelsRequestsAuthV1JwtRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(WasteRegisterPublicApiApiModelsRequestsAuthV1JwtRequest input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.EupId == input.EupId ||
                    (this.EupId != null &&
                    this.EupId.Equals(input.EupId))
                ) && 
                (
                    this.ClientId == input.ClientId ||
                    (this.ClientId != null &&
                    this.ClientId.Equals(input.ClientId))
                ) && 
                (
                    this.ClientSecret == input.ClientSecret ||
                    (this.ClientSecret != null &&
                    this.ClientSecret.Equals(input.ClientSecret))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.EupId != null)
                    hashCode = hashCode * 59 + this.EupId.GetHashCode();
                if (this.ClientId != null)
                    hashCode = hashCode * 59 + this.ClientId.GetHashCode();
                if (this.ClientSecret != null)
                    hashCode = hashCode * 59 + this.ClientSecret.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
