/* 
 * v1 Waste Register public Api
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// WasteRegisterPublicApiApiModelsResponsesWasteRegisterWreckWasteRecordCardV1GetDismantlePrintingPageResponse
    /// </summary>
    [DataContract]
    public partial class WasteRegisterPublicApiApiModelsResponsesWasteRegisterWreckWasteRecordCardV1GetDismantlePrintingPageResponse :  IEquatable<WasteRegisterPublicApiApiModelsResponsesWasteRegisterWreckWasteRecordCardV1GetDismantlePrintingPageResponse>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="WasteRegisterPublicApiApiModelsResponsesWasteRegisterWreckWasteRecordCardV1GetDismantlePrintingPageResponse" /> class.
        /// </summary>
        /// <param name="cardNumber">Numer karty.</param>
        /// <param name="calendarYear">Rok kalendarzowy.</param>
        /// <param name="wasteCodeWithDescription">wasteCodeWithDescription.</param>
        /// <param name="companyName">Nazwa lub imię i nazwisko.</param>
        /// <param name="companyAdress">Adres.</param>
        /// <param name="companyIdentificationNumber">Numer rejestrowy.</param>
        /// <param name="companyNip">NIP.</param>
        /// <param name="companyNipEu">NIP europejski.</param>
        /// <param name="eupName">Nazwa miejsca prowadzenia działalności.</param>
        /// <param name="eupIdentificationNumber">Numer miejsca prowadzenia działalności.</param>
        /// <param name="eupAdress">Adres miejsca prowadzenia działalności.</param>
        /// <param name="receivedFromDismantleStationVehiclesMassSum">receivedFromDismantleStationVehiclesMassSum.</param>
        /// <param name="receivedFromDismantleStationVehiclesTotalCount">receivedFromDismantleStationVehiclesTotalCount.</param>
        /// <param name="receivedVehiclesMassSum">receivedVehiclesMassSum.</param>
        /// <param name="receivedVehiclesTotalCount">receivedVehiclesTotalCount.</param>
        /// <param name="producedWasteMassSum">producedWasteMassSum.</param>
        /// <param name="producedReusablePartsMassSum">producedReusablePartsMassSum.</param>
        /// <param name="processedRecycledWasteMassSum">processedRecycledWasteMassSum.</param>
        /// <param name="processedEnergyRecoveryWasteMassSum">processedEnergyRecoveryWasteMassSum.</param>
        /// <param name="processedOtherThanRecyclingWasteMassSum">processedOtherThanRecyclingWasteMassSum.</param>
        /// <param name="transferredAbroadWasteMassSum">transferredAbroadWasteMassSum.</param>
        /// <param name="transferredDisposedWasteMassSum">transferredDisposedWasteMassSum.</param>
        /// <param name="transferredEnergyRecoveryWasteMassSum">transferredEnergyRecoveryWasteMassSum.</param>
        /// <param name="transferredOtherThanRecycledWasteMassSum">transferredOtherThanRecycledWasteMassSum.</param>
        /// <param name="transferredRecycledWasteMassSum">transferredRecycledWasteMassSum.</param>
        /// <param name="transferredShreddedWasteMassSum">transferredShreddedWasteMassSum.</param>
        /// <param name="wasteCodeExtended">Kod ex.</param>
        /// <param name="wasteCodeExtendedDescription">Rodzaj odpadu ex.</param>
        /// <param name="hazardousWasteReclassification">Zmiana statusu odpadów niebezpiecznych na odpady inne niż niebezpieczne.</param>
        /// <param name="hazardousWasteReclassificationDescription">Rodzaj odpadu.</param>
        /// <param name="listItems">listItems.</param>
        public WasteRegisterPublicApiApiModelsResponsesWasteRegisterWreckWasteRecordCardV1GetDismantlePrintingPageResponse(string cardNumber = default(string), string calendarYear = default(string), string wasteCodeWithDescription = default(string), string companyName = default(string), string companyAdress = default(string), string companyIdentificationNumber = default(string), string companyNip = default(string), string companyNipEu = default(string), string eupName = default(string), string eupIdentificationNumber = default(string), string eupAdress = default(string), double? receivedFromDismantleStationVehiclesMassSum = default(double?), int? receivedFromDismantleStationVehiclesTotalCount = default(int?), double? receivedVehiclesMassSum = default(double?), int? receivedVehiclesTotalCount = default(int?), double? producedWasteMassSum = default(double?), double? producedReusablePartsMassSum = default(double?), double? processedRecycledWasteMassSum = default(double?), double? processedEnergyRecoveryWasteMassSum = default(double?), double? processedOtherThanRecyclingWasteMassSum = default(double?), double? transferredAbroadWasteMassSum = default(double?), double? transferredDisposedWasteMassSum = default(double?), double? transferredEnergyRecoveryWasteMassSum = default(double?), double? transferredOtherThanRecycledWasteMassSum = default(double?), double? transferredRecycledWasteMassSum = default(double?), double? transferredShreddedWasteMassSum = default(double?), bool? wasteCodeExtended = default(bool?), string wasteCodeExtendedDescription = default(string), bool? hazardousWasteReclassification = default(bool?), string hazardousWasteReclassificationDescription = default(string), List<WasteRegisterPublicApiApiModelsResponsesWasteRegisterWreckWasteRecordCardV1DismantlePrintingPageListItem> listItems = default(List<WasteRegisterPublicApiApiModelsResponsesWasteRegisterWreckWasteRecordCardV1DismantlePrintingPageListItem>))
        {
            this.CardNumber = cardNumber;
            this.CalendarYear = calendarYear;
            this.WasteCodeWithDescription = wasteCodeWithDescription;
            this.CompanyName = companyName;
            this.CompanyAdress = companyAdress;
            this.CompanyIdentificationNumber = companyIdentificationNumber;
            this.CompanyNip = companyNip;
            this.CompanyNipEu = companyNipEu;
            this.EupName = eupName;
            this.EupIdentificationNumber = eupIdentificationNumber;
            this.EupAdress = eupAdress;
            this.ReceivedFromDismantleStationVehiclesMassSum = receivedFromDismantleStationVehiclesMassSum;
            this.ReceivedFromDismantleStationVehiclesTotalCount = receivedFromDismantleStationVehiclesTotalCount;
            this.ReceivedVehiclesMassSum = receivedVehiclesMassSum;
            this.ReceivedVehiclesTotalCount = receivedVehiclesTotalCount;
            this.ProducedWasteMassSum = producedWasteMassSum;
            this.ProducedReusablePartsMassSum = producedReusablePartsMassSum;
            this.ProcessedRecycledWasteMassSum = processedRecycledWasteMassSum;
            this.ProcessedEnergyRecoveryWasteMassSum = processedEnergyRecoveryWasteMassSum;
            this.ProcessedOtherThanRecyclingWasteMassSum = processedOtherThanRecyclingWasteMassSum;
            this.TransferredAbroadWasteMassSum = transferredAbroadWasteMassSum;
            this.TransferredDisposedWasteMassSum = transferredDisposedWasteMassSum;
            this.TransferredEnergyRecoveryWasteMassSum = transferredEnergyRecoveryWasteMassSum;
            this.TransferredOtherThanRecycledWasteMassSum = transferredOtherThanRecycledWasteMassSum;
            this.TransferredRecycledWasteMassSum = transferredRecycledWasteMassSum;
            this.TransferredShreddedWasteMassSum = transferredShreddedWasteMassSum;
            this.WasteCodeExtended = wasteCodeExtended;
            this.WasteCodeExtendedDescription = wasteCodeExtendedDescription;
            this.HazardousWasteReclassification = hazardousWasteReclassification;
            this.HazardousWasteReclassificationDescription = hazardousWasteReclassificationDescription;
            this.ListItems = listItems;
        }
        
        /// <summary>
        /// Numer karty
        /// </summary>
        /// <value>Numer karty</value>
        [DataMember(Name="cardNumber", EmitDefaultValue=false)]
        public string CardNumber { get; set; }

        /// <summary>
        /// Rok kalendarzowy
        /// </summary>
        /// <value>Rok kalendarzowy</value>
        [DataMember(Name="calendarYear", EmitDefaultValue=false)]
        public string CalendarYear { get; set; }

        /// <summary>
        /// Gets or Sets WasteCodeWithDescription
        /// </summary>
        [DataMember(Name="wasteCodeWithDescription", EmitDefaultValue=false)]
        public string WasteCodeWithDescription { get; set; }

        /// <summary>
        /// Nazwa lub imię i nazwisko
        /// </summary>
        /// <value>Nazwa lub imię i nazwisko</value>
        [DataMember(Name="companyName", EmitDefaultValue=false)]
        public string CompanyName { get; set; }

        /// <summary>
        /// Adres
        /// </summary>
        /// <value>Adres</value>
        [DataMember(Name="companyAdress", EmitDefaultValue=false)]
        public string CompanyAdress { get; set; }

        /// <summary>
        /// Numer rejestrowy
        /// </summary>
        /// <value>Numer rejestrowy</value>
        [DataMember(Name="companyIdentificationNumber", EmitDefaultValue=false)]
        public string CompanyIdentificationNumber { get; set; }

        /// <summary>
        /// NIP
        /// </summary>
        /// <value>NIP</value>
        [DataMember(Name="companyNip", EmitDefaultValue=false)]
        public string CompanyNip { get; set; }

        /// <summary>
        /// NIP europejski
        /// </summary>
        /// <value>NIP europejski</value>
        [DataMember(Name="companyNipEu", EmitDefaultValue=false)]
        public string CompanyNipEu { get; set; }

        /// <summary>
        /// Nazwa miejsca prowadzenia działalności
        /// </summary>
        /// <value>Nazwa miejsca prowadzenia działalności</value>
        [DataMember(Name="eupName", EmitDefaultValue=false)]
        public string EupName { get; set; }

        /// <summary>
        /// Numer miejsca prowadzenia działalności
        /// </summary>
        /// <value>Numer miejsca prowadzenia działalności</value>
        [DataMember(Name="eupIdentificationNumber", EmitDefaultValue=false)]
        public string EupIdentificationNumber { get; set; }

        /// <summary>
        /// Adres miejsca prowadzenia działalności
        /// </summary>
        /// <value>Adres miejsca prowadzenia działalności</value>
        [DataMember(Name="eupAdress", EmitDefaultValue=false)]
        public string EupAdress { get; set; }

        /// <summary>
        /// Gets or Sets ReceivedFromDismantleStationVehiclesMassSum
        /// </summary>
        [DataMember(Name="receivedFromDismantleStationVehiclesMassSum", EmitDefaultValue=false)]
        public double? ReceivedFromDismantleStationVehiclesMassSum { get; set; }

        /// <summary>
        /// Gets or Sets ReceivedFromDismantleStationVehiclesTotalCount
        /// </summary>
        [DataMember(Name="receivedFromDismantleStationVehiclesTotalCount", EmitDefaultValue=false)]
        public int? ReceivedFromDismantleStationVehiclesTotalCount { get; set; }

        /// <summary>
        /// Gets or Sets ReceivedVehiclesMassSum
        /// </summary>
        [DataMember(Name="receivedVehiclesMassSum", EmitDefaultValue=false)]
        public double? ReceivedVehiclesMassSum { get; set; }

        /// <summary>
        /// Gets or Sets ReceivedVehiclesTotalCount
        /// </summary>
        [DataMember(Name="receivedVehiclesTotalCount", EmitDefaultValue=false)]
        public int? ReceivedVehiclesTotalCount { get; set; }

        /// <summary>
        /// Gets or Sets ProducedWasteMassSum
        /// </summary>
        [DataMember(Name="producedWasteMassSum", EmitDefaultValue=false)]
        public double? ProducedWasteMassSum { get; set; }

        /// <summary>
        /// Gets or Sets ProducedReusablePartsMassSum
        /// </summary>
        [DataMember(Name="producedReusablePartsMassSum", EmitDefaultValue=false)]
        public double? ProducedReusablePartsMassSum { get; set; }

        /// <summary>
        /// Gets or Sets ProcessedRecycledWasteMassSum
        /// </summary>
        [DataMember(Name="processedRecycledWasteMassSum", EmitDefaultValue=false)]
        public double? ProcessedRecycledWasteMassSum { get; set; }

        /// <summary>
        /// Gets or Sets ProcessedEnergyRecoveryWasteMassSum
        /// </summary>
        [DataMember(Name="processedEnergyRecoveryWasteMassSum", EmitDefaultValue=false)]
        public double? ProcessedEnergyRecoveryWasteMassSum { get; set; }

        /// <summary>
        /// Gets or Sets ProcessedOtherThanRecyclingWasteMassSum
        /// </summary>
        [DataMember(Name="processedOtherThanRecyclingWasteMassSum", EmitDefaultValue=false)]
        public double? ProcessedOtherThanRecyclingWasteMassSum { get; set; }

        /// <summary>
        /// Gets or Sets TransferredAbroadWasteMassSum
        /// </summary>
        [DataMember(Name="transferredAbroadWasteMassSum", EmitDefaultValue=false)]
        public double? TransferredAbroadWasteMassSum { get; set; }

        /// <summary>
        /// Gets or Sets TransferredDisposedWasteMassSum
        /// </summary>
        [DataMember(Name="transferredDisposedWasteMassSum", EmitDefaultValue=false)]
        public double? TransferredDisposedWasteMassSum { get; set; }

        /// <summary>
        /// Gets or Sets TransferredEnergyRecoveryWasteMassSum
        /// </summary>
        [DataMember(Name="transferredEnergyRecoveryWasteMassSum", EmitDefaultValue=false)]
        public double? TransferredEnergyRecoveryWasteMassSum { get; set; }

        /// <summary>
        /// Gets or Sets TransferredOtherThanRecycledWasteMassSum
        /// </summary>
        [DataMember(Name="transferredOtherThanRecycledWasteMassSum", EmitDefaultValue=false)]
        public double? TransferredOtherThanRecycledWasteMassSum { get; set; }

        /// <summary>
        /// Gets or Sets TransferredRecycledWasteMassSum
        /// </summary>
        [DataMember(Name="transferredRecycledWasteMassSum", EmitDefaultValue=false)]
        public double? TransferredRecycledWasteMassSum { get; set; }

        /// <summary>
        /// Gets or Sets TransferredShreddedWasteMassSum
        /// </summary>
        [DataMember(Name="transferredShreddedWasteMassSum", EmitDefaultValue=false)]
        public double? TransferredShreddedWasteMassSum { get; set; }

        /// <summary>
        /// Kod ex
        /// </summary>
        /// <value>Kod ex</value>
        [DataMember(Name="wasteCodeExtended", EmitDefaultValue=false)]
        public bool? WasteCodeExtended { get; set; }

        /// <summary>
        /// Rodzaj odpadu ex
        /// </summary>
        /// <value>Rodzaj odpadu ex</value>
        [DataMember(Name="wasteCodeExtendedDescription", EmitDefaultValue=false)]
        public string WasteCodeExtendedDescription { get; set; }

        /// <summary>
        /// Zmiana statusu odpadów niebezpiecznych na odpady inne niż niebezpieczne
        /// </summary>
        /// <value>Zmiana statusu odpadów niebezpiecznych na odpady inne niż niebezpieczne</value>
        [DataMember(Name="hazardousWasteReclassification", EmitDefaultValue=false)]
        public bool? HazardousWasteReclassification { get; set; }

        /// <summary>
        /// Rodzaj odpadu
        /// </summary>
        /// <value>Rodzaj odpadu</value>
        [DataMember(Name="hazardousWasteReclassificationDescription", EmitDefaultValue=false)]
        public string HazardousWasteReclassificationDescription { get; set; }

        /// <summary>
        /// Gets or Sets ListItems
        /// </summary>
        [DataMember(Name="listItems", EmitDefaultValue=false)]
        public List<WasteRegisterPublicApiApiModelsResponsesWasteRegisterWreckWasteRecordCardV1DismantlePrintingPageListItem> ListItems { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class WasteRegisterPublicApiApiModelsResponsesWasteRegisterWreckWasteRecordCardV1GetDismantlePrintingPageResponse {\n");
            sb.Append("  CardNumber: ").Append(CardNumber).Append("\n");
            sb.Append("  CalendarYear: ").Append(CalendarYear).Append("\n");
            sb.Append("  WasteCodeWithDescription: ").Append(WasteCodeWithDescription).Append("\n");
            sb.Append("  CompanyName: ").Append(CompanyName).Append("\n");
            sb.Append("  CompanyAdress: ").Append(CompanyAdress).Append("\n");
            sb.Append("  CompanyIdentificationNumber: ").Append(CompanyIdentificationNumber).Append("\n");
            sb.Append("  CompanyNip: ").Append(CompanyNip).Append("\n");
            sb.Append("  CompanyNipEu: ").Append(CompanyNipEu).Append("\n");
            sb.Append("  EupName: ").Append(EupName).Append("\n");
            sb.Append("  EupIdentificationNumber: ").Append(EupIdentificationNumber).Append("\n");
            sb.Append("  EupAdress: ").Append(EupAdress).Append("\n");
            sb.Append("  ReceivedFromDismantleStationVehiclesMassSum: ").Append(ReceivedFromDismantleStationVehiclesMassSum).Append("\n");
            sb.Append("  ReceivedFromDismantleStationVehiclesTotalCount: ").Append(ReceivedFromDismantleStationVehiclesTotalCount).Append("\n");
            sb.Append("  ReceivedVehiclesMassSum: ").Append(ReceivedVehiclesMassSum).Append("\n");
            sb.Append("  ReceivedVehiclesTotalCount: ").Append(ReceivedVehiclesTotalCount).Append("\n");
            sb.Append("  ProducedWasteMassSum: ").Append(ProducedWasteMassSum).Append("\n");
            sb.Append("  ProducedReusablePartsMassSum: ").Append(ProducedReusablePartsMassSum).Append("\n");
            sb.Append("  ProcessedRecycledWasteMassSum: ").Append(ProcessedRecycledWasteMassSum).Append("\n");
            sb.Append("  ProcessedEnergyRecoveryWasteMassSum: ").Append(ProcessedEnergyRecoveryWasteMassSum).Append("\n");
            sb.Append("  ProcessedOtherThanRecyclingWasteMassSum: ").Append(ProcessedOtherThanRecyclingWasteMassSum).Append("\n");
            sb.Append("  TransferredAbroadWasteMassSum: ").Append(TransferredAbroadWasteMassSum).Append("\n");
            sb.Append("  TransferredDisposedWasteMassSum: ").Append(TransferredDisposedWasteMassSum).Append("\n");
            sb.Append("  TransferredEnergyRecoveryWasteMassSum: ").Append(TransferredEnergyRecoveryWasteMassSum).Append("\n");
            sb.Append("  TransferredOtherThanRecycledWasteMassSum: ").Append(TransferredOtherThanRecycledWasteMassSum).Append("\n");
            sb.Append("  TransferredRecycledWasteMassSum: ").Append(TransferredRecycledWasteMassSum).Append("\n");
            sb.Append("  TransferredShreddedWasteMassSum: ").Append(TransferredShreddedWasteMassSum).Append("\n");
            sb.Append("  WasteCodeExtended: ").Append(WasteCodeExtended).Append("\n");
            sb.Append("  WasteCodeExtendedDescription: ").Append(WasteCodeExtendedDescription).Append("\n");
            sb.Append("  HazardousWasteReclassification: ").Append(HazardousWasteReclassification).Append("\n");
            sb.Append("  HazardousWasteReclassificationDescription: ").Append(HazardousWasteReclassificationDescription).Append("\n");
            sb.Append("  ListItems: ").Append(ListItems).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as WasteRegisterPublicApiApiModelsResponsesWasteRegisterWreckWasteRecordCardV1GetDismantlePrintingPageResponse);
        }

        /// <summary>
        /// Returns true if WasteRegisterPublicApiApiModelsResponsesWasteRegisterWreckWasteRecordCardV1GetDismantlePrintingPageResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of WasteRegisterPublicApiApiModelsResponsesWasteRegisterWreckWasteRecordCardV1GetDismantlePrintingPageResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(WasteRegisterPublicApiApiModelsResponsesWasteRegisterWreckWasteRecordCardV1GetDismantlePrintingPageResponse input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.CardNumber == input.CardNumber ||
                    (this.CardNumber != null &&
                    this.CardNumber.Equals(input.CardNumber))
                ) && 
                (
                    this.CalendarYear == input.CalendarYear ||
                    (this.CalendarYear != null &&
                    this.CalendarYear.Equals(input.CalendarYear))
                ) && 
                (
                    this.WasteCodeWithDescription == input.WasteCodeWithDescription ||
                    (this.WasteCodeWithDescription != null &&
                    this.WasteCodeWithDescription.Equals(input.WasteCodeWithDescription))
                ) && 
                (
                    this.CompanyName == input.CompanyName ||
                    (this.CompanyName != null &&
                    this.CompanyName.Equals(input.CompanyName))
                ) && 
                (
                    this.CompanyAdress == input.CompanyAdress ||
                    (this.CompanyAdress != null &&
                    this.CompanyAdress.Equals(input.CompanyAdress))
                ) && 
                (
                    this.CompanyIdentificationNumber == input.CompanyIdentificationNumber ||
                    (this.CompanyIdentificationNumber != null &&
                    this.CompanyIdentificationNumber.Equals(input.CompanyIdentificationNumber))
                ) && 
                (
                    this.CompanyNip == input.CompanyNip ||
                    (this.CompanyNip != null &&
                    this.CompanyNip.Equals(input.CompanyNip))
                ) && 
                (
                    this.CompanyNipEu == input.CompanyNipEu ||
                    (this.CompanyNipEu != null &&
                    this.CompanyNipEu.Equals(input.CompanyNipEu))
                ) && 
                (
                    this.EupName == input.EupName ||
                    (this.EupName != null &&
                    this.EupName.Equals(input.EupName))
                ) && 
                (
                    this.EupIdentificationNumber == input.EupIdentificationNumber ||
                    (this.EupIdentificationNumber != null &&
                    this.EupIdentificationNumber.Equals(input.EupIdentificationNumber))
                ) && 
                (
                    this.EupAdress == input.EupAdress ||
                    (this.EupAdress != null &&
                    this.EupAdress.Equals(input.EupAdress))
                ) && 
                (
                    this.ReceivedFromDismantleStationVehiclesMassSum == input.ReceivedFromDismantleStationVehiclesMassSum ||
                    (this.ReceivedFromDismantleStationVehiclesMassSum != null &&
                    this.ReceivedFromDismantleStationVehiclesMassSum.Equals(input.ReceivedFromDismantleStationVehiclesMassSum))
                ) && 
                (
                    this.ReceivedFromDismantleStationVehiclesTotalCount == input.ReceivedFromDismantleStationVehiclesTotalCount ||
                    (this.ReceivedFromDismantleStationVehiclesTotalCount != null &&
                    this.ReceivedFromDismantleStationVehiclesTotalCount.Equals(input.ReceivedFromDismantleStationVehiclesTotalCount))
                ) && 
                (
                    this.ReceivedVehiclesMassSum == input.ReceivedVehiclesMassSum ||
                    (this.ReceivedVehiclesMassSum != null &&
                    this.ReceivedVehiclesMassSum.Equals(input.ReceivedVehiclesMassSum))
                ) && 
                (
                    this.ReceivedVehiclesTotalCount == input.ReceivedVehiclesTotalCount ||
                    (this.ReceivedVehiclesTotalCount != null &&
                    this.ReceivedVehiclesTotalCount.Equals(input.ReceivedVehiclesTotalCount))
                ) && 
                (
                    this.ProducedWasteMassSum == input.ProducedWasteMassSum ||
                    (this.ProducedWasteMassSum != null &&
                    this.ProducedWasteMassSum.Equals(input.ProducedWasteMassSum))
                ) && 
                (
                    this.ProducedReusablePartsMassSum == input.ProducedReusablePartsMassSum ||
                    (this.ProducedReusablePartsMassSum != null &&
                    this.ProducedReusablePartsMassSum.Equals(input.ProducedReusablePartsMassSum))
                ) && 
                (
                    this.ProcessedRecycledWasteMassSum == input.ProcessedRecycledWasteMassSum ||
                    (this.ProcessedRecycledWasteMassSum != null &&
                    this.ProcessedRecycledWasteMassSum.Equals(input.ProcessedRecycledWasteMassSum))
                ) && 
                (
                    this.ProcessedEnergyRecoveryWasteMassSum == input.ProcessedEnergyRecoveryWasteMassSum ||
                    (this.ProcessedEnergyRecoveryWasteMassSum != null &&
                    this.ProcessedEnergyRecoveryWasteMassSum.Equals(input.ProcessedEnergyRecoveryWasteMassSum))
                ) && 
                (
                    this.ProcessedOtherThanRecyclingWasteMassSum == input.ProcessedOtherThanRecyclingWasteMassSum ||
                    (this.ProcessedOtherThanRecyclingWasteMassSum != null &&
                    this.ProcessedOtherThanRecyclingWasteMassSum.Equals(input.ProcessedOtherThanRecyclingWasteMassSum))
                ) && 
                (
                    this.TransferredAbroadWasteMassSum == input.TransferredAbroadWasteMassSum ||
                    (this.TransferredAbroadWasteMassSum != null &&
                    this.TransferredAbroadWasteMassSum.Equals(input.TransferredAbroadWasteMassSum))
                ) && 
                (
                    this.TransferredDisposedWasteMassSum == input.TransferredDisposedWasteMassSum ||
                    (this.TransferredDisposedWasteMassSum != null &&
                    this.TransferredDisposedWasteMassSum.Equals(input.TransferredDisposedWasteMassSum))
                ) && 
                (
                    this.TransferredEnergyRecoveryWasteMassSum == input.TransferredEnergyRecoveryWasteMassSum ||
                    (this.TransferredEnergyRecoveryWasteMassSum != null &&
                    this.TransferredEnergyRecoveryWasteMassSum.Equals(input.TransferredEnergyRecoveryWasteMassSum))
                ) && 
                (
                    this.TransferredOtherThanRecycledWasteMassSum == input.TransferredOtherThanRecycledWasteMassSum ||
                    (this.TransferredOtherThanRecycledWasteMassSum != null &&
                    this.TransferredOtherThanRecycledWasteMassSum.Equals(input.TransferredOtherThanRecycledWasteMassSum))
                ) && 
                (
                    this.TransferredRecycledWasteMassSum == input.TransferredRecycledWasteMassSum ||
                    (this.TransferredRecycledWasteMassSum != null &&
                    this.TransferredRecycledWasteMassSum.Equals(input.TransferredRecycledWasteMassSum))
                ) && 
                (
                    this.TransferredShreddedWasteMassSum == input.TransferredShreddedWasteMassSum ||
                    (this.TransferredShreddedWasteMassSum != null &&
                    this.TransferredShreddedWasteMassSum.Equals(input.TransferredShreddedWasteMassSum))
                ) && 
                (
                    this.WasteCodeExtended == input.WasteCodeExtended ||
                    (this.WasteCodeExtended != null &&
                    this.WasteCodeExtended.Equals(input.WasteCodeExtended))
                ) && 
                (
                    this.WasteCodeExtendedDescription == input.WasteCodeExtendedDescription ||
                    (this.WasteCodeExtendedDescription != null &&
                    this.WasteCodeExtendedDescription.Equals(input.WasteCodeExtendedDescription))
                ) && 
                (
                    this.HazardousWasteReclassification == input.HazardousWasteReclassification ||
                    (this.HazardousWasteReclassification != null &&
                    this.HazardousWasteReclassification.Equals(input.HazardousWasteReclassification))
                ) && 
                (
                    this.HazardousWasteReclassificationDescription == input.HazardousWasteReclassificationDescription ||
                    (this.HazardousWasteReclassificationDescription != null &&
                    this.HazardousWasteReclassificationDescription.Equals(input.HazardousWasteReclassificationDescription))
                ) && 
                (
                    this.ListItems == input.ListItems ||
                    this.ListItems != null &&
                    this.ListItems.SequenceEqual(input.ListItems)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.CardNumber != null)
                    hashCode = hashCode * 59 + this.CardNumber.GetHashCode();
                if (this.CalendarYear != null)
                    hashCode = hashCode * 59 + this.CalendarYear.GetHashCode();
                if (this.WasteCodeWithDescription != null)
                    hashCode = hashCode * 59 + this.WasteCodeWithDescription.GetHashCode();
                if (this.CompanyName != null)
                    hashCode = hashCode * 59 + this.CompanyName.GetHashCode();
                if (this.CompanyAdress != null)
                    hashCode = hashCode * 59 + this.CompanyAdress.GetHashCode();
                if (this.CompanyIdentificationNumber != null)
                    hashCode = hashCode * 59 + this.CompanyIdentificationNumber.GetHashCode();
                if (this.CompanyNip != null)
                    hashCode = hashCode * 59 + this.CompanyNip.GetHashCode();
                if (this.CompanyNipEu != null)
                    hashCode = hashCode * 59 + this.CompanyNipEu.GetHashCode();
                if (this.EupName != null)
                    hashCode = hashCode * 59 + this.EupName.GetHashCode();
                if (this.EupIdentificationNumber != null)
                    hashCode = hashCode * 59 + this.EupIdentificationNumber.GetHashCode();
                if (this.EupAdress != null)
                    hashCode = hashCode * 59 + this.EupAdress.GetHashCode();
                if (this.ReceivedFromDismantleStationVehiclesMassSum != null)
                    hashCode = hashCode * 59 + this.ReceivedFromDismantleStationVehiclesMassSum.GetHashCode();
                if (this.ReceivedFromDismantleStationVehiclesTotalCount != null)
                    hashCode = hashCode * 59 + this.ReceivedFromDismantleStationVehiclesTotalCount.GetHashCode();
                if (this.ReceivedVehiclesMassSum != null)
                    hashCode = hashCode * 59 + this.ReceivedVehiclesMassSum.GetHashCode();
                if (this.ReceivedVehiclesTotalCount != null)
                    hashCode = hashCode * 59 + this.ReceivedVehiclesTotalCount.GetHashCode();
                if (this.ProducedWasteMassSum != null)
                    hashCode = hashCode * 59 + this.ProducedWasteMassSum.GetHashCode();
                if (this.ProducedReusablePartsMassSum != null)
                    hashCode = hashCode * 59 + this.ProducedReusablePartsMassSum.GetHashCode();
                if (this.ProcessedRecycledWasteMassSum != null)
                    hashCode = hashCode * 59 + this.ProcessedRecycledWasteMassSum.GetHashCode();
                if (this.ProcessedEnergyRecoveryWasteMassSum != null)
                    hashCode = hashCode * 59 + this.ProcessedEnergyRecoveryWasteMassSum.GetHashCode();
                if (this.ProcessedOtherThanRecyclingWasteMassSum != null)
                    hashCode = hashCode * 59 + this.ProcessedOtherThanRecyclingWasteMassSum.GetHashCode();
                if (this.TransferredAbroadWasteMassSum != null)
                    hashCode = hashCode * 59 + this.TransferredAbroadWasteMassSum.GetHashCode();
                if (this.TransferredDisposedWasteMassSum != null)
                    hashCode = hashCode * 59 + this.TransferredDisposedWasteMassSum.GetHashCode();
                if (this.TransferredEnergyRecoveryWasteMassSum != null)
                    hashCode = hashCode * 59 + this.TransferredEnergyRecoveryWasteMassSum.GetHashCode();
                if (this.TransferredOtherThanRecycledWasteMassSum != null)
                    hashCode = hashCode * 59 + this.TransferredOtherThanRecycledWasteMassSum.GetHashCode();
                if (this.TransferredRecycledWasteMassSum != null)
                    hashCode = hashCode * 59 + this.TransferredRecycledWasteMassSum.GetHashCode();
                if (this.TransferredShreddedWasteMassSum != null)
                    hashCode = hashCode * 59 + this.TransferredShreddedWasteMassSum.GetHashCode();
                if (this.WasteCodeExtended != null)
                    hashCode = hashCode * 59 + this.WasteCodeExtended.GetHashCode();
                if (this.WasteCodeExtendedDescription != null)
                    hashCode = hashCode * 59 + this.WasteCodeExtendedDescription.GetHashCode();
                if (this.HazardousWasteReclassification != null)
                    hashCode = hashCode * 59 + this.HazardousWasteReclassification.GetHashCode();
                if (this.HazardousWasteReclassificationDescription != null)
                    hashCode = hashCode * 59 + this.HazardousWasteReclassificationDescription.GetHashCode();
                if (this.ListItems != null)
                    hashCode = hashCode * 59 + this.ListItems.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
