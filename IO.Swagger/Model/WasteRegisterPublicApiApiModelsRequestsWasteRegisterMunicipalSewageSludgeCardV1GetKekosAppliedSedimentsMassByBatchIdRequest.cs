/* 
 * v1 Waste Register public Api
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// WasteRegisterPublicApiApiModelsRequestsWasteRegisterMunicipalSewageSludgeCardV1GetKekosAppliedSedimentsMassByBatchIdRequest
    /// </summary>
    [DataContract]
    public partial class WasteRegisterPublicApiApiModelsRequestsWasteRegisterMunicipalSewageSludgeCardV1GetKekosAppliedSedimentsMassByBatchIdRequest :  IEquatable<WasteRegisterPublicApiApiModelsRequestsWasteRegisterMunicipalSewageSludgeCardV1GetKekosAppliedSedimentsMassByBatchIdRequest>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="WasteRegisterPublicApiApiModelsRequestsWasteRegisterMunicipalSewageSludgeCardV1GetKekosAppliedSedimentsMassByBatchIdRequest" /> class.
        /// </summary>
        /// <param name="kekosId">Id karty ewidencji komunalnych osadów ściekowych.</param>
        /// <param name="batchId">batchId.</param>
        /// <param name="editedKekosAppliedSedimentId">editedKekosAppliedSedimentId.</param>
        public WasteRegisterPublicApiApiModelsRequestsWasteRegisterMunicipalSewageSludgeCardV1GetKekosAppliedSedimentsMassByBatchIdRequest(Guid? kekosId = default(Guid?), Guid? batchId = default(Guid?), Guid? editedKekosAppliedSedimentId = default(Guid?))
        {
            this.KekosId = kekosId;
            this.BatchId = batchId;
            this.EditedKekosAppliedSedimentId = editedKekosAppliedSedimentId;
        }
        
        /// <summary>
        /// Id karty ewidencji komunalnych osadów ściekowych
        /// </summary>
        /// <value>Id karty ewidencji komunalnych osadów ściekowych</value>
        [DataMember(Name="kekosId", EmitDefaultValue=false)]
        public Guid? KekosId { get; set; }

        /// <summary>
        /// Gets or Sets BatchId
        /// </summary>
        [DataMember(Name="batchId", EmitDefaultValue=false)]
        public Guid? BatchId { get; set; }

        /// <summary>
        /// Gets or Sets EditedKekosAppliedSedimentId
        /// </summary>
        [DataMember(Name="editedKekosAppliedSedimentId", EmitDefaultValue=false)]
        public Guid? EditedKekosAppliedSedimentId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class WasteRegisterPublicApiApiModelsRequestsWasteRegisterMunicipalSewageSludgeCardV1GetKekosAppliedSedimentsMassByBatchIdRequest {\n");
            sb.Append("  KekosId: ").Append(KekosId).Append("\n");
            sb.Append("  BatchId: ").Append(BatchId).Append("\n");
            sb.Append("  EditedKekosAppliedSedimentId: ").Append(EditedKekosAppliedSedimentId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as WasteRegisterPublicApiApiModelsRequestsWasteRegisterMunicipalSewageSludgeCardV1GetKekosAppliedSedimentsMassByBatchIdRequest);
        }

        /// <summary>
        /// Returns true if WasteRegisterPublicApiApiModelsRequestsWasteRegisterMunicipalSewageSludgeCardV1GetKekosAppliedSedimentsMassByBatchIdRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of WasteRegisterPublicApiApiModelsRequestsWasteRegisterMunicipalSewageSludgeCardV1GetKekosAppliedSedimentsMassByBatchIdRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(WasteRegisterPublicApiApiModelsRequestsWasteRegisterMunicipalSewageSludgeCardV1GetKekosAppliedSedimentsMassByBatchIdRequest input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.KekosId == input.KekosId ||
                    (this.KekosId != null &&
                    this.KekosId.Equals(input.KekosId))
                ) && 
                (
                    this.BatchId == input.BatchId ||
                    (this.BatchId != null &&
                    this.BatchId.Equals(input.BatchId))
                ) && 
                (
                    this.EditedKekosAppliedSedimentId == input.EditedKekosAppliedSedimentId ||
                    (this.EditedKekosAppliedSedimentId != null &&
                    this.EditedKekosAppliedSedimentId.Equals(input.EditedKekosAppliedSedimentId))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.KekosId != null)
                    hashCode = hashCode * 59 + this.KekosId.GetHashCode();
                if (this.BatchId != null)
                    hashCode = hashCode * 59 + this.BatchId.GetHashCode();
                if (this.EditedKekosAppliedSedimentId != null)
                    hashCode = hashCode * 59 + this.EditedKekosAppliedSedimentId.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
