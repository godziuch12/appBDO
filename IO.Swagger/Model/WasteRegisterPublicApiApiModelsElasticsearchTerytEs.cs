/* 
 * v1 Waste Register public Api
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// WasteRegisterPublicApiApiModelsElasticsearchTerytEs
    /// </summary>
    [DataContract]
    public partial class WasteRegisterPublicApiApiModelsElasticsearchTerytEs :  IEquatable<WasteRegisterPublicApiApiModelsElasticsearchTerytEs>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="WasteRegisterPublicApiApiModelsElasticsearchTerytEs" /> class.
        /// </summary>
        /// <param name="pk">pk.</param>
        /// <param name="fulltext">fulltext.</param>
        /// <param name="formattedFulltext">formattedFulltext.</param>
        /// <param name="htmlFulltext">htmlFulltext.</param>
        /// <param name="wojewodztwo">wojewodztwo.</param>
        /// <param name="powiat">powiat.</param>
        /// <param name="gmina">gmina.</param>
        /// <param name="rodzajGminy">rodzajGminy.</param>
        /// <param name="miejscowosc">miejscowosc.</param>
        /// <param name="miejscowoscPodstawowa">miejscowoscPodstawowa.</param>
        /// <param name="rodzajMiejscowosci">rodzajMiejscowosci.</param>
        /// <param name="ulica">ulica.</param>
        /// <param name="rodzajUlicy">rodzajUlicy.</param>
        /// <param name="brakUlicy">brakUlicy.</param>
        /// <param name="exactGmMie">exactGmMie.</param>
        public WasteRegisterPublicApiApiModelsElasticsearchTerytEs(string pk = default(string), string fulltext = default(string), string formattedFulltext = default(string), string htmlFulltext = default(string), string wojewodztwo = default(string), string powiat = default(string), string gmina = default(string), string rodzajGminy = default(string), string miejscowosc = default(string), string miejscowoscPodstawowa = default(string), string rodzajMiejscowosci = default(string), string ulica = default(string), string rodzajUlicy = default(string), string brakUlicy = default(string), string exactGmMie = default(string))
        {
            this.Pk = pk;
            this.Fulltext = fulltext;
            this.FormattedFulltext = formattedFulltext;
            this.HtmlFulltext = htmlFulltext;
            this.Wojewodztwo = wojewodztwo;
            this.Powiat = powiat;
            this.Gmina = gmina;
            this.RodzajGminy = rodzajGminy;
            this.Miejscowosc = miejscowosc;
            this.MiejscowoscPodstawowa = miejscowoscPodstawowa;
            this.RodzajMiejscowosci = rodzajMiejscowosci;
            this.Ulica = ulica;
            this.RodzajUlicy = rodzajUlicy;
            this.BrakUlicy = brakUlicy;
            this.ExactGmMie = exactGmMie;
        }
        
        /// <summary>
        /// Gets or Sets Pk
        /// </summary>
        [DataMember(Name="pk", EmitDefaultValue=false)]
        public string Pk { get; set; }

        /// <summary>
        /// Gets or Sets Fulltext
        /// </summary>
        [DataMember(Name="fulltext", EmitDefaultValue=false)]
        public string Fulltext { get; set; }

        /// <summary>
        /// Gets or Sets FormattedFulltext
        /// </summary>
        [DataMember(Name="formatted_fulltext", EmitDefaultValue=false)]
        public string FormattedFulltext { get; set; }

        /// <summary>
        /// Gets or Sets HtmlFulltext
        /// </summary>
        [DataMember(Name="html_fulltext", EmitDefaultValue=false)]
        public string HtmlFulltext { get; set; }

        /// <summary>
        /// Gets or Sets Wojewodztwo
        /// </summary>
        [DataMember(Name="wojewodztwo", EmitDefaultValue=false)]
        public string Wojewodztwo { get; set; }

        /// <summary>
        /// Gets or Sets Powiat
        /// </summary>
        [DataMember(Name="powiat", EmitDefaultValue=false)]
        public string Powiat { get; set; }

        /// <summary>
        /// Gets or Sets Gmina
        /// </summary>
        [DataMember(Name="gmina", EmitDefaultValue=false)]
        public string Gmina { get; set; }

        /// <summary>
        /// Gets or Sets RodzajGminy
        /// </summary>
        [DataMember(Name="rodzaj_gminy", EmitDefaultValue=false)]
        public string RodzajGminy { get; set; }

        /// <summary>
        /// Gets or Sets Miejscowosc
        /// </summary>
        [DataMember(Name="miejscowosc", EmitDefaultValue=false)]
        public string Miejscowosc { get; set; }

        /// <summary>
        /// Gets or Sets MiejscowoscPodstawowa
        /// </summary>
        [DataMember(Name="miejscowosc_podstawowa", EmitDefaultValue=false)]
        public string MiejscowoscPodstawowa { get; set; }

        /// <summary>
        /// Gets or Sets RodzajMiejscowosci
        /// </summary>
        [DataMember(Name="rodzaj_miejscowosci", EmitDefaultValue=false)]
        public string RodzajMiejscowosci { get; set; }

        /// <summary>
        /// Gets or Sets Ulica
        /// </summary>
        [DataMember(Name="ulica", EmitDefaultValue=false)]
        public string Ulica { get; set; }

        /// <summary>
        /// Gets or Sets RodzajUlicy
        /// </summary>
        [DataMember(Name="rodzaj_ulicy", EmitDefaultValue=false)]
        public string RodzajUlicy { get; set; }

        /// <summary>
        /// Gets or Sets BrakUlicy
        /// </summary>
        [DataMember(Name="brak_ulicy", EmitDefaultValue=false)]
        public string BrakUlicy { get; set; }

        /// <summary>
        /// Gets or Sets ExactGmMie
        /// </summary>
        [DataMember(Name="exact_gm_mie", EmitDefaultValue=false)]
        public string ExactGmMie { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class WasteRegisterPublicApiApiModelsElasticsearchTerytEs {\n");
            sb.Append("  Pk: ").Append(Pk).Append("\n");
            sb.Append("  Fulltext: ").Append(Fulltext).Append("\n");
            sb.Append("  FormattedFulltext: ").Append(FormattedFulltext).Append("\n");
            sb.Append("  HtmlFulltext: ").Append(HtmlFulltext).Append("\n");
            sb.Append("  Wojewodztwo: ").Append(Wojewodztwo).Append("\n");
            sb.Append("  Powiat: ").Append(Powiat).Append("\n");
            sb.Append("  Gmina: ").Append(Gmina).Append("\n");
            sb.Append("  RodzajGminy: ").Append(RodzajGminy).Append("\n");
            sb.Append("  Miejscowosc: ").Append(Miejscowosc).Append("\n");
            sb.Append("  MiejscowoscPodstawowa: ").Append(MiejscowoscPodstawowa).Append("\n");
            sb.Append("  RodzajMiejscowosci: ").Append(RodzajMiejscowosci).Append("\n");
            sb.Append("  Ulica: ").Append(Ulica).Append("\n");
            sb.Append("  RodzajUlicy: ").Append(RodzajUlicy).Append("\n");
            sb.Append("  BrakUlicy: ").Append(BrakUlicy).Append("\n");
            sb.Append("  ExactGmMie: ").Append(ExactGmMie).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as WasteRegisterPublicApiApiModelsElasticsearchTerytEs);
        }

        /// <summary>
        /// Returns true if WasteRegisterPublicApiApiModelsElasticsearchTerytEs instances are equal
        /// </summary>
        /// <param name="input">Instance of WasteRegisterPublicApiApiModelsElasticsearchTerytEs to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(WasteRegisterPublicApiApiModelsElasticsearchTerytEs input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Pk == input.Pk ||
                    (this.Pk != null &&
                    this.Pk.Equals(input.Pk))
                ) && 
                (
                    this.Fulltext == input.Fulltext ||
                    (this.Fulltext != null &&
                    this.Fulltext.Equals(input.Fulltext))
                ) && 
                (
                    this.FormattedFulltext == input.FormattedFulltext ||
                    (this.FormattedFulltext != null &&
                    this.FormattedFulltext.Equals(input.FormattedFulltext))
                ) && 
                (
                    this.HtmlFulltext == input.HtmlFulltext ||
                    (this.HtmlFulltext != null &&
                    this.HtmlFulltext.Equals(input.HtmlFulltext))
                ) && 
                (
                    this.Wojewodztwo == input.Wojewodztwo ||
                    (this.Wojewodztwo != null &&
                    this.Wojewodztwo.Equals(input.Wojewodztwo))
                ) && 
                (
                    this.Powiat == input.Powiat ||
                    (this.Powiat != null &&
                    this.Powiat.Equals(input.Powiat))
                ) && 
                (
                    this.Gmina == input.Gmina ||
                    (this.Gmina != null &&
                    this.Gmina.Equals(input.Gmina))
                ) && 
                (
                    this.RodzajGminy == input.RodzajGminy ||
                    (this.RodzajGminy != null &&
                    this.RodzajGminy.Equals(input.RodzajGminy))
                ) && 
                (
                    this.Miejscowosc == input.Miejscowosc ||
                    (this.Miejscowosc != null &&
                    this.Miejscowosc.Equals(input.Miejscowosc))
                ) && 
                (
                    this.MiejscowoscPodstawowa == input.MiejscowoscPodstawowa ||
                    (this.MiejscowoscPodstawowa != null &&
                    this.MiejscowoscPodstawowa.Equals(input.MiejscowoscPodstawowa))
                ) && 
                (
                    this.RodzajMiejscowosci == input.RodzajMiejscowosci ||
                    (this.RodzajMiejscowosci != null &&
                    this.RodzajMiejscowosci.Equals(input.RodzajMiejscowosci))
                ) && 
                (
                    this.Ulica == input.Ulica ||
                    (this.Ulica != null &&
                    this.Ulica.Equals(input.Ulica))
                ) && 
                (
                    this.RodzajUlicy == input.RodzajUlicy ||
                    (this.RodzajUlicy != null &&
                    this.RodzajUlicy.Equals(input.RodzajUlicy))
                ) && 
                (
                    this.BrakUlicy == input.BrakUlicy ||
                    (this.BrakUlicy != null &&
                    this.BrakUlicy.Equals(input.BrakUlicy))
                ) && 
                (
                    this.ExactGmMie == input.ExactGmMie ||
                    (this.ExactGmMie != null &&
                    this.ExactGmMie.Equals(input.ExactGmMie))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Pk != null)
                    hashCode = hashCode * 59 + this.Pk.GetHashCode();
                if (this.Fulltext != null)
                    hashCode = hashCode * 59 + this.Fulltext.GetHashCode();
                if (this.FormattedFulltext != null)
                    hashCode = hashCode * 59 + this.FormattedFulltext.GetHashCode();
                if (this.HtmlFulltext != null)
                    hashCode = hashCode * 59 + this.HtmlFulltext.GetHashCode();
                if (this.Wojewodztwo != null)
                    hashCode = hashCode * 59 + this.Wojewodztwo.GetHashCode();
                if (this.Powiat != null)
                    hashCode = hashCode * 59 + this.Powiat.GetHashCode();
                if (this.Gmina != null)
                    hashCode = hashCode * 59 + this.Gmina.GetHashCode();
                if (this.RodzajGminy != null)
                    hashCode = hashCode * 59 + this.RodzajGminy.GetHashCode();
                if (this.Miejscowosc != null)
                    hashCode = hashCode * 59 + this.Miejscowosc.GetHashCode();
                if (this.MiejscowoscPodstawowa != null)
                    hashCode = hashCode * 59 + this.MiejscowoscPodstawowa.GetHashCode();
                if (this.RodzajMiejscowosci != null)
                    hashCode = hashCode * 59 + this.RodzajMiejscowosci.GetHashCode();
                if (this.Ulica != null)
                    hashCode = hashCode * 59 + this.Ulica.GetHashCode();
                if (this.RodzajUlicy != null)
                    hashCode = hashCode * 59 + this.RodzajUlicy.GetHashCode();
                if (this.BrakUlicy != null)
                    hashCode = hashCode * 59 + this.BrakUlicy.GetHashCode();
                if (this.ExactGmMie != null)
                    hashCode = hashCode * 59 + this.ExactGmMie.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
