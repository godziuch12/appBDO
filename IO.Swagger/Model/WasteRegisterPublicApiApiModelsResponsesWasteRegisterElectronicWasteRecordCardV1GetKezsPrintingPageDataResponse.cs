/* 
 * v1 Waste Register public Api
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// WasteRegisterPublicApiApiModelsResponsesWasteRegisterElectronicWasteRecordCardV1GetKezsPrintingPageDataResponse
    /// </summary>
    [DataContract]
    public partial class WasteRegisterPublicApiApiModelsResponsesWasteRegisterElectronicWasteRecordCardV1GetKezsPrintingPageDataResponse :  IEquatable<WasteRegisterPublicApiApiModelsResponsesWasteRegisterElectronicWasteRecordCardV1GetKezsPrintingPageDataResponse>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="WasteRegisterPublicApiApiModelsResponsesWasteRegisterElectronicWasteRecordCardV1GetKezsPrintingPageDataResponse" /> class.
        /// </summary>
        /// <param name="cardNumber">Numer karty.</param>
        /// <param name="calendarYear">Rok kalendarzowy.</param>
        /// <param name="wasteCodeAndDescription">Kod i opis odpadu.</param>
        /// <param name="groupName">groupName.</param>
        /// <param name="companyName">Nazwa lub imię i nazwisko.</param>
        /// <param name="companyIdentificationNumber">Numer rejestrowy.</param>
        /// <param name="nip">NIP.</param>
        /// <param name="nipEu">nipEu.</param>
        /// <param name="address">address.</param>
        /// <param name="isWasteReceive">isWasteReceive.</param>
        /// <param name="isWasteCollecting">Zb - zbieranie odpadów.</param>
        /// <param name="isSalvage">Od - odzysk.</param>
        /// <param name="isNeutralization">Un - unieszkodliwianie.</param>
        /// <param name="eupIdentificationNumber">Numer miejsca prowadzenia działalności.</param>
        /// <param name="name">name.</param>
        /// <param name="addressHtml">Adres.</param>
        /// <param name="kezsList">kezsList.</param>
        /// <param name="collectedFromUserTotalMass">collectedFromUserTotalMass.</param>
        /// <param name="collectedFromOtherUserTotalMass">collectedFromOtherUserTotalMass.</param>
        /// <param name="managmentHandedOverTotalMass">managmentHandedOverTotalMass.</param>
        /// <param name="managmentUsedTotalMass">managmentUsedTotalMass.</param>
        /// <param name="managmentRecycledTotalMass">managmentRecycledTotalMass.</param>
        /// <param name="recycledPartsEquipmentTotalMass">recycledPartsEquipmentTotalMass.</param>
        /// <param name="usedEquipmentTotalMass">usedEquipmentTotalMass.</param>
        /// <param name="onOnesOwnRecycledTotalMass">onOnesOwnRecycledTotalMass.</param>
        /// <param name="handedoverTotalMass">handedoverTotalMass.</param>
        /// <param name="wasteCodeExtended">Kod ex.</param>
        /// <param name="wasteCodeExtendedDescription">Rodzaj odpadu ex.</param>
        /// <param name="hazardousWasteReclassification">Zmiana statusu odpadów niebezpiecznych na odpady inne niż niebezpieczne.</param>
        /// <param name="hazardousWasteReclassificationDescription">Rodzaj odpadu.</param>
        public WasteRegisterPublicApiApiModelsResponsesWasteRegisterElectronicWasteRecordCardV1GetKezsPrintingPageDataResponse(string cardNumber = default(string), string calendarYear = default(string), string wasteCodeAndDescription = default(string), string groupName = default(string), string companyName = default(string), string companyIdentificationNumber = default(string), string nip = default(string), string nipEu = default(string), string address = default(string), bool? isWasteReceive = default(bool?), bool? isWasteCollecting = default(bool?), bool? isSalvage = default(bool?), bool? isNeutralization = default(bool?), string eupIdentificationNumber = default(string), string name = default(string), string addressHtml = default(string), List<WasteRegisterPublicApiApiModelsResponsesWasteRegisterElectronicWasteRecordCardV1KezsListItemPrintingPage> kezsList = default(List<WasteRegisterPublicApiApiModelsResponsesWasteRegisterElectronicWasteRecordCardV1KezsListItemPrintingPage>), double? collectedFromUserTotalMass = default(double?), double? collectedFromOtherUserTotalMass = default(double?), double? managmentHandedOverTotalMass = default(double?), double? managmentUsedTotalMass = default(double?), double? managmentRecycledTotalMass = default(double?), double? recycledPartsEquipmentTotalMass = default(double?), double? usedEquipmentTotalMass = default(double?), double? onOnesOwnRecycledTotalMass = default(double?), double? handedoverTotalMass = default(double?), bool? wasteCodeExtended = default(bool?), string wasteCodeExtendedDescription = default(string), bool? hazardousWasteReclassification = default(bool?), string hazardousWasteReclassificationDescription = default(string))
        {
            this.CardNumber = cardNumber;
            this.CalendarYear = calendarYear;
            this.WasteCodeAndDescription = wasteCodeAndDescription;
            this.GroupName = groupName;
            this.CompanyName = companyName;
            this.CompanyIdentificationNumber = companyIdentificationNumber;
            this.Nip = nip;
            this.NipEu = nipEu;
            this.Address = address;
            this.IsWasteReceive = isWasteReceive;
            this.IsWasteCollecting = isWasteCollecting;
            this.IsSalvage = isSalvage;
            this.IsNeutralization = isNeutralization;
            this.EupIdentificationNumber = eupIdentificationNumber;
            this.Name = name;
            this.AddressHtml = addressHtml;
            this.KezsList = kezsList;
            this.CollectedFromUserTotalMass = collectedFromUserTotalMass;
            this.CollectedFromOtherUserTotalMass = collectedFromOtherUserTotalMass;
            this.ManagmentHandedOverTotalMass = managmentHandedOverTotalMass;
            this.ManagmentUsedTotalMass = managmentUsedTotalMass;
            this.ManagmentRecycledTotalMass = managmentRecycledTotalMass;
            this.RecycledPartsEquipmentTotalMass = recycledPartsEquipmentTotalMass;
            this.UsedEquipmentTotalMass = usedEquipmentTotalMass;
            this.OnOnesOwnRecycledTotalMass = onOnesOwnRecycledTotalMass;
            this.HandedoverTotalMass = handedoverTotalMass;
            this.WasteCodeExtended = wasteCodeExtended;
            this.WasteCodeExtendedDescription = wasteCodeExtendedDescription;
            this.HazardousWasteReclassification = hazardousWasteReclassification;
            this.HazardousWasteReclassificationDescription = hazardousWasteReclassificationDescription;
        }
        
        /// <summary>
        /// Numer karty
        /// </summary>
        /// <value>Numer karty</value>
        [DataMember(Name="cardNumber", EmitDefaultValue=false)]
        public string CardNumber { get; set; }

        /// <summary>
        /// Rok kalendarzowy
        /// </summary>
        /// <value>Rok kalendarzowy</value>
        [DataMember(Name="calendarYear", EmitDefaultValue=false)]
        public string CalendarYear { get; set; }

        /// <summary>
        /// Kod i opis odpadu
        /// </summary>
        /// <value>Kod i opis odpadu</value>
        [DataMember(Name="wasteCodeAndDescription", EmitDefaultValue=false)]
        public string WasteCodeAndDescription { get; set; }

        /// <summary>
        /// Gets or Sets GroupName
        /// </summary>
        [DataMember(Name="groupName", EmitDefaultValue=false)]
        public string GroupName { get; set; }

        /// <summary>
        /// Nazwa lub imię i nazwisko
        /// </summary>
        /// <value>Nazwa lub imię i nazwisko</value>
        [DataMember(Name="companyName", EmitDefaultValue=false)]
        public string CompanyName { get; set; }

        /// <summary>
        /// Numer rejestrowy
        /// </summary>
        /// <value>Numer rejestrowy</value>
        [DataMember(Name="companyIdentificationNumber", EmitDefaultValue=false)]
        public string CompanyIdentificationNumber { get; set; }

        /// <summary>
        /// NIP
        /// </summary>
        /// <value>NIP</value>
        [DataMember(Name="nip", EmitDefaultValue=false)]
        public string Nip { get; set; }

        /// <summary>
        /// Gets or Sets NipEu
        /// </summary>
        [DataMember(Name="nipEu", EmitDefaultValue=false)]
        public string NipEu { get; set; }

        /// <summary>
        /// Gets or Sets Address
        /// </summary>
        [DataMember(Name="address", EmitDefaultValue=false)]
        public string Address { get; set; }

        /// <summary>
        /// Gets or Sets IsWasteReceive
        /// </summary>
        [DataMember(Name="isWasteReceive", EmitDefaultValue=false)]
        public bool? IsWasteReceive { get; set; }

        /// <summary>
        /// Zb - zbieranie odpadów
        /// </summary>
        /// <value>Zb - zbieranie odpadów</value>
        [DataMember(Name="isWasteCollecting", EmitDefaultValue=false)]
        public bool? IsWasteCollecting { get; set; }

        /// <summary>
        /// Od - odzysk
        /// </summary>
        /// <value>Od - odzysk</value>
        [DataMember(Name="isSalvage", EmitDefaultValue=false)]
        public bool? IsSalvage { get; set; }

        /// <summary>
        /// Un - unieszkodliwianie
        /// </summary>
        /// <value>Un - unieszkodliwianie</value>
        [DataMember(Name="isNeutralization", EmitDefaultValue=false)]
        public bool? IsNeutralization { get; set; }

        /// <summary>
        /// Numer miejsca prowadzenia działalności
        /// </summary>
        /// <value>Numer miejsca prowadzenia działalności</value>
        [DataMember(Name="eupIdentificationNumber", EmitDefaultValue=false)]
        public string EupIdentificationNumber { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string Name { get; set; }

        /// <summary>
        /// Adres
        /// </summary>
        /// <value>Adres</value>
        [DataMember(Name="addressHtml", EmitDefaultValue=false)]
        public string AddressHtml { get; set; }

        /// <summary>
        /// Gets or Sets KezsList
        /// </summary>
        [DataMember(Name="kezsList", EmitDefaultValue=false)]
        public List<WasteRegisterPublicApiApiModelsResponsesWasteRegisterElectronicWasteRecordCardV1KezsListItemPrintingPage> KezsList { get; set; }

        /// <summary>
        /// Gets or Sets CollectedFromUserTotalMass
        /// </summary>
        [DataMember(Name="collectedFromUserTotalMass", EmitDefaultValue=false)]
        public double? CollectedFromUserTotalMass { get; set; }

        /// <summary>
        /// Gets or Sets CollectedFromOtherUserTotalMass
        /// </summary>
        [DataMember(Name="collectedFromOtherUserTotalMass", EmitDefaultValue=false)]
        public double? CollectedFromOtherUserTotalMass { get; set; }

        /// <summary>
        /// Gets or Sets ManagmentHandedOverTotalMass
        /// </summary>
        [DataMember(Name="managmentHandedOverTotalMass", EmitDefaultValue=false)]
        public double? ManagmentHandedOverTotalMass { get; set; }

        /// <summary>
        /// Gets or Sets ManagmentUsedTotalMass
        /// </summary>
        [DataMember(Name="managmentUsedTotalMass", EmitDefaultValue=false)]
        public double? ManagmentUsedTotalMass { get; set; }

        /// <summary>
        /// Gets or Sets ManagmentRecycledTotalMass
        /// </summary>
        [DataMember(Name="managmentRecycledTotalMass", EmitDefaultValue=false)]
        public double? ManagmentRecycledTotalMass { get; set; }

        /// <summary>
        /// Gets or Sets RecycledPartsEquipmentTotalMass
        /// </summary>
        [DataMember(Name="recycledPartsEquipmentTotalMass", EmitDefaultValue=false)]
        public double? RecycledPartsEquipmentTotalMass { get; set; }

        /// <summary>
        /// Gets or Sets UsedEquipmentTotalMass
        /// </summary>
        [DataMember(Name="usedEquipmentTotalMass", EmitDefaultValue=false)]
        public double? UsedEquipmentTotalMass { get; set; }

        /// <summary>
        /// Gets or Sets OnOnesOwnRecycledTotalMass
        /// </summary>
        [DataMember(Name="onOnesOwnRecycledTotalMass", EmitDefaultValue=false)]
        public double? OnOnesOwnRecycledTotalMass { get; set; }

        /// <summary>
        /// Gets or Sets HandedoverTotalMass
        /// </summary>
        [DataMember(Name="handedoverTotalMass", EmitDefaultValue=false)]
        public double? HandedoverTotalMass { get; set; }

        /// <summary>
        /// Kod ex
        /// </summary>
        /// <value>Kod ex</value>
        [DataMember(Name="wasteCodeExtended", EmitDefaultValue=false)]
        public bool? WasteCodeExtended { get; set; }

        /// <summary>
        /// Rodzaj odpadu ex
        /// </summary>
        /// <value>Rodzaj odpadu ex</value>
        [DataMember(Name="wasteCodeExtendedDescription", EmitDefaultValue=false)]
        public string WasteCodeExtendedDescription { get; set; }

        /// <summary>
        /// Zmiana statusu odpadów niebezpiecznych na odpady inne niż niebezpieczne
        /// </summary>
        /// <value>Zmiana statusu odpadów niebezpiecznych na odpady inne niż niebezpieczne</value>
        [DataMember(Name="hazardousWasteReclassification", EmitDefaultValue=false)]
        public bool? HazardousWasteReclassification { get; set; }

        /// <summary>
        /// Rodzaj odpadu
        /// </summary>
        /// <value>Rodzaj odpadu</value>
        [DataMember(Name="hazardousWasteReclassificationDescription", EmitDefaultValue=false)]
        public string HazardousWasteReclassificationDescription { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class WasteRegisterPublicApiApiModelsResponsesWasteRegisterElectronicWasteRecordCardV1GetKezsPrintingPageDataResponse {\n");
            sb.Append("  CardNumber: ").Append(CardNumber).Append("\n");
            sb.Append("  CalendarYear: ").Append(CalendarYear).Append("\n");
            sb.Append("  WasteCodeAndDescription: ").Append(WasteCodeAndDescription).Append("\n");
            sb.Append("  GroupName: ").Append(GroupName).Append("\n");
            sb.Append("  CompanyName: ").Append(CompanyName).Append("\n");
            sb.Append("  CompanyIdentificationNumber: ").Append(CompanyIdentificationNumber).Append("\n");
            sb.Append("  Nip: ").Append(Nip).Append("\n");
            sb.Append("  NipEu: ").Append(NipEu).Append("\n");
            sb.Append("  Address: ").Append(Address).Append("\n");
            sb.Append("  IsWasteReceive: ").Append(IsWasteReceive).Append("\n");
            sb.Append("  IsWasteCollecting: ").Append(IsWasteCollecting).Append("\n");
            sb.Append("  IsSalvage: ").Append(IsSalvage).Append("\n");
            sb.Append("  IsNeutralization: ").Append(IsNeutralization).Append("\n");
            sb.Append("  EupIdentificationNumber: ").Append(EupIdentificationNumber).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  AddressHtml: ").Append(AddressHtml).Append("\n");
            sb.Append("  KezsList: ").Append(KezsList).Append("\n");
            sb.Append("  CollectedFromUserTotalMass: ").Append(CollectedFromUserTotalMass).Append("\n");
            sb.Append("  CollectedFromOtherUserTotalMass: ").Append(CollectedFromOtherUserTotalMass).Append("\n");
            sb.Append("  ManagmentHandedOverTotalMass: ").Append(ManagmentHandedOverTotalMass).Append("\n");
            sb.Append("  ManagmentUsedTotalMass: ").Append(ManagmentUsedTotalMass).Append("\n");
            sb.Append("  ManagmentRecycledTotalMass: ").Append(ManagmentRecycledTotalMass).Append("\n");
            sb.Append("  RecycledPartsEquipmentTotalMass: ").Append(RecycledPartsEquipmentTotalMass).Append("\n");
            sb.Append("  UsedEquipmentTotalMass: ").Append(UsedEquipmentTotalMass).Append("\n");
            sb.Append("  OnOnesOwnRecycledTotalMass: ").Append(OnOnesOwnRecycledTotalMass).Append("\n");
            sb.Append("  HandedoverTotalMass: ").Append(HandedoverTotalMass).Append("\n");
            sb.Append("  WasteCodeExtended: ").Append(WasteCodeExtended).Append("\n");
            sb.Append("  WasteCodeExtendedDescription: ").Append(WasteCodeExtendedDescription).Append("\n");
            sb.Append("  HazardousWasteReclassification: ").Append(HazardousWasteReclassification).Append("\n");
            sb.Append("  HazardousWasteReclassificationDescription: ").Append(HazardousWasteReclassificationDescription).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as WasteRegisterPublicApiApiModelsResponsesWasteRegisterElectronicWasteRecordCardV1GetKezsPrintingPageDataResponse);
        }

        /// <summary>
        /// Returns true if WasteRegisterPublicApiApiModelsResponsesWasteRegisterElectronicWasteRecordCardV1GetKezsPrintingPageDataResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of WasteRegisterPublicApiApiModelsResponsesWasteRegisterElectronicWasteRecordCardV1GetKezsPrintingPageDataResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(WasteRegisterPublicApiApiModelsResponsesWasteRegisterElectronicWasteRecordCardV1GetKezsPrintingPageDataResponse input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.CardNumber == input.CardNumber ||
                    (this.CardNumber != null &&
                    this.CardNumber.Equals(input.CardNumber))
                ) && 
                (
                    this.CalendarYear == input.CalendarYear ||
                    (this.CalendarYear != null &&
                    this.CalendarYear.Equals(input.CalendarYear))
                ) && 
                (
                    this.WasteCodeAndDescription == input.WasteCodeAndDescription ||
                    (this.WasteCodeAndDescription != null &&
                    this.WasteCodeAndDescription.Equals(input.WasteCodeAndDescription))
                ) && 
                (
                    this.GroupName == input.GroupName ||
                    (this.GroupName != null &&
                    this.GroupName.Equals(input.GroupName))
                ) && 
                (
                    this.CompanyName == input.CompanyName ||
                    (this.CompanyName != null &&
                    this.CompanyName.Equals(input.CompanyName))
                ) && 
                (
                    this.CompanyIdentificationNumber == input.CompanyIdentificationNumber ||
                    (this.CompanyIdentificationNumber != null &&
                    this.CompanyIdentificationNumber.Equals(input.CompanyIdentificationNumber))
                ) && 
                (
                    this.Nip == input.Nip ||
                    (this.Nip != null &&
                    this.Nip.Equals(input.Nip))
                ) && 
                (
                    this.NipEu == input.NipEu ||
                    (this.NipEu != null &&
                    this.NipEu.Equals(input.NipEu))
                ) && 
                (
                    this.Address == input.Address ||
                    (this.Address != null &&
                    this.Address.Equals(input.Address))
                ) && 
                (
                    this.IsWasteReceive == input.IsWasteReceive ||
                    (this.IsWasteReceive != null &&
                    this.IsWasteReceive.Equals(input.IsWasteReceive))
                ) && 
                (
                    this.IsWasteCollecting == input.IsWasteCollecting ||
                    (this.IsWasteCollecting != null &&
                    this.IsWasteCollecting.Equals(input.IsWasteCollecting))
                ) && 
                (
                    this.IsSalvage == input.IsSalvage ||
                    (this.IsSalvage != null &&
                    this.IsSalvage.Equals(input.IsSalvage))
                ) && 
                (
                    this.IsNeutralization == input.IsNeutralization ||
                    (this.IsNeutralization != null &&
                    this.IsNeutralization.Equals(input.IsNeutralization))
                ) && 
                (
                    this.EupIdentificationNumber == input.EupIdentificationNumber ||
                    (this.EupIdentificationNumber != null &&
                    this.EupIdentificationNumber.Equals(input.EupIdentificationNumber))
                ) && 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.AddressHtml == input.AddressHtml ||
                    (this.AddressHtml != null &&
                    this.AddressHtml.Equals(input.AddressHtml))
                ) && 
                (
                    this.KezsList == input.KezsList ||
                    this.KezsList != null &&
                    this.KezsList.SequenceEqual(input.KezsList)
                ) && 
                (
                    this.CollectedFromUserTotalMass == input.CollectedFromUserTotalMass ||
                    (this.CollectedFromUserTotalMass != null &&
                    this.CollectedFromUserTotalMass.Equals(input.CollectedFromUserTotalMass))
                ) && 
                (
                    this.CollectedFromOtherUserTotalMass == input.CollectedFromOtherUserTotalMass ||
                    (this.CollectedFromOtherUserTotalMass != null &&
                    this.CollectedFromOtherUserTotalMass.Equals(input.CollectedFromOtherUserTotalMass))
                ) && 
                (
                    this.ManagmentHandedOverTotalMass == input.ManagmentHandedOverTotalMass ||
                    (this.ManagmentHandedOverTotalMass != null &&
                    this.ManagmentHandedOverTotalMass.Equals(input.ManagmentHandedOverTotalMass))
                ) && 
                (
                    this.ManagmentUsedTotalMass == input.ManagmentUsedTotalMass ||
                    (this.ManagmentUsedTotalMass != null &&
                    this.ManagmentUsedTotalMass.Equals(input.ManagmentUsedTotalMass))
                ) && 
                (
                    this.ManagmentRecycledTotalMass == input.ManagmentRecycledTotalMass ||
                    (this.ManagmentRecycledTotalMass != null &&
                    this.ManagmentRecycledTotalMass.Equals(input.ManagmentRecycledTotalMass))
                ) && 
                (
                    this.RecycledPartsEquipmentTotalMass == input.RecycledPartsEquipmentTotalMass ||
                    (this.RecycledPartsEquipmentTotalMass != null &&
                    this.RecycledPartsEquipmentTotalMass.Equals(input.RecycledPartsEquipmentTotalMass))
                ) && 
                (
                    this.UsedEquipmentTotalMass == input.UsedEquipmentTotalMass ||
                    (this.UsedEquipmentTotalMass != null &&
                    this.UsedEquipmentTotalMass.Equals(input.UsedEquipmentTotalMass))
                ) && 
                (
                    this.OnOnesOwnRecycledTotalMass == input.OnOnesOwnRecycledTotalMass ||
                    (this.OnOnesOwnRecycledTotalMass != null &&
                    this.OnOnesOwnRecycledTotalMass.Equals(input.OnOnesOwnRecycledTotalMass))
                ) && 
                (
                    this.HandedoverTotalMass == input.HandedoverTotalMass ||
                    (this.HandedoverTotalMass != null &&
                    this.HandedoverTotalMass.Equals(input.HandedoverTotalMass))
                ) && 
                (
                    this.WasteCodeExtended == input.WasteCodeExtended ||
                    (this.WasteCodeExtended != null &&
                    this.WasteCodeExtended.Equals(input.WasteCodeExtended))
                ) && 
                (
                    this.WasteCodeExtendedDescription == input.WasteCodeExtendedDescription ||
                    (this.WasteCodeExtendedDescription != null &&
                    this.WasteCodeExtendedDescription.Equals(input.WasteCodeExtendedDescription))
                ) && 
                (
                    this.HazardousWasteReclassification == input.HazardousWasteReclassification ||
                    (this.HazardousWasteReclassification != null &&
                    this.HazardousWasteReclassification.Equals(input.HazardousWasteReclassification))
                ) && 
                (
                    this.HazardousWasteReclassificationDescription == input.HazardousWasteReclassificationDescription ||
                    (this.HazardousWasteReclassificationDescription != null &&
                    this.HazardousWasteReclassificationDescription.Equals(input.HazardousWasteReclassificationDescription))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.CardNumber != null)
                    hashCode = hashCode * 59 + this.CardNumber.GetHashCode();
                if (this.CalendarYear != null)
                    hashCode = hashCode * 59 + this.CalendarYear.GetHashCode();
                if (this.WasteCodeAndDescription != null)
                    hashCode = hashCode * 59 + this.WasteCodeAndDescription.GetHashCode();
                if (this.GroupName != null)
                    hashCode = hashCode * 59 + this.GroupName.GetHashCode();
                if (this.CompanyName != null)
                    hashCode = hashCode * 59 + this.CompanyName.GetHashCode();
                if (this.CompanyIdentificationNumber != null)
                    hashCode = hashCode * 59 + this.CompanyIdentificationNumber.GetHashCode();
                if (this.Nip != null)
                    hashCode = hashCode * 59 + this.Nip.GetHashCode();
                if (this.NipEu != null)
                    hashCode = hashCode * 59 + this.NipEu.GetHashCode();
                if (this.Address != null)
                    hashCode = hashCode * 59 + this.Address.GetHashCode();
                if (this.IsWasteReceive != null)
                    hashCode = hashCode * 59 + this.IsWasteReceive.GetHashCode();
                if (this.IsWasteCollecting != null)
                    hashCode = hashCode * 59 + this.IsWasteCollecting.GetHashCode();
                if (this.IsSalvage != null)
                    hashCode = hashCode * 59 + this.IsSalvage.GetHashCode();
                if (this.IsNeutralization != null)
                    hashCode = hashCode * 59 + this.IsNeutralization.GetHashCode();
                if (this.EupIdentificationNumber != null)
                    hashCode = hashCode * 59 + this.EupIdentificationNumber.GetHashCode();
                if (this.Name != null)
                    hashCode = hashCode * 59 + this.Name.GetHashCode();
                if (this.AddressHtml != null)
                    hashCode = hashCode * 59 + this.AddressHtml.GetHashCode();
                if (this.KezsList != null)
                    hashCode = hashCode * 59 + this.KezsList.GetHashCode();
                if (this.CollectedFromUserTotalMass != null)
                    hashCode = hashCode * 59 + this.CollectedFromUserTotalMass.GetHashCode();
                if (this.CollectedFromOtherUserTotalMass != null)
                    hashCode = hashCode * 59 + this.CollectedFromOtherUserTotalMass.GetHashCode();
                if (this.ManagmentHandedOverTotalMass != null)
                    hashCode = hashCode * 59 + this.ManagmentHandedOverTotalMass.GetHashCode();
                if (this.ManagmentUsedTotalMass != null)
                    hashCode = hashCode * 59 + this.ManagmentUsedTotalMass.GetHashCode();
                if (this.ManagmentRecycledTotalMass != null)
                    hashCode = hashCode * 59 + this.ManagmentRecycledTotalMass.GetHashCode();
                if (this.RecycledPartsEquipmentTotalMass != null)
                    hashCode = hashCode * 59 + this.RecycledPartsEquipmentTotalMass.GetHashCode();
                if (this.UsedEquipmentTotalMass != null)
                    hashCode = hashCode * 59 + this.UsedEquipmentTotalMass.GetHashCode();
                if (this.OnOnesOwnRecycledTotalMass != null)
                    hashCode = hashCode * 59 + this.OnOnesOwnRecycledTotalMass.GetHashCode();
                if (this.HandedoverTotalMass != null)
                    hashCode = hashCode * 59 + this.HandedoverTotalMass.GetHashCode();
                if (this.WasteCodeExtended != null)
                    hashCode = hashCode * 59 + this.WasteCodeExtended.GetHashCode();
                if (this.WasteCodeExtendedDescription != null)
                    hashCode = hashCode * 59 + this.WasteCodeExtendedDescription.GetHashCode();
                if (this.HazardousWasteReclassification != null)
                    hashCode = hashCode * 59 + this.HazardousWasteReclassification.GetHashCode();
                if (this.HazardousWasteReclassificationDescription != null)
                    hashCode = hashCode * 59 + this.HazardousWasteReclassificationDescription.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
